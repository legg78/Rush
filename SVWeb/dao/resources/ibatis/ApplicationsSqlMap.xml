<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="application">

    <!--
        Common sql configuration not included in SqlMapConfig
     -->

    <sql id="limitationOpen">
            SELECT *
            FROM (                
    </sql>

    <sql id="limitationOpenCount">
            SELECT count(*)
            FROM (                
    </sql>

    <sql id="limitationClose">
        ) q
        <isNotNull property="limitation" prepend=" WHERE ">$limitation$</isNotNull>
    </sql>

    <sql id="paginatedOpen">
        SELECT *
        FROM(
        SELECT a.*, rownum r
        FROM(
        <include refid="limitationOpen"/>
    </sql>

    <sql id="paginatedClose">
        <include refid="limitationClose"/>
        ) a
        WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
        )
        WHERE r >= (#range.start# + 1)
    </sql>

    <!--
        Queries related to applications
     -->
    <resultMap id="mapping-application" class="ru.bpc.sv2.application.Application">
        <result property="id" column="id"/>
        <result property="seqNum" column="seqnum"/>
        <result property="appType" column="appl_type"/>
        <result property="status" column="appl_status"/>
        <result property="rejectCode" column="reject_code"/>
        <result property="instId" column="inst_id"/>
        <result property="instName" column="inst_name"/>
        <result property="agentId" column="agent_id"/>
        <result property="flowId" column="flow_id"/>
        <result property="sessionFileId" column="session_file_id"/>
        <result property="fileRecNum" column="file_rec_num"/>
        <result property="flowName" column="flow_name"/>
        <result property="applNumber" column="appl_number"/>
        <result property="description" column="appl_description"/>
        <result property="created" column="created"/>
        <result property="lastUpdated" column="last_updated"/>
        <result property="prioritized" column="appl_prioritized"/>
    </resultMap>

    <resultMap id="mapping-flow"
               class="ru.bpc.sv2.application.ApplicationFlow">
        <result property="id" column="id"/>
        <result property="seqnum" column="seqnum"/>
        <result property="appType" column="appl_type"/>
        <result property="instId" column="inst_id"/>
        <result property="instName" column="inst_name"/>
        <result property="templateAppId" column="template_appl_id"/>
        <result property="customerExist" javaType="java.lang.Boolean" column="is_customer_exist"/>
        <result property="contractExist" javaType="java.lang.Boolean" column="is_contract_exist"/>
        <result property="customerType" column="customer_type"/>
        <result property="contractType" column="contract_type"/>
        <result property="modId" column="mod_id"/>
        <result property="modName" column="mod_name"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="lang" column="lang"/>
        <result property="xsdSource" column="xsd_source"/>
        <result property="xsltSource" column="xslt_source"/>
    </resultMap>

    <resultMap id="mapping-stage" class="ru.bpc.sv2.application.ApplicationFlowStage">
        <result property="id" column="id"/>
        <result property="appStatus" column="appl_status"/>
        <result property="flowId" column="flow_id"/>
        <result property="flowName" column="flow_name"/>
        <result property="seqnum" column="seqnum"/>
        <result property="handler" column="handler"/>
        <result property="handlerType" column="handler_type"/>
        <result property="rejectCode" column="reject_code"/>
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
    </resultMap>

    <resultMap id="mapping-transition" class="ru.bpc.sv2.application.ApplicationFlowTransition">
        <result property="id" column="id"/>
        <result property="flowId" column="flow_id"/>
        <result property="preStatus" column="previous_status"/>
        <result property="appStatus" column="appl_status"/>
        <result property="preStatusName" column="previous_status_name"/>
        <result property="appStatusName" column="appl_status_name"/>
        <result property="seqnum" column="seqnum"/>
        <result property="stageId" column="stage_id"/>
        <result property="transitionStageId" column="transition_stage_id"/>
        <result property="stageResult" column="stage_result"/>
        <result property="eventType" column="event_type"/>
        <result property="eventTypeName" column="event_type_name"/>
        <result property="reasonCode" column="reason_code"/>
        <result property="appRejectCode" column="appl_reject_code"/>
        <result property="appRejectName" column="appl_reject_name"/>
        <result property="preRejectCode" column="previous_reject_code"/>
        <result property="preRejectName" column="previous_reject_name"/>
    </resultMap>

    <resultMap id="mapping-flow-filter"
               class="ru.bpc.sv2.application.ApplicationFlowFilter">
        <result property="id" column="id"/>
        <result property="structId" column="struct_id"/>
        <result property="stageId" column="stage_id"/>
        <result property="defaultValue" column="default_value"/>
        <result property="minCount" column="min_count"/>
        <result property="maxCount" column="max_count"/>
        <result property="visible" column="is_visible" javaType="java.lang.Boolean"/>
        <result property="updatable" column="is_updatable" javaType="java.lang.Boolean"/>
        <result property="insertable" column="is_insertable" javaType="java.lang.Boolean"/>
        <result property="lovValue" column="lov_value"/>
        <result property="dataType" column="data_type"/>
        <result property="valueV" column="value_v"/>
        <result property="valueN" column="value_n"/>
        <result property="valueD" column="value_d"/>
    </resultMap>

    <resultMap id="mapping-app-element"
               class="ru.bpc.sv2.application.AppElement">
        <result property="id" column="id"/>
        <result property="elementType" column="element_type"/>
        <result property="systemName" column="name"/>
        <result property="lang" column="lang"/>
        <result property="dataType" column="data_type"/>
        <result property="minLength" column="min_length"/>
        <result property="maxLength" column="max_length"/>
        <result property="minValue" column="min_value"/>
        <result property="maxValue" column="max_value"/>
        <result property="lovId" column="lov_id"/>
        <result property="lovName" column="lov_name"/>
        <result property="defaultValue" column="default_value"/>
        <result property="multiLang" column="is_multilang" javaType="java.lang.Boolean"/>
        <result property="entityType" column="entity_type"/>
        <result property="name" column="label"/>
        <result property="lovValue" column="lov_value"/>
        <result property="valueV" column="value_v"/>
        <result property="valueN" column="value_n"/>
        <result property="valueD" column="value_d"/>
        <result property="editForm" column="edit_form"/>
    </resultMap>

    <resultMap id="mapping-dependence"
               class="ru.bpc.sv2.application.ApplicationDependence">
        <result property="id" column="id"/>
        <result property="structId" column="struct_id"/>
        <result property="dependStructId" column="depend_struct_id"/>
        <result property="seqnum" column="seqnum"/>
        <result property="dependence" column="dependence"/>
        <result property="condition" column="condition"/>
        <result property="description" column="description"/>
        <result property="lang" column="lang"/>
        <result property="affectedZone" column="affected_zone"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="get-applications-cur-map">
        <parameter property="ref_cur" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT" resultMap="mapping-application"/>
        <parameter property="row_count" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="first_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="last_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="tab_name" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="param_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
        <parameter property="sorting_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
    </parameterMap>

    <procedure id="get-applications-cur" parameterMap="get-applications-cur-map">
        {call app_ui_application_search_pkg.get_ref_cur(
              o_ref_cur     => ?
            , i_row_count   => ?
            , i_first_row   => ?
            , i_last_row    => ?
            , i_tab_name    => ?
            , i_param_tab   => ?
            , i_sorting_tab => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="get-applications-cur-count-map">
        <parameter property="row_count" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="OUT"/>
        <parameter property="tab_name" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="param_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
    </parameterMap>

    <procedure id="get-applications-cur-count" parameterMap="get-applications-cur-count-map">
        {call app_ui_application_search_pkg.get_row_count(
              o_row_count => ?
            , i_tab_name  => ?
            , i_param_tab => ?
        )}
    </procedure>

    <resultMap id="mapping-application-element"
               class="ru.bpc.sv2.application.ApplicationElement">
        <result property="id" column="element_id"/>
        <result property="type" column="element_type"/>
        <result property="name" column="name"/>
        <result property="dataType" column="data_type"/>
        <result property="entityType" column="entity_type"/>
        <result property="minLength" column="min_length"/>
        <result property="maxLength" column="max_length"/>
        <result property="lovId" column="lov_id"/>
        <result property="defaultValue" column="default_value"/>
        <result property="parentId" column="parent_element_id"/>
        <result property="appType" column="appl_type"/>
        <result property="minCount" column="min_count"/>
        <result property="maxCount" column="max_count"/>
        <result property="orderNum" column="display_order"/>
        <result property="stId" column="st_id"/>
        <result property="shortDesc" column="caption"/>
        <result property="lang" column="lang"/>
        <result property="path" column="path"/>
        <result property="multiLang" column="is_multilang" javaType="java.lang.Boolean"/>
        <result property="info" column="is_info" javaType="java.lang.Boolean"/>
        <result property="visible" column="is_visible" javaType="java.lang.Boolean"/>
        <result property="updatable" column="is_updatable" javaType="java.lang.Boolean"/>
        <result property="dependence" column="is_dependence" javaType="java.lang.Boolean"/>
        <result property="dependent" column="is_dependent" javaType="java.lang.Boolean"/>
        <result property="value" column="default_value"/>
        <result property="lovValue" column="lov_value"/>
        <result property="valueV" column="value_v"/>
        <result property="valueN" column="value_n"/>
        <result property="valueD" column="value_d"/>
        <result property="minValue" column="min_value"/>
        <result property="maxValue" column="max_value"/>
        <result property="editForm" column="edit_form"/>
        <result property="effectsOnDesc" column="is_parent_desc" javaType="java.lang.Boolean"/>

    </resultMap>

    <resultMap id="mapping-application-edit-element"
               class="ru.bpc.sv2.application.ApplicationElement">
        <result property="id" column="element_id"/>
        <result property="dataId" column="data_id"/>
        <result property="parentDataId" column="parent_data_id"/>
        <result property="innerId" column="serial_number"/>
        <result property="type" column="element_type"/>
        <result property="auto" column="is_auto" jdbcType="NUMBER" javaType="boolean"/>
        <result property="valueLang" column="lang"/>
        <result property="name" column="name"/>
        <result property="dataType" column="data_type"/>
        <result property="minLength" column="min_length"/>
        <result property="maxLength" column="max_length"/>
        <result property="minValue" column="min_value"/>
        <result property="maxValue" column="max_value"/>
        <result property="lovId" column="lov_id"/>

        <result property="defaultValue" column="default_value"/>

        <result property="value" column="element_value"/>
        <result property="lovValue" column="lov_value" />
        <result property="valueV" column="value_v" />
        <result property="valueN" column="value_n" />
        <result property="valueD" column="value_d" />
		<result property="mask" column="value_mask" />
	</resultMap>
	
	<resultMap  id="mapping-application-error-elements"
                class="ru.bpc.sv2.application.ApplicationElement"  >
        <result property="id" column="element_id" />
        <result property="dataId" column="data_id" />
        <result property="parentDataId" column="parent_data_id" />
        <result property="innerId" column="serial_number" />        
        <result property="type" column="element_type"/>
        <result property="value" column="element_value"/>
        <result property="name" column="name"/>
        <result property="dataType" column="data_type"/>
        <result property="valueV" column="value_v"/>
        <result property="errorDetails" column="error_details"/>
        <result property="valueText" column="error_code"/>
    </resultMap>

    <resultMap id="mapping-application-type"
               class="ru.bpc.sv2.application.ApplicationType">
        <result property="appType" column="appl_type"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="mapping-application-structure">
        <parameter property="appType"/>
        <parameter property="parentId"/>
    </parameterMap>

    <select
            id="get-app-structure-root-element"
            parameterClass="ru.bpc.sv2.application.Application"
            resultMap="mapping-application-element">
			SELECT
				st.element_id
				, st.element_type
				, st.name
				, st.data_type
				, st.entity_type
				, st.min_length
				, st.max_length
				, st.lov_id
				, st.default_value
				, st.parent_element_id
				, st.appl_type
				, st.id as st_id
				, st.max_count
				, st.min_count
				, st.display_order
				, st.caption
				, st.is_info
				, st.is_visible
				, st.is_updatable
				, st.is_dependence
				, st.is_dependent
				, st.lang
				, st.is_multilang
				, st.default_char_value value_v
				, st.default_number_value value_n
				, st.default_date_value value_d  
				, st.default_lov_value lov_value
				, null path
				, st.min_value
				, st.max_value
				, st.edit_form
				, st.is_parent_desc
			FROM
				app_ui_structure_vw st
			WHERE
				st.appl_type = #appType# 
				AND st.parent_element_id IS NULL
				AND st.lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY st.display_order ASC
	</select>

    <select
            id="get-app-root-element-for-edit"
            parameterClass="ru.bpc.sv2.application.Application"
            resultMap="mapping-application-edit-element">
			SELECT
				ID data_id
				, element_id
				, parent_id parent_data_id
				, serial_number
				, element_type
				, is_auto
				, lang
				, element_value
				, name
				, data_type
				, min_length
				, max_length
				, min_value
				, max_value
				, lov_id
				, default_value
				, element_char_value value_v
				, element_number_value value_n
				, element_date_value value_d  
				, element_lov_value lov_value
				, null value_mask
			FROM
				app_ui_data_vw
			WHERE
				appl_id = #id# AND
				parent_id IS NULL
	</select>

    <select
            id="get-application-errors"
            parameterClass="qparams"
            resultMap="mapping-application-error-elements">
        SELECT a.ID data_id
        , a.element_id
        , a.parent_id parent_data_id
        , a.serial_number
        , a.element_type
        , a.data_type
        , a.element_value
        , a.name
        , decode(data_type, 'DTTPCHAR',TO_CHAR(element_value),TO_CHAR(NULL)) value_v
        , (select b.element_value from app_ui_data_vw b
        where a.appl_id = b.appl_id and a.parent_id = b.parent_id and b.name = 'ERROR_DETAILS') error_details
        , (select b.element_value from app_ui_data_vw b
        where a.appl_id = b.appl_id and a.parent_id = b.parent_id and b.name = 'ERROR_CODE') error_code
        FROM app_ui_data_vw a
        WHERE a.name = 'ERROR_DESC'
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="appId">appl_id = #filters[].value#</isEqual>
        </iterate>
    </select>

    <select
            id="get-application-errors-count"
            parameterClass="qparams"
            resultClass="int">
        SELECT
        count(id)
        FROM
        app_ui_data_vw
        WHERE
        name = 'ERROR_DESC'
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="appId">appl_id = #filters[].value#</isEqual>
        </iterate>
    </select>

    <select id="get-app-element-childs"
            parameterClass="ru.bpc.sv2.application.ApplicationElementExtended"
            resultMap="mapping-application-element">
        select s.element_id
        , s.element_type
        , s.name
        , s.data_type
        , s.entity_type
        , s.min_length
        , s.max_length
        , s.lov_id
        , s.default_value
        , s.parent_element_id
        , s.appl_type
        , s.id as st_id
        <isNotNull property="stageId">
            , nvl(f.max_count, s.max_count) as max_count
            , nvl(f.min_count, s.min_count) as min_count
        </isNotNull>
        <isNull property="stageId">
            , s.max_count as max_count
            , s.min_count as min_count
        </isNull>
        , s.display_order
        , s.caption
        , s.lang
        , s.is_multilang
        , s.is_info
        <isNotNull property="stageId">
            , nvl(f.is_visible, s.is_visible) as is_visible
            , nvl(f.is_updatable, s.is_updatable) as is_updatable
        </isNotNull>
        <isNull property="stageId">
            , s.is_visible as is_visible
            , s.is_updatable as is_updatable
        </isNull>
        , s.is_dependence
        , s.is_dependent
        <isNotNull property="stageId">
            , nvl(f.default_char_value, s.default_char_value) as value_v
            , nvl(f.default_number_value, s.default_number_value) as value_n
            , nvl(f.default_date_value, s.default_date_value) as value_d
            , nvl(f.default_lov_value, s.default_lov_value) as lov_value
        </isNotNull>
        <isNull property="stageId">
            , s.default_char_value as value_v
            , s.default_number_value as value_n
            , s.default_date_value as value_d
            , s.default_lov_value as lov_value
        </isNull>
        , null as path
        , s.min_value
        , s.max_value
        , s.edit_form
        , s.is_parent_desc
        from app_ui_structure_vw s
        <isNotNull property="stageId">
            , app_ui_flow_filter_vw f
        </isNotNull>
        where s.appl_type = #appType#
        <isNotNull property="stageId">
            and s.id = f.struct_id(+)
            and f.stage_id(+) = #stageId#
        </isNotNull>
        <isNotNull property="instId">
            and (s.inst_id is null or s.inst_id = 9999 or s.inst_id = #instId#)
        </isNotNull>
        and s.parent_element_id = #id#
        and s.lang = com_ui_user_env_pkg.get_user_lang
        order by s.display_order asc
    </select>

    <select
            id="get-app-element-childs-for-edit"
            parameterClass="ru.bpc.sv2.application.ApplicationElement"
            resultMap="mapping-application-edit-element">
		SELECT
			vw.ID data_id
			, vw.element_id
			, vw.parent_id parent_data_id
			, vw.serial_number
			, vw.element_type
			, vw.is_auto
			, vw.lang
			, vw.element_value
			, vw.NAME
			, vw.data_type
			, vw.min_length
			, vw.max_length
			, vw.min_value
			, vw.max_value
			, vw.lov_id
			, vw.DEFAULT_VALUE
       		, vw.element_char_value value_v
			, vw.element_number_value value_n
			, vw.element_date_value value_d
			, vw.element_lov_value lov_value
			, case when name like '%CARD_NUMBER' then
				iss_api_card_pkg.get_card_mask(vw.element_char_value)
		      else
				null
		      end value_mask
		FROM
			app_ui_data_vw vw,
       	app_application app
       	where
       	vw.appl_id = app.id and
		vw.parent_id = #dataId#
	</select>

    <select
            id="get-app-element-childs-for-update"
            parameterClass="ru.bpc.sv2.application.ApplicationElement"
            resultMap="mapping-application-edit-element">
			SELECT
				ID data_id
				, element_id
				, parent_id parent_data_id
				, serial_number
				, element_type
				, is_auto
				, lang
				, element_value
				, NAME
				, data_type
				, min_length
				, max_length
				, min_value
				, max_value
				, lov_id
				, DEFAULT_VALUE
				, element_char_value value_v
				, element_number_value value_n
				, element_date_value value_d  
				, element_lov_value lov_value
				, null value_mask
			FROM
				app_ui_data_vw
			WHERE				
				appl_id = #dataId#

	</select>

    <select
            id="get-app-element-child-nodes"
            parameterClass="ru.bpc.sv2.application.ApplicationElement"
            resultMap="mapping-application-element">
			SELECT
				st.id
				, st.element_type
				, st.name
				, st.data_type
				, st.entity_type
				, st.min_length
				, st.max_length
				, st.lov_id
				, st.default_value
				, st.parent_element_id
				, st.appl_type
				, st.id as st_id
				, st.max_count
				, st.min_count
				, st.display_order
				, st.description
				, st.lang
				, st.is_multilang
				, st.is_info
				, st.is_visible
				, st.is_updatable
				, st.is_dependence
				, st.is_dependent
				, default_char_value value_v
				, default_number_value value_n
				, default_date_value value_d  
				, default_lov_value lov_value
				, null path
				, st.min_value
				, st.max_value
				, st.edit_form
				, st.is_parent_desc
			FROM
				app_ui_structure_vw st
			WHERE
				st.appl_type = #appType# AND
				st.parent_element_id = #id# AND
				st.data_type IS NULL AND
				st.is_visible = 1 AND
				st.element_id != st.parent_element_id
				AND st.lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY st.display_order ASC
	</select>

    <select
            id="get-app-types"
            resultMap="mapping-application-type">
			SELECT
				appl_type
			FROM
				app_application_type
	</select>

    <parameterMap class="java.util.Map" id="next-appl-data-id-map">
        <parameter property="dataId" jdbcType="NUMERIC" javaType="java.lang.Long" mode="OUT"/>
        <parameter property="appId" jdbcType="NUMERIC" javaType="java.lang.Long" mode="IN"/>
    </parameterMap>

    <parameterMap class="java.util.Map" id="next-appl-id-map">
        <parameter property="id" jdbcType="NUMERIC" javaType="java.lang.Long" mode="OUT"/>
    </parameterMap>

    <procedure id="get-next-appl-data-id"
               parameterMap="next-appl-data-id-map">
        {? = call app_ui_application_pkg.get_next_appl_data_id(?)}
    </procedure>

    <procedure id="get-next-appl-id"
               parameterMap="next-appl-id-map">
        {? = call app_ui_application_pkg.get_next_appl_id()}
    </procedure>


    <parameterMap class="java.util.Map" id="get-structure-id-map">
        <parameter property="elementId" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
        <parameter property="parentId" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
    </parameterMap>

    <select id="get-structure-id"
            parameterMap="get-structure-id-map"
            resultClass="int">
		SELECT 
			id
		FROM
			app_ui_structure_vw
		WHERE 
			element_id = ?
			AND parent_element_id = ?
			AND lang = 'LANGENG'
	</select>

    <parameterMap id="add-application-map" class="ru.bpc.sv2.application.Application">
        <parameter property="id" jdbcType="NUMERIC" javaType="java.lang.Long" mode="INOUT"/>
        <parameter property="seqNum" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="INOUT"/>
        <parameter property="appType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="applNumber" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="flowId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="instId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="agentId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="status" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="sessionFileId" jdbcType="NUMERIC" javaType="java.lang.Long" mode="IN"/>
        <parameter property="fileRecNum" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="customerType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="splitHash" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="rejectCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="prioritized" jdbcType="NUMERIC" javaType="java.lang.Boolean" mode="IN"/>
    </parameterMap>

    <procedure id="add-application" parameterMap="add-application-map">
        {call app_ui_application_pkg.add_application(
              io_appl_id         => ?
            , o_seqnum           => ?
            , i_appl_type        => ?
            , i_appl_number      => ?
            , i_flow_id          => ?
            , i_inst_id          => ?
            , i_agent_id         => ?
            , i_appl_status      => ?
            , i_session_file_id  => ?
            , i_file_rec_num     => ?
            , i_customer_type    => ?
            , i_split_hash       => ?
            , i_reject_code      => ?
            , i_appl_prioritized => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="get-appl-struct-map">
        <parameter property="appType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="applNumber" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="flowId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="instId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="agentId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="status" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="customerType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="parentId" jdbcType="NUMERIC" javaType="java.lang.Long" mode="IN"/>
        <parameter property="ref_cursor" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT"
                   resultMap="get-appl-struct-result-map"/>
    </parameterMap>

    <resultMap class="ru.bpc.sv2.application.ApplicationElement" id="get-appl-struct-result-map">
        <result property="dataId" column="data_id"/>
        <result property="id" column="element_id"/>
        <result property="parentDataId" column="parent_data_id"/>
        <result property="innerId" column="serial_number"/>
        <result property="type" column="element_type"/>
        <result property="auto" column="is_auto" jdbcType="NUMBER" javaType="boolean"/>
        <result property="valueLang" column="lang"/>
        <result property="name" column="name"/>
        <result property="dataType" column="data_type"/>
        <result property="minLength" column="min_length"/>
        <result property="maxLength" column="max_length"/>
        <result property="minValue" column="min_value"/>
        <result property="maxValue" column="max_value"/>
        <result property="lovId" column="lov_id"/>
        <result property="defaultValue" column="default_value"/>
        <result property="value" column="element_value"/>
        <result property="lovValue" column="element_lov_value"/>
        <result property="valueV" column="element_char_value"/>
        <result property="valueN" column="element_number_value"/>
        <result property="valueD" column="element_date_value"/>
    </resultMap>

    <procedure id="get-appl-struct"
               parameterMap="get-appl-struct-map">
        {call app_ui_application_pkg.get_application(
        i_appl_type => ?
        , i_appl_number => ?
        , i_flow_id => ?
        , i_inst_id => ?
        , i_agent_id => ?
        , i_appl_status => ?
        , i_customer_type => ?
        , i_parent_id => ?
        , o_ref_cursor => ?
        )}
    </procedure>

    <parameterMap id="add-application-migrate-map" class="ru.bpc.sv2.application.Application">
        <parameter property="id" jdbcType="NUMERIC" javaType="java.lang.Long" mode="INOUT"/>
        <parameter property="seqNum" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="INOUT"/>
        <parameter property="appType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="applNumber" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="flowId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="instId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="agentId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="status" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="sessionFileId" jdbcType="NUMERIC" javaType="java.lang.Long" mode="IN"/>
        <parameter property="fileRecNum" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="customerType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="splitHash" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="prioritized" jdbcType="NUMERIC" javaType="java.lang.Boolean" mode="IN"/>
    </parameterMap>

    <procedure id="add-application-migrate" parameterMap="add-application-migrate-map">
        {call app_ui_application_pkg.add_application_migrate(
              io_appl_id         => ?
            , o_seqnum           => ?
            , i_appl_type        => ?
            , i_appl_number      => ?
            , i_flow_id          => ?
            , i_inst_id          => ?
            , i_agent_id         => ?
            , i_appl_status      => ?
            , i_session_file_id  => ?
            , i_file_rec_num     => ?
            , i_customer_type    => ?
            , i_split_hash       => ?
            , i_appl_prioritized => ?
        )}
    </procedure>


    <procedure id="modify-application" parameterClass="ru.bpc.sv2.application.Application">
        {call app_ui_application_pkg.modify_application(
              i_appl_id           => #id#
            , io_seqnum           => #seqNum,jdbcType=NUMERIC,mode=INOUT#
            , i_appl_status       => #newStatus#
            , i_resp_sess_file_id => NULL
            , i_comments          => #comment#
            , i_reject_code       => #rejectCode#
            , i_appl_prioritized  => #prioritized,jdbcType=NUMERIC,javaType=java.lang.Boolean,mode=IN#
            , i_skip_oper_process => #skipProcessing,jdbcType=NUMERIC,javaType=java.lang.Boolean,mode=IN#
        )}
    </procedure>

    <procedure id="modify-application-with-user" parameterClass="ru.bpc.sv2.application.Application">
        {call app_ui_application_pkg.modify_application(
              i_appl_id           => #id#
            , io_seqnum           => #seqNum,jdbcType=NUMERIC,mode=INOUT#
            , i_appl_status       => #newStatus#
            , i_resp_sess_file_id => NULL
            , i_comments          => #comment#
            , i_reject_code       => #rejectCode#
            , i_event_type        => #eventType#
            , i_user_id           => #userId#
            , i_appl_prioritized  => #prioritized,jdbcType=NUMERIC,javaType=java.lang.Boolean,mode=IN#
            , i_skip_oper_process => #skipProcessing,jdbcType=NUMERIC,javaType=java.lang.Boolean,mode=IN#
        )}
    </procedure>
    
    <procedure id="refuse-application-owner"
               parameterClass="ru.bpc.sv2.application.Application">
        {call csm_ui_case_pkg.refuse_application_owner(
              i_appl_id    => #id#
            , io_seqnum    => #seqNum,jdbcType=NUMERIC,mode=INOUT#
        )}
    </procedure>


    <procedure id="remove-application"
               parameterClass="ru.bpc.sv2.application.Application">
        {call app_ui_application_pkg.remove_application(
        i_appl_id => #id#
        , i_seqnum => #seqNum#
        )}
    </procedure>

    <procedure id="process-application"
               parameterClass="java.lang.Long">
        {call app_ui_application_pkg.process_application(i_appl_id => #value#)}
    </procedure>

    <procedure id="process-application-force"
               parameterClass="java.lang.Long">
        {call app_ui_application_pkg.process_application(i_appl_id => #value#, i_forced_processing => 1)}
    </procedure>

    <select id="get-flows" parameterClass="qparams" resultMap="mapping-flow">
        <include refid="paginatedOpen"/>
        SELECT
        f.id
        , f.seqnum
        , f.appl_type
        , f.inst_id
        , i.name inst_name
        , f.template_appl_id
        , f.is_customer_exist
        , f.is_contract_exist
        , f.customer_type
        , f.contract_type
        , f.mod_id
        , m.name mod_name
        , f.label name
        , f.description
        , f.lang
        , f.xslt_source
        , f.xsd_source
        FROM
        APP_UI_FLOW_VW f
        , OST_UI_INSTITUTION_SYS_VW i
        , RUL_UI_MOD_VW m
        WHERE
        f.inst_id = i.id(+)
        AND i.lang(+)=f.lang
        AND f.mod_id = m.id(+)
        AND f.lang=m.lang(+)
        <iterate prepend=" AND " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">f.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="instId">(f.inst_id = #filters[].value# OR f.inst_id =
                9999)
            </isEqual>
            <isEqual property="filters[].element" compareValue="type">f.appl_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="name">upper(f.label) like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">f.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="customerType">f.customer_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractType">f.contract_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerExist">nvl(is_customer_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractExist">nvl(is_contract_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerTypeNvl">nvl(customer_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractTypeNvl">nvl(contract_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">f.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="name">f.label $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="description">f.description $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="type">f.appl_type $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="instId">f.inst_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="customerType">f.customer_type
                    $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="appType">f.appl_type $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="contractType">f.contract_type
                    $sorting[].direction$
                </isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">upper(t.label) ASC</isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select
            id="get-flows-count"
            parameterClass="qparams"
            resultClass="int">
        <include refid="limitationOpenCount"/>
        SELECT
        ID
        FROM
        APP_UI_FLOW_VW
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="instId">(inst_id = #filters[].value# OR inst_id =
                9999)
            </isEqual>
            <isEqual property="filters[].element" compareValue="type">appl_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="name">upper(label) like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="customerType">customer_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractType">contract_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerExist">nvl(is_customer_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractExist">nvl(is_contract_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerTypeNvl">nvl(customer_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractTypeNvl">nvl(contract_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <select id="get-flows-with-roles" parameterClass="qparams" resultMap="mapping-flow">
        <include refid="paginatedOpen"/>
        SELECT
        f.id
        , f.seqnum
        , f.appl_type
        , f.inst_id
        , i.name inst_name
        , f.template_appl_id
        , f.is_customer_exist
        , f.is_contract_exist
        , f.customer_type
        , f.contract_type
        , f.mod_id
        , m.name mod_name
        , f.label name
        , f.description
        , f.lang
        , f.xslt_source
        , f.xsd_source
        FROM
        APP_UI_FLOW_VW f
        , OST_UI_INSTITUTION_SYS_VW i
        , RUL_UI_MOD_VW m
        WHERE
        f.inst_id = i.id(+)
        AND i.lang(+)=f.lang
        AND f.mod_id = m.id(+)
        AND f.lang=m.lang(+)
        AND f.id in (
        select a.flow_id from acm_cu_flow_vw a
        where A.FLOW_ID = f.id
        <iterate prepend=" AND " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="lang">a.lang = #filters[].value#</isEqual>
        </iterate>
        )
        <iterate prepend=" AND " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">f.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="instId">(f.inst_id = #filters[].value# OR f.inst_id =
                9999)
            </isEqual>
            <isEqual property="filters[].element" compareValue="type">f.appl_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="name">upper(f.label) like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">f.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="customerType">f.customer_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractType">f.contract_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerExist">nvl(is_customer_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractExist">nvl(is_contract_exist, #filters[].value#)
                = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="customerTypeNvl">nvl(customer_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="contractTypeNvl">nvl(contract_type, #filters[].value#) =
                #filters[].value#
            </isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">f.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="name">f.label $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="description">f.description $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="type">f.appl_type $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="instId">f.inst_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="customerType">f.customer_type
                    $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="appType">f.appl_type $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="contractType">f.contract_type
                    $sorting[].direction$
                </isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">upper(t.label) ASC</isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <procedure id="add-flow" parameterClass="ru.bpc.sv2.application.ApplicationFlow">
        {call APP_UI_FLOW_PKG.add(
        o_id => #id,jdbcType=NUMERIC,mode=OUT#
        , o_seqnum => #seqnum,jdbcType=NUMERIC,mode=OUT#
        , i_appl_type => #appType#
        , i_inst_id => #instId#
        , i_template_appl_id => #templateAppId#
        , i_is_customer_exist => #customerExist#
        , i_is_contract_exist => #contractExist#
        , i_customer_type => #customerType#
        , i_contract_type => #contractType#
        , i_mod_id => #modId#
        , i_xslt_source => #xsltSource#
        , i_xsd_source => #xsdSource#
        , i_label => #name#
        , i_description => #description#
        , i_lang => #lang#
        )}
    </procedure>

    <procedure id="edit-flow" parameterClass="ru.bpc.sv2.application.ApplicationFlow">
        {call APP_UI_FLOW_PKG.modify(
        i_id => #id#
        , io_seqnum => #seqnum,jdbcType=NUMERIC,mode=INOUT#
        , i_appl_type => #appType#
        , i_inst_id => #instId#
        , i_template_appl_id => #templateAppId#
        , i_is_customer_exist => #customerExist#
        , i_is_contract_exist => #contractExist#
        , i_customer_type => #customerType#
        , i_contract_type => #contractType#
        , i_mod_id => #modId#
        , i_xslt_source => #xsltSource#
        , i_xsd_source => #xsdSource#
        , i_label => #name#
        , i_description => #description#
        , i_lang => #lang#
        )}
    </procedure>

    <procedure id="delete-flow" parameterClass="ru.bpc.sv2.application.ApplicationFlow">
        {call APP_UI_FLOW_PKG.remove(
        i_id => #id#
        , i_seqnum => #seqnum#
        )}
    </procedure>

    <select id="get-flow-stages" parameterClass="qparams" resultMap="mapping-stage">
        <include refid="paginatedOpen"/>
        select id
             , seqnum
             , appl_status
             , flow_id
             , flow_name
             , handler
             , handler_type
             , reject_code
             , role_id
             , role_name
          from app_ui_flow_stage_vw
        <iterate prepend=" where " conjunction=" and " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="status">upper(appl_status) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="flowId">flow_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="flowName">upper(flow_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="handlerType">handler_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="roleId">role_id = #filters[].value#</isEqual>
        </iterate>
        <iterate prepend="order by" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="auto">
                <isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="status">appl_status $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="flowId">flow_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="flowName">upper(flow_name) $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="roleId">role_id $sorting[].direction$</isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="auto">id asc</isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-flow-stages-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
        select id
          from app_ui_flow_stage_vw
        <iterate prepend=" where " conjunction=" and " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="status">upper(appl_status) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="flowId">flow_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="flowName">upper(flow_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="handlerType">handler_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="roleId">role_id = #filters[].value#</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <procedure id="add-flow-stage" parameterClass="ru.bpc.sv2.application.ApplicationFlowStage">
        {call app_ui_flow_stage_pkg.add (
              o_id           => #id,jdbcType=NUMERIC,mode=OUT#
            , o_seqnum       => #seqnum,jdbcType=NUMERIC,mode=OUT#
            , i_flow_id      => #flowId#
            , i_appl_status  => #appStatus#
            , i_handler      => #handler#
            , i_handler_type => #handlerType#
            , i_reject_code  => #rejectCode#
            , i_role_id      => #roleId#
        )}
    </procedure>

    <procedure id="edit-flow-stage" parameterClass="ru.bpc.sv2.application.ApplicationFlowStage">
        {call app_ui_flow_stage_pkg.modify (
              i_id           => #id#
            , io_seqnum      => #seqnum,jdbcType=NUMERIC,mode=INOUT#
            , i_flow_id      => #flowId#
            , i_appl_status  => #appStatus#
            , i_handler      => #handler#
            , i_handler_type => #handlerType#
            , i_reject_code  => #rejectCode#
            , i_role_id      => #roleId#
        )}
    </procedure>

    <procedure id="delete-flow-stage" parameterClass="ru.bpc.sv2.application.ApplicationFlowStage">
        {call app_ui_flow_stage_pkg.remove (
              i_id     => #id#
            , i_seqnum => #seqnum#
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="map-get-app-initial-status">
        <parameter property="status" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
        <parameter property="flowId" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="IN"/>
    </parameterMap>

    <procedure id="get-app-initial-status" parameterMap="map-get-app-initial-status" resultClass="java.lang.String">
        {? = call app_ui_flow_stage_pkg.get_initial_status( i_flow_id => ? )}
    </procedure>

    <select id="get-flow-stage" parameterClass="ru.bpc.sv2.application.Application" resultMap="mapping-stage">
        select id
             , seqnum
             , appl_status
             , flow_id
             , flow_name
             , handler
             , handler_type
             , reject_code
             , role_id
             , role_name
          from app_ui_flow_stage_vw
         where flow_id = #flowId#
           and appl_status = #status#
        <isNotNull property="rejectCode">
           and reject_code = #rejectCode#
        </isNotNull>
        <isNull property="rejectCode">
           and reject_code is null
        </isNull>
	</select>

    <select id="get-flow-transitions" parameterClass="qparams" resultMap="mapping-transition">
        <include refid="paginatedOpen"/>
        select id
             , flow_id
             , previous_status
             , appl_status
             , previous_status_name
             , appl_status_name
             , previous_reject_code
             , appl_reject_code
             , previous_reject_name
             , appl_reject_name
             , seqnum
             , stage_id
             , transition_stage_id
             , stage_result
             , event_type
             , event_type_name
             , reason_code
          from app_ui_flow_transition_vw
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="flowId">flow_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="status">upper(appl_status) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="appStatusName">upper(appl_status_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="preStatus">upper(previous_status) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="preStatusName">upper(previous_status_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="appRejectCode">upper(appl_reject_code) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="appRejectName">upper(appl_reject_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="preRejectCode">upper(previous_reject_code) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="preRejectName">upper(previous_reject_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="stageId">stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="transitionStageId">transition_stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="stageResult">stage_result = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="reasonCode">reason_code = #filters[].value#</isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="flowId">flow_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="status">appl_status $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="appStatusName">upper(appl_status_name)$sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="preStatus">previous_status $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="preStatusName">upper(previous_status_name)$sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="appRejectCode">appl_reject_code $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="appRejectName">upper(appl_reject_name)$sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="preRejectCode">previous_reject_code $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="preRejectName">upper(previous_reject_name)$sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="reasonCode">reason_code $sorting[].direction$</isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">id asc</isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-flow-transitions-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
        select *
          from app_ui_flow_transition_vw
        <iterate prepend=" where " conjunction=" and " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="flowId">flow_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="status">upper(appl_status) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="appStatusName">upper(appl_status_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="preStatus">previous_status = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="preStatusName">upper(previous_status_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="stageId">stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="transitionStageId">transition_stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="stageResult">stage_result = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="reasonCode">reason_code = #filters[].value#</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <procedure id="add-flow-transition" parameterClass="ru.bpc.sv2.application.ApplicationFlowTransition">
        {call app_ui_flow_transition_pkg.add (
              o_id                  => #id,jdbcType=NUMERIC,mode=OUT#
            , o_seqnum              => #seqnum,jdbcType=NUMERIC,mode=OUT#
            , i_stage_id            => #stageId#
            , i_transition_stage_id => #transitionStageId#
            , i_stage_result        => #stageResult#
            , i_event_type          => #eventType#
            , i_reason_code         => #reasonCode#
        )}
    </procedure>

    <procedure id="edit-flow-transition" parameterClass="ru.bpc.sv2.application.ApplicationFlowTransition">
        {call app_ui_flow_transition_pkg.modify (
              i_id                  => #id#
            , io_seqnum             => #seqnum,jdbcType=NUMERIC,mode=INOUT#
            , i_stage_id            => #stageId#
            , i_transition_stage_id => #transitionStageId#
            , i_stage_result        => #stageResult#
            , i_event_type          => #eventType#
            , i_reason_code         => #reasonCode#
        )}
    </procedure>

    <procedure id="delete-flow-transition" parameterClass="ru.bpc.sv2.application.ApplicationFlowTransition">
        {call app_ui_flow_transition_pkg.remove (
              i_id     => #id#
            , i_seqnum => #seqnum#
        )}
    </procedure>

    <select
            id="get-flow-filters"
            parameterClass="qparams"
            resultMap="mapping-flow-filter">
        <include refid="paginatedOpen"/>
        SELECT
        ID
        , stage_id
        , struct_id
        , seqnum
        , max_count
        , min_count
        , is_visible
        , is_updatable
        , is_insertable
        , default_value
        , data_type
        , default_char_value value_v
        , default_number_value value_n
        , default_date_value value_d
        , default_lov_value lov_value
        FROM
        APP_UI_FLOW_FILTER_VW
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="stageId">stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="structId">struct_id = #filters[].value#</isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="stageId">stage_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="structId">struct_id $sorting[].direction$</isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">
                id ASC
            </isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select
            id="get-flow-filters-count"
            parameterClass="qparams"
            resultClass="int">
        <include refid="limitationOpenCount"/>
        SELECT
        ID
        FROM
        APP_UI_FLOW_FILTER_VW
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="stageId">stage_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="structId">struct_id = #filters[].value#</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

	<resultMap id="mapping-transition-statuses" class="ru.bpc.sv2.application.ApplicationFlowTransition">
		<result property="id" column="id"/>
		<result property="appStatus" column="appl_status"/>
		<result property="appStatusName" column="appl_status_name"/>
		<result property="appRejectCode" column="appl_reject_code"/>
		<result property="appRejectName" column="appl_reject_name"/>
	</resultMap>

    <select
            id="get-transition-app-statuses"
            parameterClass="ru.bpc.sv2.application.Application"
            resultMap="mapping-transition-statuses">
	        SELECT id
	             , appl_status
			     , appl_status_name
			     , appl_reject_code
		         , appl_reject_name
            FROM 
                APP_UI_FLOW_TRANSITION_VW 
            WHERE 
                stage_id = (SELECT 
                				id 
                			FROM 
                				APP_UI_FLOW_STAGE_VW 
                			WHERE 
                				appl_status = #status#
                				AND flow_id = #flowId#
	                			AND nvl(reject_code, 'XXX') = nvl(#rejectCode#, 'XXX')
                			)
	</select>



    <select id="get-transition-app-statuses-no-suc-fail"
            parameterClass="ru.bpc.sv2.application.Application"
            resultMap="mapping-transition-statuses">
        select id
	    	 , appl_status
		     , appl_status_name
		     , appl_reject_code
		     , appl_reject_name
          from app_ui_flow_transition_vw
         where stage_id = (select id
                             from app_ui_flow_stage_vw
                            where appl_status = #status#
                              and flow_id = #flowId#
	    				      and nvl(reject_code, 'XYZ') = nvl(#rejectCode#, 'XYZ')
                          )
           and appl_status != 'APST0007'
           and appl_status != 'APST0008'
    </select>

    <select id="get-app-elements" parameterClass="qparams" resultMap="mapping-app-element">
        <include refid="paginatedOpen"/>
        SELECT
        e.id
        , e.element_type
        , e.name
        , e.data_type
        , e.min_length
        , e.max_length
        , e.min_value
        , e.max_value
        , e.lov_id
        , e.default_value
        , e.is_multilang
        , e.entity_type
        , e.label
        , e.lang
        , e.default_char_value value_v
        , e.default_number_value value_n
        , e.default_date_value value_d
        , e.default_lov_value lov_value
        , com_api_i18n_pkg.get_text ('com_lov', 'name', e.lov_id, e.lang) lov_name
        , e.edit_form
        FROM
        APP_UI_ELEMENT_VW e
        <iterate prepend="WHERE" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="id">e.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lovId">e.lov_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="elementType">e.element_type = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="entityType">e.entity_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="name">e.name like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="label">upper(e.label) like #filters[].value#</isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">e.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="name">e.name $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="entityType">e.entity_type $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="elementType">e.element_type $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="lovId">e.lov_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="label">e.label $sorting[].direction$</isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">e.name ASC</isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-app-elements-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
        SELECT
        id
        FROM
        APP_UI_ELEMENT_VW
        <iterate prepend="WHERE" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lovId">lov_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="elementType">element_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="entityType">entity_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="name">name like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="label">upper(label) like #filters[].value#</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <procedure id="add-app-element" parameterClass="ru.bpc.sv2.application.AppElement">
        {call APP_UI_ELEMENT_PKG.add_element(
        o_element_id => #id,jdbcType=NUMERIC,mode=OUT#
        , i_element_name => #systemName#
        , i_element_type => #elementType#
        , i_data_type => #dataType#
        , i_min_length => #minLength#
        , i_max_length => #maxLength#
        , i_min_value => #minValue#
        , i_max_value => #maxValue#
        , i_lov_id => #lovId#
        , i_default_value => #defaultValue#
        , i_is_multilang => #multiLang#
        , i_entity_type => #entityType#
        , i_short_desc => #name#
        , i_full_desc => #description#
        , i_lang => #lang#
        , i_edit_form => #editForm#
        )}
    </procedure>

    <select
            id="get-dependences"
            parameterClass="qparams"
            resultMap="mapping-dependence">
        <include refid="paginatedOpen"/>
        SELECT
        ID
        , seqnum
        , struct_id
        , depend_struct_id
        , dependence
        , condition
        , affected_zone
        , description
        , lang
        FROM
        APP_UI_DEPENDENCE_VW
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="condition">condition = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="affectedZone">affected_zone = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="structId">struct_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dependStructId">depend_struct_id = #filters[].value#
            </isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="condition">condition $sorting[].direction$
                </isEqual>
                <isEqual property="sorting[].property" compareValue="structId">struct_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="dependStructId">depend_struct_id
                    $sorting[].direction$
                </isEqual>
            </isNotEqual>
            <isEqual property="sorting[].direction" compareValue="AUTO">
                id ASC
            </isEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select
            id="get-dependences-count"
            parameterClass="qparams"
            resultClass="int">
        <include refid="limitationOpenCount"/>
        SELECT
        ID
        FROM
        APP_UI_DEPENDENCE_VW
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="condition">condition = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="affectedZone">affected_zone = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="structId">struct_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dependStructId">depend_struct_id = #filters[].value#
            </isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <select
            id="get-dependences-by-element"
            parameterClass="int"
            resultMap="mapping-dependence">
	                SELECT
	                	ID
						, seqnum
						, struct_id
						, depend_struct_id
						, dependence
						, condition
						, affected_zone
						, description
						, lang
	                FROM 
	                	APP_UI_DEPENDENCE_VW
					WHERE 
						lang = com_ui_user_env_pkg.get_user_lang()
						AND struct_id = #value#
	</select>

    <select
            id="get-dependences-by-dependent-element"
            parameterClass="int"
            resultMap="mapping-dependence">
	                SELECT
	                	ID
						, seqnum
						, struct_id
						, depend_struct_id
						, dependence
						, condition
						, affected_zone
						, description
						, lang
	                FROM 
	                	APP_UI_DEPENDENCE_VW
					WHERE 
						lang = com_ui_user_env_pkg.get_user_lang()
						AND depend_struct_id = #value#
	</select>

    <resultMap id="mapping-element"
               class="ru.bpc.sv2.application.ApplicationElement">
        <result property="id" column="id"/>
        <result property="type" column="element_type"/>
        <result property="name" column="name"/>
        <result property="dataType" column="data_type"/>
        <result property="minLength" column="min_length"/>
        <result property="maxLength" column="max_length"/>
        <result property="lovId" column="lov_id"/>
        <result property="defaultValue" column="default_value"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="property-map-v">
        <parameter property="value" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="dependId" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="elementName" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="valueV" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueN" jdbcType="NUMERIC" javaType="java.lang.Double" mode="IN"/>
        <parameter property="valueD" jdbcType="DATE" javaType="java.util.Date" mode="IN"/>
    </parameterMap>
    <procedure
            id="get-property"
            parameterMap="property-map-v"
            resultClass="string">
        {? = call app_ui_dependence_pkg.get_property_value( i_depend_id => ?
        , i_element_name=> ?
        , i_char_value => ?
        , i_number_value=> ?
        , i_date_value => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="property-map-n">
        <parameter property="value" jdbcType="NUMERIC" javaType="java.lang.Double" mode="OUT"/>
        <parameter property="dependId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="elementName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueV" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueN" jdbcType="NUMERIC" javaType="java.lang.Double" mode="IN"/>
        <parameter property="valueD" jdbcType="DATE" javaType="java.util.Date" mode="IN"/>
    </parameterMap>
    <procedure
            id="get-property_n"
            parameterMap="property-map-n">
        {? = call app_ui_dependence_pkg.get_property_value_n( i_depend_id => ?
        , i_element_name=> ?
        , i_char_value => ?
        , i_number_value=> ?
        , i_date_value => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="property-map-d">
        <parameter property="value" jdbcType="DATE" javaType="java.util.Date" mode="OUT"/>
        <parameter property="dependId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="elementName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueV" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueN" jdbcType="NUMERIC" javaType="java.lang.Double" mode="IN"/>
        <parameter property="valueD" jdbcType="DATE" javaType="java.util.Date" mode="IN"/>
    </parameterMap>
    <procedure
            id="get-property_d"
            parameterMap="property-map-d" resultClass="java.util.Date">
        {? = call app_ui_dependence_pkg.get_property_value_d( i_depend_id => ?
        , i_element_name=> ?
        , i_char_value => ?
        , i_number_value=> ?
        , i_date_value => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="property-map-b">
        <parameter property="value" jdbcType="NUMERIC" javaType="boolean" mode="OUT"/>
        <parameter property="dependId" jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
        <parameter property="elementName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueV" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="valueN" jdbcType="NUMERIC" javaType="java.lang.Double" mode="IN"/>
        <parameter property="valueD" jdbcType="DATE" javaType="java.util.Date" mode="IN"/>
    </parameterMap>
    <procedure
            id="get-property_b"
            parameterMap="property-map-b" resultClass="java.lang.Boolean">
        {? = call app_ui_dependence_pkg.get_property_value_b( i_depend_id => ?
        , i_element_name=> ?
        , i_char_value => ?
        , i_number_value=> ?
        , i_date_value => ?
        )}
    </procedure>

    <select id="execute-dependence-condition"
            parameterClass="java.lang.String"
            resultClass="java.lang.String">
		select $value$ as result from dual
	</select>

    <resultMap id="mapping-contract-object"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="id" column="id"/>
        <result property="number" column="object_number"/>
        <result property="label" column="object_label"/>
        <result property="isChecked" column="is_checked"/>
        <result property="isCheckedOld" column="is_checked"/>
        <result property="contractNumber" column="contract_number"/>
        <result property="minCount" column="min_count" nullValue="0"/>
        <result property="maxCount" column="max_count" nullValue="0"/>
        <result property="currentCount" column="total_count" nullValue="0"/>
        <result property="objectId" column="object_id"/>
    </resultMap>

    <select
            id="get-contract-cards-by-service"
            resultMap="mapping-contract-object"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				cc.card_id id
				, cc.card_number object_number
				, cc.card_number object_label
				, cc.is_service_exist is_checked
				, cc.contract_number
				, cc.min_count
				, cc.max_count
				, cc.total_count
				, cc.service_id	object_id				
			FROM
				iap_ui_card_service_vw cc
			WHERE
				cc.service_id = #objectId#
				AND cc.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY cc.card_number
	</select>

    <select
            id="get-contract-merchants-by-service"
            resultMap="mapping-contract-object"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				cc.merchant_id id
				, cc.merchant_number object_number
				, cc.merchant_number object_label
				, cc.is_service_exist is_checked
				, cc.contract_number
				, cc.min_count
				, cc.max_count
				, cc.total_count
				, cc.service_id	object_id				
			FROM
				aap_ui_merchant_service_vw cc
			WHERE
				cc.service_id = #objectId#
				AND cc.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY cc.merchant_number
	</select>

    <resultMap id="mapping-contract-terminal" extends="mapping-contract-object"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="parentNumber" column="parent_number"/>
    </resultMap>
    <select
            id="get-contract-terminals-by-service"
            resultMap="mapping-contract-terminal"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				cc.terminal_id id
				, cc.terminal_number object_number
				, cc.terminal_number object_label
				, cc.is_service_exist is_checked
				, cc.contract_number
				, cc.merchant_number parent_number
				, cc.min_count
				, cc.max_count
				, cc.total_count
				, cc.service_id	object_id				
			FROM
				aap_ui_terminal_service_vw cc
			WHERE
				cc.service_id = #objectId#
				AND cc.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY cc.terminal_number
	</select>

    <resultMap id="mapping-object-account"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="id" column="id"/>
        <result property="number" column="object_number"/>
        <result property="label" column="object_label"/>
        <result property="isChecked" column="is_checked"/>
        <result property="isCheckedOld" column="is_checked"/>
        <result property="contractNumber" column="contract_number"/>
        <result property="objectId" column="object_id"/>
    </resultMap>

    <resultMap id="mapping-object-account-ext"
               class="ru.bpc.sv2.application.ContractObject"
               extends="mapping-object-account">
        <result property="mask" column="card_mask"/>
    </resultMap>

    <select
            id="get-contract-cards-by-account"
            resultMap="mapping-object-account-ext"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.card_id id
				, ca.card_label object_label
				, ca.card_number object_number
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.account_number object_id
				, ca.card_mask				
			FROM
				iap_ui_card_account_vw ca
			WHERE
				ca.account_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
			ORDER BY ca.card_label
	</select>

    <select
            id="get-contract-cards"
            resultMap="mapping-object-account-ext"
            parameterClass="ru.bpc.sv2.application.ContractObject">
        SELECT
        ca.id
        , ca.card_number object_label
        , ca.card_number object_number
        , 0 is_checked
        , c.contract_number
        , null object_id
        , ca.card_mask
        FROM
        iss_ui_card_vw ca
        , prd_ui_contract_vw c
        WHERE
        ca.contract_id = c.id
        AND c.contract_number = upper(#contractNumber#)
        <isNotNull property="number" prepend=" AND ">ca.card_number like #number#</isNotNull>
        ORDER BY ca.card_number
    </select>

    <select
            id="get-contract-merchants"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.id
				, ca.merchant_name object_label
				, ca.merchant_number object_number
				, 0 is_checked
				, c.contract_number
				, null object_id				
			FROM
				acq_ui_merchant_vw ca
                , prd_ui_contract_vw c
			WHERE
				ca.contract_id = c.id
				AND c.contract_number = upper(#contractNumber#)
				AND ca.lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.merchant_number
	</select>

    <resultMap id="mapping-terminal-account" extends="mapping-object-account"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="parentNumber" column="parent_number"/>
    </resultMap>

    <select
            id="get-contract-terminals"
            resultMap="mapping-terminal-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.id
				, ca.terminal_number object_label
				, ca.terminal_number object_number
				, 0 is_checked
				, c.contract_number
				, m.merchant_number parent_number
				, null object_id				
			FROM
				acq_ui_terminal_vw ca
				, acq_ui_merchant_vw m
                , prd_ui_contract_vw c
			WHERE
				ca.contract_id = c.id
				AND ca.merchant_id = m.id
				AND c.contract_number = upper(#contractNumber#)
				AND ca.lang = com_ui_user_env_pkg.get_user_lang
				AND m.lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.terminal_number
	</select>

    <select
            id="get-contract-merchants-by-account"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.merchant_id id
				, ca.merchant_name object_label
				, ca.merchant_number object_number
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.account_number object_id				
			FROM
				aap_ui_merchant_account_vw ca
			WHERE
				ca.account_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.merchant_name
	</select>

    <select
            id="get-contract-terminals-by-account"
            resultMap="mapping-terminal-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.terminal_id id
				, ca.terminal_number object_label
				, ca.terminal_number object_number
				, ca.merchant_number parent_number
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.account_number object_id				
			FROM
				aap_ui_terminal_account_vw ca
			WHERE
				ca.account_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.terminal_number
	</select>

    <select
            id="get-contract-accounts-by-service"
            resultMap="mapping-contract-object"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.account_id id
				, ca.account_number object_number
				, ca.account_number object_label
				, ca.is_service_exist is_checked
				, ca.contract_number
				, ca.min_count
				, ca.max_count
				, ca.total_count
				, ca.service_id	object_id		
			FROM
				app_ui_account_service_vw ca
			WHERE
				ca.service_id = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.account_number
	</select>

    <select
            id="get-contract-accounts-by-card"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.account_id id
				, ca.account_number object_number
				, ca.account_label object_label
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.card_number object_id
			FROM
				iap_ui_card_account_vw ca
			WHERE
				ca.card_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
			ORDER BY ca.account_label
	</select>

    <select
            id="get-contract-accounts-by-merchant"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.account_id id
				, ca.account_number object_number
				, ca.account_label object_label
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.merchant_number object_id
			FROM
				aap_ui_merchant_account_vw ca
			WHERE
				ca.merchant_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.account_label
	</select>

    <select
            id="get-contract-accounts-by-terminal"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				ca.account_id id
				, ca.account_number object_number
				, ca.account_label object_label
				, ca.is_linked is_checked
				, ca.contract_number
				, ca.terminal_number object_id
			FROM
				aap_ui_terminal_account_vw ca
			WHERE
				ca.terminal_number = #objectId#
				AND ca.contract_number = upper(#contractNumber#)
				AND lang = com_ui_user_env_pkg.get_user_lang
			ORDER BY ca.account_label
	</select>

    <select
            id="get-contract-accounts"
            resultMap="mapping-object-account"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				a.id
				, a.account_type || ' ' || currency || ' '|| account_number object_label
				, a.account_number object_number
				, 0 is_checked
				, c.contract_number
				, null object_id
			FROM
				acc_ui_account_vw a
				, prd_ui_contract_vw c
			WHERE
				a.contract_id = c.id
				and c.contract_number = upper(#contractNumber#)
			ORDER BY a.account_number
	</select>

    <resultMap id="mapping-object-account-customer"
               class="ru.bpc.sv2.application.ContractObject"
               extends="mapping-object-account">
        <result property="customerNumber" column="customer_number"/>
    </resultMap>

    <resultMap id="mapping-contract-object-customer"
               class="ru.bpc.sv2.application.ContractObject"
               extends="mapping-contract-object">
        <result property="customerNumber" column="customer_number"/>
    </resultMap>

    <select id="get-customer-accounts-by-service"
            resultMap="mapping-contract-object-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select acc.account_id       id
               , acc.account_number   object_number
               , acc.account_number   object_label
               , acc.is_service_exist is_checked
               , acc.contract_number  contract_number
               , acc.min_count        min_count
               , acc.max_count        max_count
               , acc.total_count      total_count
               , acc.service_id       object_id
               , cst.customer_number  customer_number
            from app_ui_account_service_vw acc
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where acc.service_id      = #objectId#
             and acc.lang            = com_ui_user_env_pkg.get_user_lang
             and acc.contract_id     = cnt.id
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by acc.account_number
    </select>

    <select id="get-customer-accounts-by-card"
            resultMap="mapping-object-account-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select acc.account_id      id
               , acc.account_number  object_number
               , acc.account_label   object_label
               , acc.is_linked       is_checked
               , acc.contract_number contract_number
               , acc.card_number     object_id
               , cst.customer_number customer_number
            from iap_ui_card_account_vw acc
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where acc.card_number     = #objectId#
             and acc.contract_id     = cnt.id
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by acc.account_label
    </select>

    <select id="get-customer-accounts-by-merchant"
            resultMap="mapping-object-account-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select acc.account_id      id
               , acc.account_number  object_number
               , acc.account_label   object_label
               , acc.is_linked       is_checked
               , acc.contract_number contract_number
               , acc.merchant_number object_id
               , cst.customer_number customer_number
            from aap_ui_merchant_account_vw acc
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where acc.merchant_number = #objectId#
             and acc.lang            = com_ui_user_env_pkg.get_user_lang
             and acc.contract_id     = cnt.id
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by acc.account_label
    </select>

    <select id="get-customer-accounts-by-terminal"
            resultMap="mapping-object-account-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select acc.account_id      id
               , acc.account_number  object_number
               , acc.account_label   object_label
               , acc.is_linked       is_checked
               , acc.contract_number contract_number
               , acc.terminal_number object_id
               , cst.customer_number customer_number
            from aap_ui_terminal_account_vw acc
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where acc.terminal_number = #objectId#
             and acc.contract_id     = cnt.id
             and acc.lang            = com_ui_user_env_pkg.get_user_lang
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by acc.account_label
    </select>

    <select id="get-customer-accounts"
            resultMap="mapping-object-account-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select a.id              id
               , a.account_type || ' ' || a.currency || ' '|| a.account_number object_label
               , a.account_number  object_number
               , 0                 is_checked
               , null              object_id
               , a.contract_number contract_number
               , a.customer_number customer_number
            from acc_ui_account_vw a
           where a.customer_number = #customerNumber#
        order by a.account_number
    </select>

    <resultMap id="mapping-object-account-ext-customer"
               class="ru.bpc.sv2.application.ContractObject"
               extends="mapping-object-account-customer">
        <result property="mask" column="card_mask"/>
    </resultMap>

    <select id="get-customer-cards-by-service"
            resultMap="mapping-contract-object-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select crd.card_id          id
               , crd.card_number      object_number
               , crd.card_number      object_label
               , crd.is_service_exist is_checked
               , crd.contract_number  contract_number
               , crd.min_count        min_count
               , crd.max_count        max_count
               , crd.total_count      total_count
               , crd.service_id       object_id
               , cst.customer_number  customer_number
            from iap_ui_card_service_vw crd
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where crd.service_id = #objectId#
             and crd.lang = com_ui_user_env_pkg.get_user_lang
             and crd.contract_id     = cnt.id
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by crd.card_number
    </select>

    <select id="get-customer-cards-by-account"
            resultMap="mapping-object-account-ext-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
          select crd.card_id         id
               , crd.card_label      object_label
               , crd.card_number     object_number
               , crd.is_linked       is_checked
               , crd.contract_number contract_number
               , crd.account_number  object_id
               , crd.card_mask       card_mask
               , cst.customer_number customer_number
            from iap_ui_card_account_vw crd
               , prd_ui_contract_vw cnt
               , prd_ui_customer_vw cst
           where crd.account_number  = #objectId#
             and crd.contract_id     = cnt.id
             and cnt.customer_id     = cst.id
             and cst.customer_number = #customerNumber#
        order by crd.card_label
    </select>

    <select id="get-customer-cards"
            resultMap="mapping-object-account-ext-customer"
            parameterClass="ru.bpc.sv2.application.ContractObject">
        select crd.id id
        , crd.card_number object_label
        , crd.card_number object_number
        , 0 is_checked
        , crd.contract_number contract_number
        , null object_id
        , crd.card_mask card_mask
        , crd.customer_number customer_number
        from iss_ui_card_vw crd
        where crd.customer_number = #customerNumber#
        <isNotNull property="number" prepend=" AND ">crd.card_number like #number#</isNotNull>
        order by crd.card_number
    </select>

    <resultMap id="mapping-contract-object-service"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="id" column="id"/>
        <result property="number" column="id"/>
        <result property="label" column="object_label"/>
        <result property="isChecked" column="is_checked"/>
        <result property="isCheckedOld" column="is_checked"/>
        <result property="initial" column="is_initial" nullValue="false"/>
        <result property="serviceTypeId" column="service_type_id"/>
        <result property="contractNumber" column="contract_number"/>
        <result property="minCount" column="min_count" nullValue="0"/>
        <result property="maxCount" column="max_count" nullValue="0"/>
        <result property="currentCount" column="total_count" nullValue="0"/>
        <result property="objectId" column="object_id"/>
        <result property="disabled" column="disabled"/>
    </resultMap>

    <resultMap id="mapping-contract-object-service-hier"
               class="ru.bpc.sv2.application.ContractObject" extends="mapping-contract-object-service">
        <result property="level" column="level"/>
    </resultMap>

    <select
            id="get-contract-services-by-card"
            resultMap="mapping-contract-object-service-hier"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT ca1.*,
		SUM (
                 (SELECT COUNT (*)
                     FROM prd_service_object o
                    WHERE ( (     ca1.is_initial = 0
                                AND o.entity_type = 'ENTTCARD'
                                AND o.object_id = ca1.card_id)
                             OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
                            AND o.service_id = ca1.service_id))
             OVER (PARTITION BY ca1.lang, ca1.card_id)
                 total_count
        FROM (
	    SELECT
				cc.service_id id
				, cc.service_label object_label
				, cc.is_service_exist is_checked
				, cc.service_type_id
				, cc.is_initial
				, cc.contract_number
				, cc.min_count
				, cc.max_count
				, cc.card_number object_id
				, case when cc.is_initial = 1 then 1 when cc.is_service_exist = 1 and cc.min_count = 1 then 1 else 0 end disabled
				, level
				, card_id
                , contract_id
                , lang
                , service_id
			FROM
				iap_ui_card_service_vw cc
			START WITH cc.parent_id is null
                AND cc.lang = com_ui_user_env_pkg.get_user_lang
                AND cc.card_number = #objectId#
                AND cc.contract_number = #contractNumber#
                AND (#serviceExist# is null or cc.is_service_exist = #serviceExist#)
            CONNECT BY PRIOR cc.id = cc.parent_id 
                AND PRIOR cc.lang = cc.lang
                AND PRIOR cc.card_number = cc.card_number 
                AND PRIOR cc.contract_number = cc.contract_number 
            ORDER SIBLINGS BY cc.service_label
            ) ca1
	</select>

    <resultMap id="mapping-contract-object-service-hier-ext"
               class="ru.bpc.sv2.application.ContractObject" extends="mapping-contract-object-service-hier">
        <result property="endDate" column="end_date"/>
        <result property="startDate" column="start_date"/>
    </resultMap>

    <select
            id="get-contract-services-by-card-extended"
            resultMap="mapping-contract-object-service-hier-ext"
            parameterClass="ru.bpc.sv2.application.ContractObject">
		SELECT ca1.*,
		SUM (
		(SELECT COUNT (*)
		FROM prd_service_object o
		WHERE ( (     ca1.is_initial = 0
		AND o.entity_type = 'ENTTCARD'
		AND o.object_id = ca1.card_id)
		OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
		AND o.service_id = ca1.service_id))
		OVER (PARTITION BY ca1.lang, ca1.card_id)
		total_count
		FROM (
		SELECT
		cc.service_id id
		, cc.service_label object_label
		, cc.is_service_exist is_checked
		, cc.service_type_id
		, cc.is_initial
		, cc.contract_number
		, cc.min_count
		, cc.max_count
		, cc.card_number object_id
		, case when cc.is_initial = 1 then 1 when cc.is_service_exist = 1 and cc.min_count = 1 then 1 else 0 end disabled
		, level
		, card_id
		, cc.contract_id
		, lang
		, cc.service_id
		, so.end_date
        , so.start_date
		FROM
		iap_ui_card_service_vw cc,
		prd_ui_service_object_vw so
		START WITH cc.parent_id is null
		AND cc.lang = com_ui_user_env_pkg.get_user_lang
		AND cc.card_number = #objectId#
		AND cc.contract_number = #contractNumber#
		AND cc.is_initial = #initial#
		AND (#serviceExist# is null or cc.is_service_exist = #serviceExist#)
		AND so.entity_type = 'ENTTCARD'
        AND so.object_id = cc.card_id
        AND so.service_id = cc.service_id
		CONNECT BY PRIOR cc.id = cc.parent_id
		AND PRIOR cc.lang = cc.lang
		AND PRIOR cc.card_number = cc.card_number
		AND PRIOR cc.contract_number = cc.contract_number
		ORDER SIBLINGS BY cc.service_label
		) ca1
	</select>

    <select
            id="get-contract-services-by-merchant"
            resultMap="mapping-contract-object-service-hier"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				cc.service_id id
				, cc.service_label object_label
				, cc.is_service_exist is_checked
				, cc.service_type_id
				, cc.is_initial
				, cc.contract_number
				, cc.min_count
				, cc.max_count
				, cc.total_count
				, cc.merchant_number object_id	
				, case when cc.is_initial = 1 then 1 when cc.is_service_exist = 1 and cc.min_count = 1 then 1 else 0 end disabled
				, level
			FROM
				aap_ui_merchant_service_vw cc
			START WITH cc.parent_id is null
                AND cc.lang = com_ui_user_env_pkg.get_user_lang
                AND cc.merchant_number = #objectId#
                AND cc.contract_number = #contractNumber#
            CONNECT BY PRIOR cc.id = cc.parent_id 
                AND PRIOR cc.lang = cc.lang
                AND PRIOR cc.merchant_number = cc.merchant_number 
                AND PRIOR cc.contract_number = cc.contract_number 
            ORDER SIBLINGS BY cc.service_label
	</select>

    <select
            id="get-contract-services-by-terminal"
            resultMap="mapping-contract-object-service-hier"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT
				cc.service_id id
				, cc.service_label object_label
				, cc.is_service_exist is_checked
				, cc.service_type_id
				, cc.is_initial
				, cc.contract_number
				, cc.min_count
				, cc.max_count
				, cc.total_count
				, cc.terminal_number object_id
				, case when cc.is_initial = 1 then 1 when cc.is_service_exist = 1 and cc.min_count = 1 then 1 else 0 end disabled	
				, level 			
			FROM
				aap_ui_terminal_service_vw cc
			START WITH cc.parent_id is null
                AND cc.lang = com_ui_user_env_pkg.get_user_lang
                AND cc.terminal_number = #objectId#
                AND cc.contract_number = #contractNumber#
            CONNECT BY PRIOR cc.id = cc.parent_id 
                AND PRIOR cc.lang = cc.lang
                AND PRIOR cc.terminal_number = cc.terminal_number 
                AND PRIOR cc.contract_number = cc.contract_number 
            ORDER SIBLINGS BY cc.service_label
	</select>

    <select
            id="get-contract-services-by-account"
            resultMap="mapping-contract-object-service-hier"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT ca1.*,
				SUM (
                 (SELECT COUNT (*)
                     FROM prd_service_object o
                    WHERE ( (     ca1.is_initial = 0
                                AND o.entity_type = 'ENTTACCT'
                                AND o.object_id = ca1.account_id)
                             OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
                            AND o.service_id = ca1.service_id))
             OVER (PARTITION BY ca1.lang, ca1.account_id)
                 total_count
                 FROM (
	    SELECT
				ca.service_id id
				, ca.service_label object_label
				, ca.is_service_exist is_checked
				, ca.service_type_id
				, ca.is_initial
				, ca.contract_number
				, ca.min_count
				, ca.max_count
				, ca.account_number object_id
				, case when ca.is_initial = 1 then 1 when ca.is_service_exist = 1 and ca.min_count = 1 then 1 else 0 end disabled
				, level
				, account_id
                , contract_id
                , lang
                , service_id
			FROM
				app_ui_account_service_vw ca
			START WITH ca.parent_id is null
                AND ca.lang = com_ui_user_env_pkg.get_user_lang
                AND ca.account_number = #objectId#
                AND ca.contract_number = #contractNumber#
            CONNECT BY PRIOR ca.id = ca.parent_id 
                AND PRIOR ca.lang = ca.lang
                AND PRIOR ca.account_number = ca.account_number 
                AND PRIOR ca.contract_number = ca.contract_number 
            ORDER SIBLINGS BY ca.service_label
            ) ca1
	</select>

    <select
            id="get-contract-services-by-account-extended"
            resultMap="mapping-contract-object-service-hier-ext"
            parameterClass="ru.bpc.sv2.application.ContractObject">
		SELECT ca1.*,
		SUM (
		(SELECT COUNT (*)
		FROM prd_service_object o
		WHERE ( (     ca1.is_initial = 0
		AND o.entity_type = 'ENTTACCT'
		AND o.object_id = ca1.account_id)
		OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
		AND o.service_id = ca1.service_id))
		OVER (PARTITION BY ca1.lang, ca1.account_id)
		total_count
		FROM (
		 SELECT
        ca.service_id id
        , ca.service_label object_label
        , ca.is_service_exist is_checked
        , ca.service_type_id
        , ca.is_initial
        , ca.contract_number
        , ca.min_count
        , ca.max_count
        , ca.account_number object_id
        , case when ca.is_initial = 1 then 1 when ca.is_service_exist = 1 and ca.min_count = 1 then 1 else 0 end disabled
        , level
        , ca.account_id
        , ca.contract_id
        , lang
        , ca.service_id
        , so.end_date
        , so.start_date
        FROM
        app_ui_account_service_vw ca,
        prd_ui_service_object_vw so
        START WITH ca.parent_id is null
        AND ca.lang = com_ui_user_env_pkg.get_user_lang
        AND ca.account_number = #objectId#
		AND ca.is_initial = #initial#
        AND ca.is_service_exist = #serviceExist#
        AND ca.contract_number = #contractNumber#
        AND so.entity_type = 'ENTTACCT'
        AND so.object_id = ca.account_id
        AND so.service_id = ca.service_id
        CONNECT BY PRIOR ca.id = ca.parent_id
        AND PRIOR ca.lang = ca.lang
        AND PRIOR ca.account_number = ca.account_number
        AND PRIOR ca.contract_number = ca.contract_number
        ORDER SIBLINGS BY ca.service_label
		) ca1
	</select>

    <select
            id="get-contract-services-by-customer"
            resultMap="mapping-contract-object-service"
            parameterClass="ru.bpc.sv2.application.ContractObject">
	    SELECT ca1.*,
SUM (
                 (SELECT COUNT (*)
                     FROM prd_service_object o
                    WHERE ( (     ca1.is_initial = 0
                                AND o.entity_type = 'ENTTCUST'
                                AND o.object_id = ca1.customer_id)
                             OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
                            AND o.service_id = ca1.service_id))
             OVER (PARTITION BY ca1.lang, ca1.customer_id)
                 total_count
FROM (
	    SELECT
				cs.service_id id
				, cs.service_label object_label
				, cs.is_service_exist is_checked
				, cs.service_type_id
				, cs.is_initial
				, cs.contract_number
				, cs.min_count
				, cs.max_count
				, cs.customer_id
				, cs.lang
				, cs.service_id
				, cs.contract_id
				, cs.customer_number object_id
				, case when cs.min_count > 0 then 1 else 0 end disabled
			FROM
				prd_ui_customer_service_vw cs
			WHERE
                cs.lang = com_ui_user_env_pkg.get_user_lang
                AND reverse(cs.customer_number) = reverse(upper(#objectId#))
                AND reverse(cs.contract_number) = reverse(upper(#contractNumber#))
            ORDER BY cs.service_label
            ) ca1
	</select>

    <select
            id="get-contract-services-by-customer-extended"
            resultMap="mapping-contract-object-service"
            parameterClass="ru.bpc.sv2.application.ContractObject">
		SELECT ca1.*,
		SUM (
		(SELECT COUNT (*)
		FROM prd_service_object o
		WHERE ( (     ca1.is_initial = 0
		AND o.entity_type = 'ENTTCUST'
		AND o.object_id = ca1.customer_id)
		OR (ca1.is_initial = 1 AND o.contract_id = ca1.contract_id))
		AND o.service_id = ca1.service_id))
		OVER (PARTITION BY ca1.lang, ca1.customer_id)
		total_count
		FROM (
		SELECT
		cs.service_id id
		, cs.service_label object_label
		, cs.is_service_exist is_checked
		, cs.service_type_id
		, cs.is_initial
		, cs.contract_number
		, cs.min_count
		, cs.max_count
		, cs.customer_id
		, cs.lang
		, cs.service_id
		, cs.contract_id
		, cs.customer_number object_id
		, so.end_date
        , so.start_date
		, case when cs.min_count > 0 then 1 else 0 end disabled
		FROM
		prd_ui_customer_service_vw cs,
		prd_ui_service_object_vw so
		WHERE
		cs.lang = com_ui_user_env_pkg.get_user_lang
		AND reverse(cs.customer_number) = reverse(upper(#objectId#))
		AND cs.is_initial = #initial#
		AND cs.is_service_exist = #serviceExist#
		AND reverse(cs.contract_number) = reverse(upper(#contractNumber#))
		AND so.entity_type = 'ENTTCUST'
        AND so.object_id = cs.customer_id
        AND so.service_id = cs.service_id
		ORDER BY cs.service_label
		) ca1
	</select>

    <resultMap id="mapping-service"
               class="ru.bpc.sv2.application.ContractObject">
        <result property="id" column="id"/>
        <result property="number" column="id"/>
        <result property="isChecked" column="is_checked"/>
        <result property="disabled" column="is_checked"/>
        <result property="label" column="service_label"/>
        <result property="entityType" column="entity_type"/>
        <result property="initial" column="is_initial" nullValue="false"/>
        <result property="serviceTypeId" column="service_type_id"/>
        <result property="minCount" column="min_count" nullValue="0"/>
        <result property="maxCount" column="max_count" nullValue="0"/>
    </resultMap>

    <resultMap id="mapping-service-hier"
               class="ru.bpc.sv2.application.ContractObject" extends="mapping-service">
        <result property="level" column="level"/>
    </resultMap>

    <select
            id="get-services-hier"
            resultMap="mapping-service-hier"
            parameterClass="ru.bpc.sv2.application.ContractObject">
        SELECT
        s.service_id id
        , case when s.entity_type = 'ENTTCUST' and s.min_count > 0 then 1
        when s.entity_type != 'ENTTCUST' and (s.is_initial = 1 or s.min_count > 0) then 1
        else 0 end is_checked
        , s.service_label
        , s.product_id
        , s.service_type_id
        , s.entity_type
        , s.is_initial
        , s.min_count
        , s.max_count
        , level
        FROM
        app_ui_product_service_vw s
        START WITH s.parent_id is null
        AND s.lang = com_ui_user_env_pkg.get_user_lang
        AND not (s.max_count = 0 and s.min_count=0)
        <isNotNull property="entityType" prepend=" AND ">s.entity_type = #entityType#</isNotNull>
        <isNotNull property="productId" prepend=" AND ">s.product_id = #productId#</isNotNull>

        <isNotNull property="id" prepend=" AND ">(s.service_id = #id# or s.is_initial = 0)
        </isNotNull> <!-- initial service -->
        <isNull property="id" prepend=" AND ">s.is_initial = 0</isNull>

        CONNECT BY PRIOR s.id = s.parent_id
        AND PRIOR s.lang = s.lang
        AND PRIOR s.entity_type = s.entity_type
        AND PRIOR s.product_id = s.product_id
        ORDER SIBLINGS BY s.service_label
    </select>

    <select
            id="get-services"
            resultMap="mapping-service"
            parameterClass="ru.bpc.sv2.application.ContractObject">
        SELECT
        s.service_id id
        , case when s.entity_type = 'ENTTCUST' and s.min_count > 0 then 1 else 0 end is_checked
        , s.service_label
        , s.product_id
        , s.service_type_id
        , s.entity_type
        , s.is_initial
        , s.min_count
        , s.max_count
        FROM
        app_ui_product_service_vw s
        WHERE
        s.lang = com_ui_user_env_pkg.get_user_lang
        AND not (s.max_count = 0 and s.min_count=0)
        <isNotNull property="initial" prepend=" AND ">s.is_initial = #initial#</isNotNull>
        <isNull property="initial" prepend=" AND ">s.is_initial = 0</isNull>
        <isNotNull property="entityType" prepend=" AND ">s.entity_type = #entityType#</isNotNull>
        <isNotNull property="productId" prepend=" AND ">s.product_id = #productId#</isNotNull>
    </select>

    <select
            id="get-customer-services"
            resultMap="mapping-service"
            parameterClass="ru.bpc.sv2.application.ContractObject">
        SELECT
        s.service_id id
        , case when s.min_count > 0 then 1 else 0 end is_checked
        , s.service_label
        , s.product_id
        , s.service_type_id
        , s.entity_type
        , s.is_initial
        , s.min_count
        , s.max_count
        FROM
        app_ui_product_service_vw s
        WHERE
        s.lang = com_ui_user_env_pkg.get_user_lang
        AND not (s.max_count = 0 and s.min_count=0)
        AND s.entity_type = 'ENTTCUST'
        AND s.service_id not in (
            SELECT service_id
            FROM prd_ui_service_object_vw so
            WHERE so.entity_type = 'ENTTCUST'
              AND so.object_id = prd_api_customer_pkg.get_customer_id(#objectId#)
        )
        <isNotNull property="initial" prepend=" AND ">s.is_initial = #initial#</isNotNull>
        <isNull property="initial" prepend=" AND ">s.is_initial = 0</isNull>
        <isNotNull property="productId" prepend=" AND ">s.product_id = #productId#</isNotNull>
    </select>


    <resultMap id="mapping-application-structure-filters"
               class="ru.bpc.sv2.application.ApplicationFlowFilterStruct">
        <result property="id" column="element_id"/>
        <result property="parentId" column="parent_element_id"/>
        <result property="appType" column="appl_type"/>
        <result property="stId" column="st_id"/>
        <result property="name" column="caption"/>
        <result property="lang" column="lang"/>

        <result property="dataType" column="data_type"/>
        <result property="lovId" column="lov_id"/>

        <result property="flowFilterId" column="filter_id"/>
        <result property="flowFilterSeqnum" column="filter_seqnum"/>
        <result property="stageId" column="stage_id"/>

        <result property="minCount" column="min_count"/>
        <result property="maxCount" column="max_count"/>
        <result property="visible" column="is_visible" javaType="java.lang.Boolean"/>
        <result property="updatable" column="is_updatable" javaType="java.lang.Boolean"/>
        <result property="insertable" column="is_insertable" javaType="java.lang.Boolean"/>
        <result property="valueV" column="value_v"/>
        <result property="valueN" column="value_n"/>
        <result property="valueD" column="value_d"/>
        <result property="lovValue" column="lov_value"/>

        <result property="level" column="level"/>
        <result property="isLeaf" javaType="boolean" column="is_leaf"/>
    </resultMap>

    <select id="get-application-structure-filters"
            resultMap="mapping-application-structure-filters"
            parameterClass="qparams">
        SELECT
        st.element_id
        , level
        , CONNECT_BY_ISLEAF is_leaf
        , st.id as st_id
        , st.element_type
        , st.name
        , st.data_type
        , st.entity_type
        , st.lov_id
        , st.default_value
        , st.parent_element_id
        , st.appl_type
        , st.display_order
        , st.caption
        , st.filter_id
        , st.filter_seqnum
        , st.stage_id
        , nvl(max_count_filter,max_count) max_count
        , nvl(min_count_filter,min_count) min_count
        , nvl(is_visible_filter,is_visible) is_visible
        , nvl(is_updatable_filter,is_updatable) is_updatable
        , nvl(is_insertable_filter,is_insertable) is_insertable
        , nvl(value_v_filter, st.default_char_value) value_v
        , nvl(value_n_filter, st.default_number_value) value_n
        , nvl(value_d_filter, st.default_date_value) value_d
        , nvl(lov_value_filter, st.default_lov_value) lov_value
        , st.lang
        , st.edit_form
        FROM (
        SELECT
        st1.*
        , f.id filter_id
        , f.is_visible is_visible_filter
        , f.is_updatable is_updatable_filter
        , f.is_insertable is_insertable_filter
        , f.min_count min_count_filter
        , f.max_count max_count_filter
        , f.stage_id
        , f.seqnum filter_seqnum
        , f.default_char_value value_v_filter
        , f.default_number_value value_n_filter
        , f.default_date_value value_d_filter
        , f.default_lov_value lov_value_filter
        FROM
        app_ui_structure_vw st1
        , app_ui_flow_filter_vw f
        , app_ui_flow_vw fl
        WHERE
        st1.id = f.struct_id(+)
        AND st1.appl_type = fl.appl_type
        <iterate prepend=" AND " conjunction=" AND " property="filters">
            <isEqual property="filters[].element" compareValue="id">f.id(+) = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="stageId">f.stage_id(+) = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="flowId">fl.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">
                st1.lang = #filters[].value#
                AND fl.lang = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="instId">(st1.inst_id is null or st1.inst_id = 9999 or
                st1.inst_id = #filters[].value#)
            </isEqual>
        </iterate>
        ) st
        START WITH
        st.parent_element_id IS NULL
        CONNECT BY nocycle (
        prior st.element_id = st.parent_element_id
        )
        ORDER SIBLINGS BY st.display_order ASC
    </select>

    <procedure id="add-flow-filter" parameterClass="ru.bpc.sv2.application.ApplicationFlowFilter">
        {call APP_UI_FLOW_FILTER_PKG.add(
        o_id => #id,jdbcType=NUMERIC,mode=OUT#
        , o_seqnum => #seqNum,jdbcType=NUMERIC,mode=OUT#
        , i_stage_id => #stageId#
        , i_struct_id => #structId#
        , i_min_count => #minCount#
        , i_max_count => #maxCount#
        , i_is_visible => #visible#
        , i_is_insertable => #insertable#
        , i_is_updatable => #updatable#
        , i_default_value_char => #valueV#
        , i_default_value_num => #valueN#
        , i_default_value_date => #valueD#
        )}
    </procedure>

    <procedure id="edit-flow-filter" parameterClass="ru.bpc.sv2.application.ApplicationFlowFilter">
        {call APP_UI_FLOW_FILTER_PKG.modify(
        i_id => #id#
        , io_seqnum => #seqNum,jdbcType=NUMERIC,mode=OUT#
        , i_stage_id => #stageId#
        , i_struct_id => #structId#
        , i_min_count => #minCount#
        , i_max_count => #maxCount#
        , i_is_visible => #visible#
        , i_is_insertable => #insertable#
        , i_is_updatable => #updatable#
        , i_default_value_char => #valueV#
        , i_default_value_num => #valueN#
        , i_default_value_date => #valueD#
        )}
    </procedure>

    <procedure id="delete-flow-filter" parameterClass="ru.bpc.sv2.application.ApplicationFlowFilter">
        {call APP_UI_FLOW_FILTER_PKG.remove(
        i_id => #id#
        , i_seqnum => #seqNum#
        )}
    </procedure>

    <select id="get-xml" resultClass="String" parameterClass="java.lang.Long">
		select app_ui_application_pkg.get_xml(#value#) from dual
	</select>

    <select id="get-xml-with-id" resultClass="String" parameterClass="java.lang.Long">
		select app_ui_application_pkg.get_xml_with_id(#value#) from dual
	</select>

    <procedure id="get-flow-source" parameterClass="ru.bpc.sv2.application.ApplicationFlow">
        {call APP_UI_FLOW_PKG.get_flow_source(
        i_flow_id => #id#
        , o_xslt_source => #xsltSource,jdbcType=CLOB,mode=OUT#
        , o_xsd_source => #xsdSource,jdbcType=CLOB,mode=OUT#
        )}
    </procedure>

    <resultMap class="ru.bpc.sv2.application.ApplicationElement"
               id="mapping-all-elements">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="type" column="element_type"/>
        <result property="dataType" column="data_type"/>
    </resultMap>

    <select id="get-all-elements"
            resultMap="mapping-all-elements" fetchSize="1000">
		SELECT
			id
			, name
			, element_type
			, data_type
		FROM
			app_ui_element_all_vw	
	</select>

    <resultMap class="ru.bpc.sv2.application.ApplicationFlow"
               id="mapping-all-flows">
        <result property="id" column="id"/>
        <result property="xsdSource" column="xsd_source"/>
        <result property="xsltSource" column="xslt_source"/>
    </resultMap>

    <select id="get-all-flows"
            resultMap="mapping-all-flows" fetchSize="100">
		SELECT
			id
			, xsd_source 
			, xslt_source
		FROM
			app_flow_vw	
	</select>

    <resultMap id="mapping-all-stages"
               class="ru.bpc.sv2.application.ApplicationFlowStage">
        <result property="id" column="id"/>
        <result property="appStatus" column="appl_status"/>
        <result property="flowId" column="flow_id"/>
        <result property="handler" column="handler"/>
        <result property="handlerType" column="handler_type"/>
    </resultMap>

    <select id="get-all-stages"
            resultMap="mapping-all-stages" fetchSize="1000">
		SELECT
			id
            , appl_status
			, flow_id
			, handler
			, handler_type					
        FROM 
            APP_UI_FLOW_STAGE_VW
	</select>

    <resultMap id="mapping-all-transitions"
               class="ru.bpc.sv2.application.ApplicationFlowTransition">
        <result property="id" column="id"/>
        <result property="appStatus" column="appl_status"/>
        <result property="preStatus" column="previous_status"/>
        <result property="flowId" column="flow_id"/>
        <result property="stageResult" column="stage_result"/>
    </resultMap>

    <select id="get-all-transitions"
            resultMap="mapping-all-transitions" fetchSize="1000">
		SELECT
			id 
            , appl_status
			, previous_status
			, stage_result
			, flow_id
        FROM 
            APP_UI_FLOW_TRANSITION_VW
	</select>
	
	<resultMap  id="mapping-application-history"
	            class="ru.bpc.sv2.application.ApplicationHistory"  >
	    <result property="id" column="id" />
	    <result property="seqnum" column="seqnum" />
	    <result property="applId" column="appl_id" />
	    <result property="changeDate" column="change_date" />
	    <result property="changeUser" column="change_user" />
		<result property="changeAction" column="change_action" />
	    <result property="applStatus" column="appl_status" />
	    <result property="comments" column="comments" />
	    <result property="userName" column="user_name" />
		<result property="changeActionName" column="change_action_name" />
        <result property="personName" column="person_name" />
	</resultMap>

	<select id="get-application-histories"
			parameterClass="qparams" resultMap="mapping-application-history">
		SELECT
			h.id
			,h.seqnum
			,h.appl_id
			,h.change_date
			,h.change_user
			,h.change_action
			,h.appl_status
			,h.comments
			,h.user_name
			,h.change_action_name
            ,com_ui_person_pkg.get_person_name (v.person_id, v.lang) person_name
		FROM
            app_ui_history_vw h, acm_ui_user_vw v
        WHERE
            h.user_name = v.user_name(+)
            AND v.lang = 'LANGENG'
		<iterate prepend="AND" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">h.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">h.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="applId">h.appl_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="changeDate">h.change_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="changeUser">h.change_user = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="changeAction">h.change_action = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="applStatus">h.appl_status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="comments">h.comments = #filters[].value#</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="id">h.id $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="seqnum">h.seqnum $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="applId">h.appl_id $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="changeDate">h.change_date $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="changeUser">h.change_user $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="changeAction">h.change_action $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="applStatus">h.appl_status $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="comments">h.comments $sorting[].direction$</isEqual>		
			</isNotEqual>
		</iterate>			
	</select>
	
	<select id="get-application-histories-count"
			parameterClass="qparams"
			resultClass="int">
		SELECT
			count(h.id)
		FROM
			app_ui_history_vw h
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">h.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">h.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="applId">h.appl_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="changeDate">h.change_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="changeUser">h.change_user = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="applStatus">h.appl_status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="comments">h.comments = #filters[].value#</isEqual>
		</iterate>			
	</select>
	
	<parameterMap class="java.util.Map" id="main-handler-mapping">	
		<parameter property="appId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="result" mode="OUT" jdbcType="VARCHAR"/>
	</parameterMap>
	
	<procedure id="process-application-main-handler"
		parameterMap="main-handler-mapping">
		{call app_ui_application_pkg.main_handler(
									  i_appl_id	=> ?
									, o_result 	=> ?
									)}
	</procedure>
	
	<procedure id="process-application-generate-order"
		parameterMap="main-handler-mapping">
		{call CST_UI_APPLICATION_PKG.generation_order_text(
									  i_appl_id	=> ?
									, o_result 	=> ?
									)}
	</procedure>
	
	<procedure id="add-error"
		parameterClass="ru.bpc.sv2.application.ApplicationError">
		{call app_api_error_pkg.add_error_element(
									  i_appl_data_id  => #parentDataId#
									, i_error_code    => #code#
									, i_error_message => #message#
									, i_error_details => #details#
									, i_error_element => #elementName#
									)}
	</procedure>
	
	<procedure id="process-application-remove-undef-customer"
		parameterMap="main-handler-mapping">
				{call CST_UI_APPLICATION_PKG.remove_undef_customer(
					  i_appl_id	=> ?
					, o_result 	=> ?
					)}
	</procedure>
	
	
	<parameterMap class="java.util.Map" id="save-document-mapping">	
		<parameter property="dataId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="document" mode="IN" javaType="java.lang.String" jdbcType="CLOB"/>
		<parameter property="customerEds" mode="IN" javaType="java.lang.String" jdbcType="CLOB"/>
		<parameter property="supervisorEds" mode="IN" javaType="java.lang.String" jdbcType="CLOB"/>
		<parameter property="savePath" mode="OUT" jdbcType="VARCHAR"/>
	</parameterMap>
	
	<procedure id="save-document" parameterMap="save-document-mapping">
		{call app_ui_application_pkg.document_save(
									  i_appl_data_id	=> ?
									, i_doc_source  	=> ?
									, i_sign_source  	=> ?
				, i_supervisor_sign_source => ?
									, o_save_path		=> ?
									)}
	</procedure>
		
	<parameterMap class="java.util.Map" id="put-order-mapping">
		<parameter property="orderId" mode="OUT" jdbcType="NUMERIC" javaType="java.lang.Long"/>	
		<parameter property="customerId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="entityType" mode="IN" jdbcType="VARCAHR"/>
		<parameter property="objectId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="purposeId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="templateId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="orderAmount" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="orderCurrency" mode="IN" jdbcType="VARCHAR"/>
		<parameter property="eventDate" mode="IN" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
		<parameter property="status" mode="IN" jdbcType="VARCHAR"/>
		<parameter property="instId" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="attemptCount" mode="IN" jdbcType="NUMERIC"/>
		<parameter property="isPreparedOrder" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Boolean" nullValue="false"/>
		
	</parameterMap>
	
	<procedure id="put-order"
		parameterMap="put-order-mapping">
		{call pmo_api_order_pkg.add_order(
									  o_id               	=> ?
									, i_customer_id      	=> ?
									, i_entity_type      	=> ?
									, i_object_id        	=> ?
									, i_purpose_id       	=> ?
									, i_template_id      	=> ?
									, i_amount           	=> ?
									, i_currency         	=> ?
									, i_event_date       	=> ?
									, i_status           	=> ?
									, i_inst_id          	=> ?
									, i_attempt_count    	=> ?
									, i_is_prepared_order	=> ?
									)}
	</procedure>
	
	<parameterMap class="java.util.Map" id="put-order-parameters-mapping">
		<parameter property="orderId" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Long"/>	
		<parameter property="orderParameters" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
	</parameterMap>
									
	<procedure id="put-order-parameters"
		parameterMap="put-order-parameters-mapping">
		{call pmo_api_order_pkg.register_payment_parameter_web(
									  i_order_id   	=> ?
									, i_params 	=> ?
									)}
	</procedure>
	
	<parameterMap class="java.util.Map" id="link-document-order-mapping">
		<parameter property="appId" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Long"/>	
		<parameter property="orderId" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Long"/>
	</parameterMap>
	
	<procedure id="link-document-order"
		parameterMap="link-document-order-mapping">
		{call cst_ui_application_pkg.link_order_document(
									  i_appl_id   			=> ?
									, i_payment_order_id 	=> ?
									)}
	</procedure>
	
	<parameterMap class="java.util.Map" id="modify-application-element-data-mapping">
		<parameter property="applicationId" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Long"/>	
		<parameter property="data" jdbcType="APP_DATA_TPT" typeName="APP_DATA_TPT" typeHandler="ru.bpc.sv2.utils.ApplicationElementTypeHandler" mode="IN"/>
	</parameterMap>
									
	<procedure id="modify-application-element-data"
		parameterMap="modify-application-element-data-mapping">
		{call app_ui_application_pkg.modify_application_data(
									  i_appl_id  	=> ?
									, i_appl_data	=> ?
									)}
	</procedure>
	
	<parameterMap class="java.util.Map" id="check-customer-name-mapping">
		<parameter property="clientIdType" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="clientIdValue" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="surname" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="instId" mode="IN" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
		<parameter property="firstName" mode="INOUT" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<parameter property="secondName" mode="INOUT" jdbcType="VARCHAR" javaType="java.lang.String"/>
	</parameterMap>
		
	<procedure id="check-customer-name"
		parameterMap="check-customer-name-mapping">
		{call cst_ui_customer_pkg.check_customer_name(
									  i_client_id_type  	=> ?
									, i_client_id_value		=> ?
									, i_surname				=> ?
									, i_inst_id				=> ?
									, io_first_name			=> ?
									, io_second_name		=> ?
									)}
	</procedure>
	
	<procedure id="process-application-cancel-processing"
		parameterClass="java.lang.Long">
				{call cst_ui_application_pkg.rollback_operation(
					  i_appl_id	=> #value#
					)}
	</procedure>
	
	<procedure id="add-app-error"
		parameterClass="ru.bpc.sv2.application.ApplicationError">
		{call app_api_error_pkg.add_error_element(
				  i_appl_id       => #applicationId#
				, i_error_code    => #code#
				, i_error_message => #message#
				, i_error_details => #details#
				, i_error_element => #elementName#
				)}
	</procedure>
	
	<resultMap  id="mapping-application-object"
	            class="ru.bpc.sv2.common.ObjectEntity"  >
	    <result property="entityType" column="entity_type" />
	    <result property="seqNum" column="seqnum" />
	    <result property="objectId" column="object_id" />	    
	</resultMap>	
	
	<select id="get-application-online-objects"
			parameterClass="qparams" resultMap="mapping-application-object">
		SELECT
			o.object_id
			,o.seqnum
			,o.appl_id
			,o.entity_type
		FROM
			app_ui_online_object_vw o
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="applicationId">o.appl_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="entityType">o.entity_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="objectId">o.object_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">o.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="needSync">o.need_sync = #filters[].value#</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="entityType">o.entity_type $sorting[].direction$</isEqual>
			</isNotEqual>
		</iterate>			
	</select>
	
	<resultMap  id="mapping-app-flow-step"
	            class="ru.bpc.sv2.common.application.AppFlowStep"  >
	    <result property="id" column="id" />
	    <result property="seqnum" column="seqnum" />
	    <result property="flowId" column="flow_id" />
	    <result property="stepLabel" column="step_label" />
	    <result property="applStatus" column="appl_status" />
	    <result property="stepSource" column="step_source" />
	    <result property="readOnly" column="read_only" />
	    <result property="displayOrder" column="display_order" />
	    <result property="lang" column="lang" />
	</resultMap>	
	
	<select id="get-app-flow-steps"
			parameterClass="qparams" resultMap="mapping-app-flow-step">
			SELECT
				fsv.id
				,fsv.seqnum
				,fsv.flow_id
				,fsv.step_label
				,fsv.appl_status
				,fsv.step_source
				,fsv.read_only
				,fsv.display_order
				,fsv.lang
			FROM
				app_ui_flow_step_vw fsv
			<iterate prepend="WHERE" conjunction="AND" property="filters">
				<isEqual property="filters[].element" compareValue="id">fsv.id = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="seqnum">fsv.seqnum = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="flowId">fsv.flow_id = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="stepLabel">fsv.step_label = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="applStatus">fsv.appl_status = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="stepSource">fsv.step_source = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="readOnly">fsv.read_only = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="displayOrder">fsv.display_order = #filters[].value#</isEqual>
				<isEqual property="filters[].element" compareValue="lang">fsv.lang = #filters[].value#</isEqual>
			</iterate>
			<iterate prepend="ORDER BY" conjunction=", " property="sorting">
				<isNotEqual property="sorting[].direction" compareValue="AUTO">
					<isEqual property="sorting[].property" compareValue="id">fsv.id $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="seqnum">fsv.seqnum $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="flowId">fsv.flow_id $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="stepLabel">fsv.step_label $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="applStatus">fsv.appl_status $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="stepSource">fsv.step_source $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="readOnly">fsv.read_only $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="displayOrder">fsv.display_order $sorting[].direction$</isEqual>		
					<isEqual property="sorting[].property" compareValue="lang">fsv.lang $sorting[].direction$</isEqual>		
				</isNotEqual>
			</iterate>				
	</select>
	
	<select id="get-app-flow-steps-count"
			parameterClass="qparams"
			resultClass="int">
		SELECT
			count(fsv.id)
		FROM
			app_ui_flow_step_vw fsv
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">fsv.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">fsv.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="flowId">fsv.flow_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="stepLabel">fsv.step_label = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="applStatus">fsv.appl_status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="stepSource">fsv.step_source = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="readOnly">fsv.read_only = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="displayOrder">fsv.display_order = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="lang">fsv.lang = #filters[].value#</isEqual>
		</iterate>			
	</select>		

    <procedure id="add-app-flow-step"
               parameterClass="ru.bpc.sv2.common.application.AppFlowStep">
        {call app_ui_flow_step_pkg.add(
        o_id => #id,mode=OUT,jdbcType=NUMERIC#
        , o_seqnum => #seqnum,mode=OUT,jdbcType=NUMERIC#
        , i_flow_id => #flowId#
        , i_step_label => #stepLabel#
        , i_appl_status => #applStatus#
        , i_step_source => #stepSource#
        , i_read_only => #readOnly#
        , i_display_order => #displayOrder#
        , i_lang => #lang#
        )}
    </procedure>

    <procedure id="modify-app-flow-step"
               parameterClass="ru.bpc.sv2.common.application.AppFlowStep">
        {call app_ui_flow_step_pkg.modify(
        i_id => #id#
        , io_seqnum => #seqnum,mode=INOUT,jdbcType=NUMERIC#
        , i_flow_id => #flowId#
        , i_step_label => #stepLabel#
        , i_appl_status => #applStatus#
        , i_step_source => #stepSource#
        , i_read_only => #readOnly#
        , i_display_order => #displayOrder#
        , i_lang => #lang#
        )}
    </procedure>

    <procedure id="remove-app-flow-step"
               parameterClass="ru.bpc.sv2.common.application.AppFlowStep">
        {call app_ui_flow_step_pkg.remove(
        i_id => #id#
        , i_seqnum => #seqnum#
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="get-service-id-map">
        <parameter property="cardTypeId" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
        <parameter property="productId" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
    </parameterMap>

    <select
            id="get-service-by-product-card-type"
            resultClass="int"
            parameterMap="get-service-id-map">
   		select service_id
  		from iss_product_card_type_vw n
 		where n.card_type_id = ? 
   			and n.product_id = ?  
	</select>

    <parameterMap class="java.util.Map" id="get-array-converted-value-map">
        <parameter property="arrayTypeName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="value" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </parameterMap>
    <select
            id="get-array-converted-value"
            resultClass="String"
            parameterMap="get-array-converted-value-map">
   		select com_api_array_pkg.conv_array_elem_v(
                              i_array_type_id  => (select id from com_array_type 
                                                    where name = ? 
                                                      and rownum = 1)
                            , i_elem_value        => ?
                       ) from dual     
	</select>

    <parameterMap class="java.util.Map" id="get-service-id-map">
        <parameter property="accountType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <parameter property="productId" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
    </parameterMap>
    <select
            id="get-service-by-product-account-type"
            resultClass="int"
            parameterMap="get-service-id-map">
	   select service_id
  		from acc_product_account_type a
 		where a.account_type = ?
   			and a.product_id = ?
	</select>


    <resultMap id="mapping-application-linked-objects" class="ru.bpc.sv2.application.ApplicationLinkedObjects">
        <result property="seqnum"            column="seqnum"/>
        <result property="applId"            column="appl_id"/>
        <result property="entityType"        column="entity_type"/>
        <result property="objectId"          column="object_id"/>
        <result property="objectDescription" column="object_description"/>
    </resultMap>

    <select id="get-application-linked-objects" parameterClass="qparams" resultMap="mapping-application-linked-objects">
        select seqnum
             , appl_id
             , entity_type
             , object_id
             , get_object_desc(
                   i_object_id   => object_id
                 , i_entity_type => entity_type
               ) object_description
          from app_ui_object_vw
        <iterate prepend=" where " conjunction=" and " property="filters">
            <isEqual property="filters[].element" compareValue="seqnum">seqnum = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="applId">appl_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="entityType">entity_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="objectId">object_id = #filters[].value#</isEqual>
        </iterate>
        <iterate prepend=" order by " conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="seqnum">seqnum $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="applId">appl_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="entityType">entity_type $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="objectId">object_id $sorting[].direction$</isEqual>
            </isNotEqual>
        </iterate>
    </select>

    <select id="get-application-linked-objects-count" parameterClass="qparams" resultClass="int">
        select count(*)
          from app_ui_object_vw
        <iterate prepend=" where " conjunction=" and " property="filters">
            <isEqual property="filters[].element" compareValue="seqnum">seqnum = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="applId">appl_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="entityType">entity_type = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="objectId">object_id = #filters[].value#</isEqual>
        </iterate>
    </select>

    <resultMap class="java.util.HashMap" id="get-flow-mandatory-map">
        <result property="key" column="element" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="value" column="minCount" jdbcType="NUMERIC" javaType="java.lang.Integer"/>
    </resultMap>

    <select
            id="get-flow-mandatory"
            parameterClass="qparams"
            resultMap="get-flow-mandatory-map">
        SELECT
        element
        , min_count minCount
        FROM
        (
        select flow_id
        , name element
        , min_count
        , row_number() over(partition by name order by id) rn
        from app_ui_flow_filter_vw
        <iterate prepend=" WHERE " conjunction="AND " property="filters">
            <isEqual property="filters[].element" compareValue="flowId">flow_id = #filters[].value#</isEqual>
        </iterate>
        ) where rn = 1
    </select>

    <parameterMap class="java.util.Map" id="save-dsp-document-mapping">
        <parameter property="applId" mode="IN" jdbcType="NUMERIC"/>
        <parameter property="documentType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="fileName" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="savePath" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="fileNameOut" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </parameterMap>

    <procedure id="save-dsp-document" parameterMap="save-dsp-document-mapping">
        {call app_ui_application_pkg.document_save(
        i_appl_id => ?
        , i_document_type => ?
        , i_file_name => ?
        , o_save_path => ?
        , o_file_name => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="multi-save-dsp-document-mapping">
        <parameter property="applIds" jdbcType="ARRAY" typeName="NUM_TAB_TPT" typeHandler="ru.bpc.sv2.utils.ListTypeHandler" mode="IN" />
        <parameter property="documentType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="fileName" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="savePath" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="fileNameOut" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </parameterMap>

    <procedure id="multi-save-dsp-document" parameterMap="multi-save-dsp-document-mapping">
        {call app_ui_application_pkg.document_save(
        i_appl_id_tab => ?
        , i_document_type => ?
        , i_file_name => ?
        , o_save_path => ?
        , o_file_name => ?
        )}
    </procedure>

    <procedure id="remove-dsp-application"
               parameterClass="ru.bpc.sv2.application.DspApplication">
        {call app_ui_application_pkg.remove_application(
              i_appl_id => #id#
            , i_seqnum  => #seqNum#
        )}
    </procedure>

    <procedure id="add-object" parameterClass="java.util.Map">
        {call app_api_appl_object_pkg.add_object(
        i_appl_id => #applId#
        , i_entity_type => #entityType#
        , i_object_id => #objectId#
        , i_seqnum => #seqNum#
        )}
    </procedure>

    <resultMap id="mapping-application-freq" extends="mapping-application" class="ru.bpc.sv2.application.FreqApplication">
        <result property="operType" column="oper_type"/>
        <result property="operReason" column="oper_reason"/>
        <result property="comment" column="comments"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="get-applications-freq-cur-map">
        <parameter property="ref_cur" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT" resultMap="mapping-application-freq"/>
        <parameter property="row_count" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="first_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="last_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="tab_name" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="param_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
        <parameter property="sorting_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT" typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
    </parameterMap>

    <procedure id="get-apps-freq-cur" parameterMap="get-applications-freq-cur-map">
        {call app_ui_fin_request_search_pkg.get_ref_cur(
              o_ref_cur     => ?
            , i_row_count   => ?
            , i_first_row   => ?
            , i_last_row    => ?
            , i_tab_name    => ?
            , i_param_tab   => ?
            , i_sorting_tab => ?
        )}
    </procedure>

    <procedure id="get-apps-freq-cur-count" parameterMap="get-applications-cur-count-map">
        {call app_ui_fin_request_search_pkg.get_row_count(
              o_row_count => ?
            , i_tab_name  => ?
            , i_param_tab => ?
        )}
    </procedure>

    <resultMap class="ru.bpc.sv2.application.ApplicationElement" id="get-entity-data-result-map">
        <result property="name" column="item_name"/>
        <result property="value" column="item_value"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="get-object-number-data-mapping">
        <parameter property="entityType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="objectId" mode="IN" javaType="java.lang.Long" jdbcType="NUMERIC"/>
        <parameter property="objectNumber" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="instId" mode="IN" javaType="java.lang.Integer" jdbcType="NUMERIC"/>
    </parameterMap>

    <select id="get-object-number-data"
            parameterMap="get-object-number-data-mapping"
            resultMap="get-entity-data-result-map">
		select 	name item_name,
				char_value item_value
		from table(cast(app_ui_application_pkg.get_entity_data(
		  i_entity_type            => ?
		, i_object_id              => ?
		, i_object_number          => ?
        , i_inst_id                => ?) as com_param_map_tpt))
	</select>

    <parameterMap class="java.util.Map" id="get-object-type-data-mapping">
        <parameter property="entityType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="objectType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="parentEntityType" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="parentObjectId" mode="IN" javaType="java.lang.Long" jdbcType="NUMERIC"/>
        <parameter property="instId" mode="IN" javaType="java.lang.Integer" jdbcType="NUMERIC"/>
        <parameter property="parentObjectNumber" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR" />
        <parameter property="innerId" mode="IN" javaType="java.lang.Integer" jdbcType="VARCHAR" />
    </parameterMap>

    <select id="get-object-type-data"
            parameterMap="get-object-type-data-mapping"
            resultMap="get-entity-data-result-map">
		select 	name item_name,
				char_value item_value
		from table(cast(app_ui_application_pkg.get_entity_data(
		  i_entity_type 			=> ?
		, i_object_type            	=> ?
		, i_parent_entity_type     	=> ?
		, i_parent_object_id       	=> ?
        , i_inst_id                 => ?
		, i_parent_object_number	=> ?
        , i_seqnum	                => ?) as com_param_map_tpt))
	</select>

    <parameterMap id="mapping-refuse-dsp-application" class="java.util.Map">
        <parameter property="applId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="userId" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="OUT"/>
    </parameterMap>

    <procedure id="refuse-dsp-application" parameterMap="mapping-refuse-dsp-application">
        {call app_ui_dispute_pkg.determine_user(
              i_appl_id => ?
            , o_user_id => ?
        )}
    </procedure>

    <parameterMap id="mapping-update-dsp-app-visibility" class="java.util.Map">
        <parameter property="id" javaType="java.lang.Long" mode="IN" jdbcType="NUMERIC"/>
        <parameter property="visible" javaType="java.lang.Boolean" mode="IN" jdbcType="NUMERIC"/>
    </parameterMap>

    <procedure id="update-dsp-app-visibility" parameterMap="mapping-update-dsp-app-visibility">
        {call app_ui_dispute_pkg.change_visibility(
              i_appl_id  => ?
            , i_is_visible => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="get-apps-dsp-count-map">
        <parameter property="row_count" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="OUT"/>
        <parameter property="tab_name" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="param_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT"
                   typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
    </parameterMap>

    <procedure id="get-apps-dsp-count" parameterMap="get-apps-dsp-count-map">
        { call csm_ui_search_pkg.get_row_count(
              o_row_count => ?
            , i_tab_name  => ?
            , i_param_tab => ?
        )}
    </procedure>

    <resultMap id="get-apps-dsp-data-map" class="ru.bpc.sv2.application.DspApplication">
        <result property="id" column="application_id"/>
        <result property="seqNum" column="seqnum" />
        <result property="applicationNumber" column="appl_number"/>
        <result property="cardMask" column="card_mask"/>
        <result property="cardNumber" column="card_number"/>
        <result property="operCardMask" column="card_mask"/>
        <result property="accountNumber" column="account_number"/>
        <result property="instId" column="inst_id"/>
        <result property="instName" column="inst_name"/>
        <result property="agentId" column="agent_id"/>
        <result property="agentName" column="agent_name"/>
        <result property="created" column="creation_date"/>
        <result property="status" column="appl_status"/>
        <result property="applStatusName" column="appl_status_name" />
        <result property="operDate" column="oper_date"/>
        <result property="rejectCode" column="reject_code"/>
        <result property="rejectCodeName" column="reject_code_name" />
        <result property="rejectComment" column="reject_comment" />
        <result property="comment" column="comments"/>
        <result property="visible" column="is_visible"/>
        <result property="flowId" column="flow_id"/>
        <result property="flowName" column="flow_name"/>
        <result property="userId" column="user_id"/>
        <result property="disputeId" column="dispute_id"/>
        <result property="operId" column="oper_id"/>
        <result property="referenceNumber" column="arn"/>
        <result property="authCode" column="auth_code"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="merchantNumber" column="merchant_number"/>
        <result property="terminalId" column="terminal_id"/>
        <result property="terminalNumber" column="terminal_number"/>
        <result property="customerNumber" column="customer_number"/>
        <result property="disputeReason" column="dispute_reason"/>
        <result property="disputeReasonName" column="dispute_reason_name"/>
        <result property="caseProgress" column="case_progress"/>
        <result property="caseStatus" column="case_source"/>
        <result property="caseStatusName" column="case_source_name"/>
        <result property="caseOwner" column="case_owner"/>
        <result property="caseOwnerName" column="case_owner_name"/>
        <result property="merchantName" column="merchant_name"/>
        <result property="disputedAmount" column="disputed_amount"/>
        <result property="disputedCurrency" column="disputed_currency"/>
        <result property="writeOffAmount" column="write_off_amount"/>
        <result property="writeOffCurrency" column="write_off_currency"/>
        <result property="disputeProgress" column="dispute_progress"/>
        <result property="amount" column="oper_amount"/>
        <result property="currency" column="oper_currency"/>
        <result property="transactionDate" column="oper_date"/>
        <result property="dueDate" column="due_date"/>
        <result property="reasonCode" column="reason_code"/>
        <result property="caseProgressName" column="case_progress_name"/>
        <result property="createdByUserId" column="created_by_user_id"/>
        <result property="createdByUserName" column="created_by_user_name"/>
        <result property="acquirerInstBin" column="acquirer_inst_bin"/>
        <result property="transactionCode" column="transaction_code"/>
        <result property="sttlAmount" column="sttl_amount"/>
        <result property="sttlCurrency" column="sttl_currency"/>
        <result property="baseAmount" column="base_amount"/>
        <result property="baseCurrency" column="base_currency"/>
        <result property="hideDate" column="hide_date"/>
        <result property="unhideDate" column="unhide_date"/>
        <result property="teamId" column="team_id"/>
        <result property="teamName" column="team_name"/>
        <result property="claimId" column="claim_id"/>
        <result property="mmt" column="mmt"/>
        <result property="lang" column="lang"/>
        <result property="mcc" column="mcc"/>
        <result property="arn" column="fin_mes_arn"/>
        <result property="rrn" column="rrn"/>
        <result property="merchantStreet" column="merchant_street"/>
        <result property="merchantCity" column="merchant_city"/>
        <result property="merchantRegion" column="merchant_region"/>
        <result property="merchantCountry" column="merchant_country"/>
        <result property="merchantPostCode" column="merchant_postcode"/>
        <result property="forwInstBin" column="forw_inst_bin"/>
        <result property="extClaimId" column="ext_claim_id"/>
    </resultMap>

    <parameterMap class="java.util.Map" id="get-apps-dsp-map">
        <parameter property="ref_cur" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT"
                   resultMap="get-apps-dsp-data-map"/>
        <parameter property="first_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="last_row" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="tab_name" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="param_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT"
                   typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
        <parameter property="sorting_tab" jdbcType="COM_PARAM_MAP_TPT" typeName="COM_PARAM_MAP_TPT"
                   typeHandler="ru.bpc.sv2.utils.CommonParamTypeHandler" mode="IN"/>
    </parameterMap>

    <procedure id="get-apps-dsp" parameterMap="get-apps-dsp-map">
        {call csm_ui_search_pkg.get_ref_cur(
              o_ref_cur     => ?
            , i_first_row   => ?
            , i_last_row    => ?
            , i_tab_name    => ?
            , i_param_tab   => ?
            , i_sorting_tab => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="initiate-dsp-map">
        <parameter property="operId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="disputeId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="OUT"/>
    </parameterMap>

    <procedure id="initiate-dsp" parameterMap="initiate-dsp-map">
        {call dsp_ui_process_pkg.initiate_dispute(
              i_oper_id    => ?
            , o_dispute_id => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="mapping-get-due-date">
        <parameter property="dueDate" javaType="java.util.Date" jdbcType="DATE" mode="OUT"/>
        <parameter property="caseId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="msgType" javaType="java.lang.String" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="reasonCode" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
        <parameter property="isManual" javaType="boolean" jdbcType="NUMERIC" mode="IN" />
    </parameterMap>

    <procedure id="get-due-date" parameterMap="mapping-get-due-date" resultClass="java.util.Date">
        {? = call csm_api_case_pkg.check_due_date(
              i_case_id     => ?
            , i_msg_type    => ?
            , i_reason_code => ?
            , i_is_manual   => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="mapping-update-due-date">
        <parameter property="applId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="dueDate" javaType="java.util.Date" jdbcType="DATE" mode="IN"/>
        <parameter property="seqNum" javaType="java.lang.Integer" jdbcType="NUMERIC" mode="INOUT"/>
    </parameterMap>

    <procedure id="update-due-date" parameterMap="mapping-update-due-date">
        {call csm_ui_case_pkg.set_due_date (
              i_case_id   => ?
            , i_due_date  => ?
            , io_seqnum   => ?
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="mapping-process-dsp-app">
        <parameter property="applId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
    </parameterMap>

    <procedure id="process-dsp-app" parameterMap="mapping-process-dsp-app">
        {call dsp_ui_application_pkg.process(
            i_appl_id => ?
        )}
    </procedure>

    <resultMap class="java.util.HashMap" id="mapping-get-customer-info">
        <result column="customer_id" property="customerId" jdbcType="NUMERIC" javaType="java.lang.Long"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>

    <select id="get-customer-info" parameterClass="java.util.HashMap" resultMap="mapping-get-customer-info">
        select id as customer_id
             , customer_name as customer_name
          from prd_ui_customer_name_vw
         where customer_number(+) = #customerNumber#
           and lang(+) = #userLang#
    </select>

    <select id="get-flexible-field-data-type-by-name" parameterClass="java.lang.String" resultClass="java.lang.String">
        select data_type as dataType
          from com_flexible_field_vw
         where upper(name) = upper(#fieldName#)
           and rownum = 1
    </select>

    <procedure id="set-app-user" parameterClass="ru.bpc.sv2.application.Application">
        {call csm_ui_case_pkg.set_application_user(
              i_case_id => #id#
            , io_seqnum => #seqNum,jdbcType=NUMERIC,mode=INOUT#
            , i_user_id => #userId#
        )}
    </procedure>

    <parameterMap class="java.util.Map" id="add-dispute-history-mapping">
        <parameter property="applId" mode="IN" jdbcType="NUMERIC"/>
        <parameter property="action" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="newStatus" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="oldStatus" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="newRejectCode" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="oldRejectCode" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="param" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </parameterMap>

    <procedure id="add-dispute-history" parameterMap="add-dispute-history-mapping">
        {call csm_ui_case_pkg.add_history(
        i_case_id           => ?
        , i_action          => ?
        , i_new_appl_status => ?
        , i_old_appl_status => ?
        , i_new_reject_code => ?
        , i_old_reject_code => ?
        , i_env_param1      => ?
        )}
    </procedure>

    <procedure id="approve-application"
               parameterClass="ru.bpc.sv2.application.Application">
        {call app_ui_application_pkg.modify_application(
            i_appl_id  	  => #id#
          , io_seqnum     => #seqNum,jdbcType=NUMERIC,mode=INOUT#
          , i_appl_status => #status#
        )}
    </procedure>


    <resultMap id="list-priority-criteria" class="ru.bpc.sv2.application.PriorityCriteria">
        <result property="criteriaName" column="field_name"/>
        <result property="criteriaValue" column="field_value" />
    </resultMap>


    <parameterMap id="mapping-priority-criteria" class="java.util.Map">
        <parameter property="applId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="priorityCriteria" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT" resultMap="list-priority-criteria"/>
    </parameterMap>

    <procedure id="get-priority-criteria" parameterMap="mapping-priority-criteria">
        {call cst_bsm_outgoing_pkg.get_priority_criteria(
        i_application_id  	  => ?
        , o_ref_cursor        => ?
        )}
    </procedure>

    <resultMap id="list-priority-products" class="ru.bpc.sv2.application.ApplicationPriorityProduct">
        <result property="productNumber"      column="product_number"/>
        <result property="productDescription" column="product_description" />
    </resultMap>


    <parameterMap id="mapping-priority-products" class="java.util.Map">
        <parameter property="applId" javaType="java.lang.Long" jdbcType="NUMERIC" mode="IN"/>
        <parameter property="priorityProducts" javaType="java.sql.ResultSet" jdbcType="ORACLECURSOR" mode="OUT" resultMap="list-priority-products"/>
    </parameterMap>

    <procedure id="get-priority-products" parameterMap="mapping-priority-products">
        {call cst_bsm_outgoing_pkg.get_priority_products(
        i_application_id  	  => ?
        , o_ref_cursor        => ?
        )}
    </procedure>
</sqlMap>
