<?xml version="1.0" encoding="UTF-8"?>
<html	xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:a4j="http://richfaces.org/a4j"
		xmlns:rich="http://richfaces.org/rich"
		xmlns:bm="http://www.bpc.ru/jsf/misc"
		xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext"
		xmlns:o="http://openfaces.org/">
<ui:composition>
	<script type="text/javascript">
//<!--
	function enableButtons() {
		var rowId = "row_" + 
				document.getElementById("settingsForm:settingsTreeTable").getSelectedNodeKey();
		if (document.getElementById("settingsForm:settingsTreeTable").isSelectionEmpty() ||
				document.getElementsByClassName(rowId)[0].className.indexOf("isLeaf_false") >= 0) {
			document.getElementById("settingsForm:editBtn").disabled = true;
		} else {
			document.getElementById("settingsForm:editBtn").disabled = false;
		}
	}
	//-->
	</script>

	<h:form id="settingsForm">
		<h:panelGroup styleClass="search_result_block" layout="block">
    		<h:panelGroup styleClass="search_result_block_left fix-ff" layout="block"
	    			id="settingsTreeTableWrapper">
				<o:treeTable id="settingsTreeTable" var="settingParam"
						expansionState="allExpanded"
						headerHorizSeparator="1px solid #D7DAC2"
						headerVertSeparator="1px solid #D7DAC2"
						headerSectionClass="res-tree-table-header"
						commonHeaderRowClass="res-tree-table-header"
						sortableHeaderClass="res-tree-table-header"
						sortedColumnHeaderClass="res-tree-table-header"
						sortableHeaderRolloverClass="res-tree-table-header"
						styleClass="extdt-table-layout res-tree-table"
						bodyOddRowClass="res-tree-table-row odd-tree-table"
						bodyRowClass="res-tree-table-row" headerRowClass="res-tree-table-header"
						verticalGridLines="1px solid #D7DAC2"
						cellpadding="0" cellspacing="0" style="height:500px;"
						>
					<o:scrolling/>
		            <o:singleNodeSelection nodePath="#{MbSettingParamsSearch.nodePath}"
				          	nodeData="#{MbSettingParamsSearch.node}"
	          				keyboardSupport="false"
	          				onchange="enableButtons()"
	          				styleClass="treetable_selection"
	          				>
	          		</o:singleNodeSelection>
					<o:dynamicTreeStructure 
							nodeChildren="#{MbSettingParamsSearch.nodeChildrenSystem}" 
							nodeHasChildren="#{MbSettingParamsSearch.nodeHasChildren}" 
							nodeKey="#{settingParam.modelId}"/>

				    <o:treeColumn id="description" width="30%" filterKind="searchField" >
				    	<f:facet name="header">
				        	<h:outputText value="#{lblCommon.description}"/>
				      	</f:facet>
				      	<h:outputText value="#{settingParam.name}" 
				      			rendered="#{settingParam.name != null}" 
				      			styleClass="treeTableText #{settingParam.leaf ? '' : 'isLeaf_false'}
				      					row_#{settingParam.modelId}"/>
				      	<h:outputText value="#{settingParam.name}" 
				      			rendered="#{settingParam.name == null}"
								styleClass="treeTableText #{settingParam.leaf ? '' : 'isLeaf_false'}
				      					row_#{settingParam.modelId}"/>
				    </o:treeColumn>

					<o:column id="value" styleClass="res-tree-table-cell">
						<f:facet name="header">
							<h:outputText value="#{lblCommon.value}"/>
						</f:facet>
						<h:outputText value="#{settingParam.value}" styleClass="treeTableText"
									  rendered="#{settingParam.char and !settingParam.encrypted}"/>
						<h:outputText value="#{settingParam.value}" styleClass="treeTableText"
									  rendered="#{settingParam.char and settingParam.encrypted}"/>
						<h:outputText value="#{settingParam.value}" styleClass="treeTableText"
									  rendered="#{settingParam.number and settingParam.lovId == null}">
							<bm:convertNumberNew minFractionDigits="0" groupingUsed="false" maxIntegerDigits="18"/>
						</h:outputText>
						<h:outputText value="#{settingParam.value}" styleClass="treeTableText"
									  rendered="#{settingParam.date}"/>
						<h:outputText value="#{settingParam.lovValue}" styleClass="treeTableText"
									  rendered="#{settingParam.lovId != null and !settingParam.char}"/>
				    </o:column>

				</o:treeTable>
				<a4j:outputPanel ajaxRendered="true">
		            <h:graphicImage url="/_img/hd_searchblock.gif" styleClass="hd-searchblock"/>
				    <h:panelGroup styleClass="collapse-vert" layout="block"/>
			    </a4j:outputPanel>
			</h:panelGroup>
		</h:panelGroup>

		<h:panelGroup layout="block" styleClass="bottom_search_result_block-tree">
			<h:panelGroup layout="block" styleClass="bottom_search_result_left-tree">
				<h:panelGrid styleClass="buttons_block" columns="5" id="btnPanel">
		           	<bre:taggedCommandButton id="editBtn"
                       		value="#{lblForm.edit}"
                       		action="#{MbSettingParamsSearch.edit}"
                       		oncomplete="#{rich:component('set_param_modal_panel')}.show()"
                       		reRender="set_param_modal_panel"
                       		image="/images/edit.gif"
                       		/>
                	<bre:taggedCommandButton id="reloadBtn"
								value="#{lblForm.apply}"
								action="#{MbSettingParamsSearch.reloadCache}"
								/>
				</h:panelGrid>
			</h:panelGroup>
		</h:panelGroup>
    
       	<script type="text/javascript">
//<!--
   			// select first row which for some reason doesn't want to do it automatically 
   			var nodeKey = "#{MbSettingParamsSearch.node.modelId}";
   			if (document.getElementById("settingsForm:settingsTreeTable").getSelectedNodeKey() == null
   					&& nodeKey != null && nodeKey != "") {
   				document.getElementById("settingsForm:settingsTreeTable").setSelectedNodeKey(nodeKey);
   			}
   			// -->
       	</script>
    </h:form>

	<ui:include src="/pages/settings/settings_modal.jspx">
		<ui:param name="rerenderList" value="settingsForm"/>
		<ui:param name="systemParams" value="true"/>
	</ui:include>

	<script type="text/javascript">
//<!--
		enableButtons();//-->
	</script>
	
	<script>
			//<![CDATA[
		
			function updateHeight(){
				
				// Workplace panel height calculation
				// We have a page structure like this:
				// * Header
				// * Navigator
				// * Search panel
				// * Result panel
				// * Workplace
				//var appsSearchForm = document.getElementById("settingsForm");
				var topHeight = 0;
				topHeight = topHeight + 0;//appsSearchForm.clientHeight;
				var header = 42; // height of the header in 'navigatable.jspx'
				var navigator = 15/*body*/ + 10 /*padding-top*/ + 12 /*padding-bottom*/;
				topHeight = topHeight + 10 /*search_block margin*/;
				
				var windowHeight = Stretch.getWindowHeight();
				var workplacePanelHeight = windowHeight - header - navigator - topHeight;
				if (workplacePanelHeight < Stretch.MIN_WORKPLACE_HEIGHT){
					workplacePanelHeight = Stretch.MIN_WORKPLACE_HEIGHT;
				}				
				// In accordance with the width of workplace we setup the tables on tabs
				
				Stretch.updateTreeHeightByFixedHeight('settingsForm:settingsTreeTableWrapper', workplacePanelHeight - 69 /*buttons*/ - 0 /*top-padding*/);
			}
			updateHeight();
			//]]>
		</script>

</ui:composition>
</html>
