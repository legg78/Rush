<?xml version="1.0" encoding="UTF-8"?>
<html	xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:a4j="http://richfaces.org/a4j"
		xmlns:rich="http://richfaces.org/rich"
		xmlns:bm="http://www.bpc.ru/jsf/misc"
		xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
<ui:composition>

	<script type="text/javascript">//<!--
	function checkComponentsForm() {
		var checked = true;

		if (document.getElementById("componentEditForm:newBaseType").value == "") {
			document.getElementById("componentEditForm:newBaseTypeError").style.display = "inline";
			checked = false;
		}
		if (document.getElementById("componentEditForm:newBaseValue")
				&& document.getElementById("componentEditForm:newBaseValue").value == "") {
			document.getElementById("componentEditForm:newBaseValueError").style.display = "inline";
			checked = false;
		}
		if (document.getElementById("componentEditForm:newBaseValue1")
				&& document.getElementById("componentEditForm:newBaseValue1").value == "") {
			document.getElementById("componentEditForm:newBaseValue1Error").style.display = "inline";
			checked = false;
		}
		if (document.getElementById("componentEditForm:newOrder").value == "") {
			document.getElementById("componentEditForm:newOrderError").style.display = "inline";
			checked = false;
		}
		if (document.getElementById("componentEditForm:newTransfMask")
				&& document.getElementById("componentEditForm:newTransfMask").value == "") {
			document.getElementById("componentEditForm:newTransfMaskError").style.display = "inline";
			checked = false;
		}
		var input = document.getElementById("componentEditForm:newComponentLength");
		if (input != null){
			var value = input.value;
			if (!checkNumbers(value) || !checkPositive(input)){
				document.getElementById("componentEditForm:newComponentLengthError").style.display = "inline";
				checked = false;
			} 
		}

		return checked;
	}

	function hideErrorField2(elem) {
		if (document.getElementById(elem.id + "Error2").style.display != "none"
				|| document.getElementById(elem.id + "Error2").style.display != "") {
			document.getElementById(elem.id + "Error").style.display = "none";
		}
	}
	
	function IsNumeric(input){
	    return (input - 0) == input && input.length > 0;
	}
	//-->
	</script>
	<h:form id="componentEditForm">
		<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
			<h:panelGrid columns="2" styleClass="cardholderdata" width="100%" columnClasses="firstColModal, width250">

				<h:outputLabel value="* #{lblRul.value_type}: " title="#{lblRul.value_type}"/>
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
					<a4j:region>
						<h:selectOneMenu id="newBaseType"
								value="#{MbNameComponentsSearch.newComponent.baseValueType}"
								label="#{lblRul.value_type}"
								onblur="hideErrorField(this)">
							<f:selectItems value="#{MbNameComponentsSearch.baseValueTypes}"/>
							<a4j:support event="onchange" reRender="test, component_value, componentValueLabel"
									limitToList="true" ajaxSingle="true"
									action="#{MbNameComponentsSearch.changeValueType}"/>
						</h:selectOneMenu>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newBaseTypeError" style="display:none;">
						<f:param name="fieldName" value="#{lblRul.value_type}"/>
					</h:outputFormat>
				</h:panelGrid>
				
				<h:panelGroup id="componentValueLabel" layout="block">
					<h:outputLabel value="* #{lblCommon.value}: " title="#{lblCommon.value}" rendered="#{MbNameComponentsSearch.newComponent.baseValueType == null or !MbNameComponentsSearch.indexValue}"/>
				</h:panelGroup>
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0" id="component_value" >
					<a4j:region>
						<h:selectOneMenu id="newBaseValue" rendered="#{MbNameComponentsSearch.parameterValue or MbNameComponentsSearch.arrayValue}"
								value="#{MbNameComponentsSearch.newComponent.baseValue}"
								label="#{lblCommon.value}">
							<a4j:support event="onblur" reRender="newBaseValue" 
									onsubmit="hideErrorField(this)" limitToList="true" ajaxSingle="true"/>
							<f:selectItem itemValue=""/>
							<f:selectItems value="#{MbNameComponentsSearch.baseValues}"/>
						</h:selectOneMenu>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newBaseValueError" style="display:none;">
						<f:param name="fieldName" value="#{lblCommon.value}"/>
					</h:outputFormat>
					
					<a4j:region>
						<h:inputText id="newBaseValue1"
								rendered="#{MbNameComponentsSearch.newComponent.baseValueType == null or MbNameComponentsSearch.constantValue}"
								value="#{MbNameComponentsSearch.newComponent.baseValue}" maxlength="200"
								label="#{lblCommon.value}"
								disabled="#{MbNameComponentsSearch.newComponent.baseValueType == null}">
							<a4j:support event="onblur" reRender="newBaseValue1"
									onsubmit="hideErrorField(this)" limitToList="true" ajaxSingle="true"/>
						</h:inputText>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newBaseValue1Error" style="display:none;">
						<f:param name="fieldName" value="#{lblCommon.value}"/>
					</h:outputFormat>
				</h:panelGrid>

				<h:outputLabel value="* #{lblRul.transformation_type}: " title="#{lblRul.transformation_type}" />
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
					<a4j:region>
						<h:selectOneMenu id="newTransfType"
							value="#{MbNameComponentsSearch.newComponent.transformationType}"
							label="#{lblRul.transformation_type}">
							<a4j:support event="onchange"
								reRender="newTransfMaskLabel, newTransfMaskDiv"
								ajaxSingle="true" limitToList="true"
								oncomplete="showHideRows()"/>
							<f:selectItems value="#{MbNameComponentsSearch.transformationTypes}" />
						</h:selectOneMenu>
					</a4j:region>
				</h:panelGrid>

				<h:outputLabel id="newTransfMaskLabel" 
						value="* #{lblRul.transformation_mask}: "
						title="#{lblRul.transformation_mask}: "
						styleClass="#{(MbNameComponentsSearch.newComponent.transformationType != null
								and MbNameComponentsSearch.newComponent.transformationType != 'TSFTNOTR') ? 
								'visibleRow' : 'hiddenRow'}" />
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0" id="newTransfMaskDiv"
						styleClass="#{(MbNameComponentsSearch.newComponent.transformationType != null
								and MbNameComponentsSearch.newComponent.transformationType != 'TSFTNOTR') ? 
								'visibleRow' : 'hiddenRow'}">
					<a4j:region>
						<h:inputText id="newTransfMask" maxlength="200"
								value="#{MbNameComponentsSearch.newComponent.transformationMask}"
								rendered="#{MbNameComponentsSearch.newComponent.transformationType != null
										and MbNameComponentsSearch.newComponent.transformationType != 'TSFTNOTR'}"
								label="#{lblRul.transformation_mask}">
							<a4j:support event="onblur" reRender="newTransfMask" 
									onsubmit="hideErrorField(this)" limitToList="true" ajaxSingle="true"/>
						</h:inputText>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
						id="newTransfMaskError" style="display:none;">
						<f:param name="fieldName" value="#{lblRul.transformation_mask}"/>
					</h:outputFormat>
	           	</h:panelGrid>


				<h:outputLabel value="#{lblRul.length}: " title="#{lblRul.length}" />
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0"
					id="componentLenghtDiv">
					<a4j:region>
						<h:inputText id="newComponentLength" maxlength="4"
							value="#{MbNameComponentsSearch.newComponent.componentLength}"
							label="#{lblRul.name_length}"
							onkeypress="if (!numbersOnly(this, event)) return false;">
							<a4j:support event="onblur" reRender="newComponentLength"
								limitToList="true" ajaxSingle="true" onsubmit="hideErrorField(this)"/>
						</h:inputText>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.pos_number}"
						styleClass="errorMarker" id="newComponentLengthError"
						style="display:none;">
						<f:param name="fieldName" value="#{lblRul.name_length}" />
					</h:outputFormat>
				</h:panelGrid>

				<h:outputLabel value="#{lblRul.pad_type}: " title="#{lblRul.pad_type}"/>
				<a4j:region>
					<h:selectOneMenu id="newPadType" value="#{MbNameComponentsSearch.newComponent.padType}">
						<f:selectItems value="#{MbNameComponentsSearch.padTypes}"/>
						<a4j:support event="onblur" reRender="newPadType" limitToList="true" ajaxSingle="true"/>
					</h:selectOneMenu>
				</a4j:region>

				<h:outputLabel value="#{lblRul.pad_string}: " title="#{lblRul.pad_string}"/>
				<a4j:region>
					<h:inputText id="newPadString" value="#{MbNameComponentsSearch.newComponent.padString}" maxlength="200">
						<a4j:support event="onblur" reRender="newPadString" limitToList="true" ajaxSingle="true"/>
					</h:inputText>
				</a4j:region>

				<h:outputLabel value="* #{lblCommon.order}: " title="#{lblCommon.order}"/>
				<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
					<a4j:region>
						<h:inputText maxlength="4" id="newOrder"
									value="#{MbNameComponentsSearch.newComponent.componentOrder}"
									label="#{lblCommon.order}"
									onkeypress="if (!numbersOnly(this, event)) return false; "
									onblur="hideErrorField(this)">
							<f:converter converterId="javax.faces.Integer"/>
							<a4j:support event="onchange" reRender="newOrderErr"
									limitToList="true" ajaxSingle="true"/>
						</h:inputText>
					</a4j:region>
					<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newOrderError" style="display:none;">
						<f:param name="fieldName" value="#{lblCommon.order}"/>
					</h:outputFormat>
					<rich:message for="newOrder" styleClass="errorMarker" id="newOrderErr"
							showDetail="false" showSummary="true"/>
				</h:panelGrid>

				<h:outputLabel value="#{lblRul.use_for_checking}: " title="#{lblRul.use_for_checking}"/>
				<a4j:region>
					<h:selectBooleanCheckbox id="newCheckName" 
							value="#{MbNameComponentsSearch.newComponent.check}">
						<a4j:support event="onchange" reRender="newCheckName"
								limitToList="true" ajaxSingle="true"/>
					</h:selectBooleanCheckbox>
				</a4j:region>
			</h:panelGrid>
		</h:panelGroup>
	</h:form>
</ui:composition>
</html>