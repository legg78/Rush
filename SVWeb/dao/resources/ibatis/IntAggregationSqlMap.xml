<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
		PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="int_aggregation">

	<sql id="limitationOpen">
		SELECT *
		FROM (
	</sql>

	<sql id="limitationOpenCount">
		SELECT count(*)
		FROM (
	</sql>

	<sql id="limitationClose">
		) q
		<isNotNull property="limitation" prepend=" WHERE ">$limitation$</isNotNull>
	</sql>
	<sql id="paginatedOpen">
		SELECT *
		FROM(
		SELECT a.*, rownum r
		FROM(
		<include refid="limitationOpen"/>
	</sql>

	<sql id="paginatedClose">
		<include refid="limitationClose"/>
		) a
		WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
		)
		WHERE r >= (#range.start# + 1)
	</sql>

	<resultMap id="mapping_type" class="ru.bpc.sv2.aggregation.AggrType">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="condition" column="condition"/>
	</resultMap>

	<resultMap id="mapping_rule" class="ru.bpc.sv2.aggregation.AggrRule">
		<result property="id" column="id"/>
		<result property="paramId" column="param_id"/>
		<result property="aggrTypeId" column="type_id"/>
		<result property="aggrType" column="type"/>
		<result property="rounding" jdbcType="VARCHAR" column="rounding"/>
	</resultMap>

	<resultMap id="mapping_param" class="ru.bpc.sv2.aggregation.AggrParam">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="table" column="table_name"/>
		<result property="field" column="field"/>
		<result property="type" column="type"/>
	</resultMap>

	<select id="get_aggr_types" parameterClass="qparams" resultMap="mapping_type">
		<include refid="paginatedOpen"/>
		SELECT id,
		name,
		description,
		condition
		FROM agr_type
		WHERE network_id=#networkId#
		<iterate prepend="AND" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="name">name LIKE #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="description">description LIKE #filters[].value#
			</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="name">name $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="description">description $sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="condition">condition $sorting[].direction$
				</isEqual>
			</isNotEqual>
		</iterate>
		<include refid="paginatedClose"/>
	</select>

	<select id="get_aggr_types_cnt" parameterClass="qparams" resultClass="long">
		SELECT COUNT(1) FROM agr_type WHERE network_id=#networkId#
		<iterate prepend="AND" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="name">name LIKE #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="description">description LIKE #filters[].value#
			</isEqual>
		</iterate>
	</select>

	<insert id="insert_aggr_type" parameterClass="ru.bpc.sv2.aggregation.AggrType">
		INSERT INTO agr_type(id, name, description, condition, network_id) VALUES (#id#, #name#, #description#, #condition#, #networkId#)
	</insert>

	<update id="update_aggr_type" parameterClass="ru.bpc.sv2.aggregation.AggrType">
		UPDATE agr_type SET name=#name#, description=#description#, condition=#condition# WHERE id=#id#
	</update>

	<delete id="delete_aggr_type" parameterClass="map">
		DELETE FROM agr_type WHERE id=#item_id#
	</delete>

	<select id="get_aggr_rules" parameterClass="qparams" resultMap="mapping_rule">
		SELECT id,
		param_id,
		type,
		rounding,
		type_id
		FROM agr_rule
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="aggr_type_id">type_id = #filters[].value#</isEqual>
		</iterate>
	</select>

	<insert id="insert_aggr_rule" parameterClass="ru.bpc.sv2.aggregation.AggrRule">
		INSERT INTO agr_rule(id, type_id, param_id, type, rounding)
		VALUES (#id#, #aggrTypeId#, #paramId#, #aggrType#, #rounding#)
	</insert>

	<update id="update_aggr_rule" parameterClass="ru.bpc.sv2.aggregation.AggrRule">
		UPDATE agr_rule SET type_id=#aggrTypeId#, param_id=#paramId#, type=#aggrType#, rounding=#rounding#
		WHERE id=#id#
	</update>

	<delete id="delete_aggr_rule" parameterClass="map">
		DELETE FROM agr_rule WHERE id=#item_id#
	</delete>

	<delete id="delete_rules_for_type" parameterClass="map">
		DELETE FROM agr_rule WHERE type_id=#item_id#
	</delete>

	<select id="get_aggr_result_columns" parameterClass="map" resultClass="string">
		SELECT DISTINCT p.field FROM agr_param_value pv INNER JOIN agr_parameter p ON(pv.param_id=p.id)
		WHERE pv.type_id = #type_id#
	</select>

	<select id="get_aggr_params" parameterClass="qparams" resultMap="mapping_param">
		SELECT id, name, field, table_name, type FROM agr_parameter WHERE network_id=#networkId#
	</select>

	<select id="new_type_id" resultClass="long">
		SELECT agr_type_seq.nextval FROM dual
	</select>

	<select id="new_rule_id" resultClass="long">
		SELECT agr_rule_seq.nextval FROM dual
	</select>

	<select id="get_aggr_results" parameterClass="map" resultClass="java.util.HashMap">
		SELECT * FROM (
			SELECT p.field, pv.value, v.count, v.value as sum, v.currency, pv.value_id as id
			FROM agr_param_value pv INNER JOIN agr_parameter p ON(pv.param_id=p.id)
			INNER JOIN agr_value v ON (pv.value_id=v.id) WHERE pv.type_id=#type_id#
		) PIVOT(MAX(value) FOR field IN ($columns$))
	</select>

	<select id="validate_rules" parameterClass="qparams" resultClass="long">
		SELECT COUNT(1) FROM (SELECT DISTINCT ap.flag FROM agr_parameter ap
		INNER JOIN agr_rule ar ON(ap.id=ar.param_id)
		WHERE ap.flag IS NOT NULL
		<iterate prepend="AND" property="filters">
			<isEqual property="filters[].element" compareValue="aggr_type_id">ar.type_id=#filters[].value#
			</isEqual>
		</iterate>
		)
	</select>
</sqlMap>