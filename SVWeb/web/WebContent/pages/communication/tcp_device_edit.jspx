<?xml version="1.0" encoding="UTF-8"?>
<html	xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:a4j="http://richfaces.org/a4j"
		xmlns:rich="http://richfaces.org/rich"
		xmlns:bm="http://www.bpc.ru/jsf/misc"
		xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
<ui:composition>
	<f:loadBundle var="lblCmn" basename="ru.bpc.sv2.ui.bundles.Cmn" />

	<rich:modalPanel id="tcpModalPanel" autosized="true" minWidth="300"
			minHeight="100">
		<f:facet name="header">
			<h:panelGroup id="tcpModalHeader">
				<h:outputText value="#{lblCmn.edit_tcp_device}" rendered="#{MbTcpIpDevices.editMode}" />
				<h:outputText value="#{lblCmn.new_tcp_device}" rendered="#{MbTcpIpDevices.newMode}" />
			</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
		</f:facet>
		<h:form id="tcpEditForm">
	<script type="text/javascript">
//<!--
		oldValue["tcpEditForm"] = "#{MbTcpIpDevices.newDevice.lang}";
		
		function checkTcpDeviceFields() {
			var checked = true;
			
			if (document.getElementById('tcpEditForm:newInst').value == "") {
				document.getElementById('tcpEditForm:newInstError').style.display = "inline";
				checked = false;
			}
			
			if (document.getElementById('tcpEditForm:newCommPlugin').value == "") {
				document.getElementById('tcpEditForm:newCommPluginError').style.display = "inline";
				checked = false;
			}								
			if (!document.getElementById('tcpEditForm:newStandard').disabled
					&& document.getElementById('tcpEditForm:newStandard').value == "") {
				document.getElementById('tcpEditForm:newStandardError').style.display = "inline";
				checked = false;
			}		
			if (document.getElementById('tcpEditForm:newInitiator').value == "") {
				document.getElementById('tcpEditForm:newInitiatorError').style.display = "inline";
				checked = false;
			}
			if (document.getElementById('tcpEditForm:newRemoteAddressError')
					&& document.getElementById('tcpEditForm:newRemoteAddress').value == "") {
				document.getElementById('tcpEditForm:newRemoteAddressError').style.display = "inline";
				checked = false;
			}
			if (document.getElementById('tcpEditForm:newLocalPortError')
					&& document.getElementById('tcpEditForm:newLocalPort').value == "") {
				document.getElementById('tcpEditForm:newLocalPortError').style.display = "inline";
				checked = false;
			}
			if (document.getElementById('tcpEditForm:newRemotePortError')
					&& document.getElementById('tcpEditForm:newRemotePort').value == "") {
				document.getElementById('tcpEditForm:newRemotePortError').style.display = "inline";
				checked = false;
			}
			if (document.getElementById('tcpEditForm:newFormat').value == "") {
				document.getElementById('tcpEditForm:newFormatError').style.display = "inline";
				checked = false;
			}
			if (document.getElementById('tcpEditForm:newDeviceName').value == "") {
				document.getElementById('tcpEditForm:newDeviceNameError').style.display = "inline";
				checked = false;
			}
			return checked;
		}
	//-->
	</script>
	
	<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
		<h:panelGrid columns="2" styleClass="cardholderdata" columnClasses="firstColModal, width250">
			<h:outputLabel for="newInst" value="* #{lblCommon.institution}: " title="#{lblCommon.institution}"/>
			<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
				<h:selectOneMenu id="newInst"
						value="#{MbTcpIpDevices.newDevice.instId}" 
						label="#{lblCommon.institution}"
						disabled="#{MbTcpIpDevices.editMode}"
						onblur="hideErrorField(this)">
					<f:selectItem itemValue=""/>
					<f:selectItems value="#{MbTcpIpDevices.institutions}" />
				</h:selectOneMenu>
				<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
					id="newInstError" style="display:none;">
					<f:param name="fieldName" value="#{lblCommon.institution}"/>
				</h:outputFormat>
			</h:panelGrid>

			<h:outputLabel for="newCommPlugin" value="* #{lblCmn.comm_plugin}: " title="#{lblCmn.comm_plugin}" />
			<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
				<h:selectOneMenu id="newCommPlugin"
						value="#{MbTcpIpDevices.newDevice.commPlugin}"
						label="#{lblCmn.comm_plugin}"
						onblur="hideErrorField(this)">
					<f:selectItems value="#{MbTcpIpDevices.commPlugins}" />
				</h:selectOneMenu>
				<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
					id="newCommPluginError" style="display:none;">
					<f:param name="fieldName" value="#{lblCmn.comm_plugin}"/>
				</h:outputFormat>
			</h:panelGrid>

			<h:outputLabel for="newStandard" value="* #{lblCmn.standard}: " title="#{lblCmn.standard}" />
			<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
				<h:selectOneMenu id="newStandard"  disabled="#{MbTcpIpDevices.blockFilterStandard}"
						value="#{MbTcpIpDevices.newDevice.standardId}"
						label="#{lblCmn.standard}"
						onblur="hideErrorField(this)">
					<f:selectItem itemValue=""/>
					<f:selectItems value="#{MbTcpIpDevices.standards}"/>
				</h:selectOneMenu>
				<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
					id="newStandardError" style="display:none;">
					<f:param name="fieldName" value="#{lblCmn.standard}"/>
				</h:outputFormat>
			</h:panelGrid>
			
			<h:outputLabel value="#{lblCommon.language}: " title="#{lblCommon.language}" />
			<h:selectOneMenu id="newLang" value="#{MbTcpIpDevices.newDevice.lang}"
					rendered="#{MbTcpIpDevices.newMode}">
				<f:selectItems value="#{MbTcpIpDevices.languages}"/>
			</h:selectOneMenu>
			<h:selectOneMenu id="editLang" value="#{MbTcpIpDevices.newDevice.lang}"
					rendered="#{MbTcpIpDevices.editMode}"
					onchange="document.getElementById('tcpDevice:confirmPanelForm:newValue').value = this.value;
							#{rich:component('confirmPanel')}.show()">
				<f:selectItems value="#{MbTcpIpDevices.languages}"/>
			</h:selectOneMenu>

			<h:outputLabel value="* #{lblCmn.device_name}: " title="#{lblCmn.device_name}" />
			<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
				<h:inputText id="newDeviceName" maxlength="200"
						value="#{MbTcpIpDevices.newDevice.caption}"
						label="#{lblCmn.device_name}"
						onblur="hideErrorField(this)">
				</h:inputText>
				<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
					id="newDeviceNameError" style="display:none;">
					<f:param name="fieldName" value="#{lblCmn.device_name}"/>
				</h:outputFormat>
			</h:panelGrid>

			<h:outputLabel value="#{lblCommon.description}: " title="#{lblCommon.description}" />
			<h:inputTextarea id="newDesc" value="#{MbTcpIpDevices.newDevice.description}" 
					onkeypress="if (!limitText(event,this,2000)) return false;" 
           					label="#{lblCommon.description}">
	            	<f:validateLength maximum="2000" />
	        </h:inputTextarea>
		</h:panelGrid>
		
		<a4j:outputPanel id="tcpFields">
			<fieldset>
				<legend>#{lblCmn.tcp_device}</legend>
				<h:panelGrid columns="2" styleClass="cardholderdata" columnClasses="firstColModal, width250">
					<h:outputLabel for="newRemoteAddress" value="* #{lblCmn.remote_address}: " title="#{lblCmn.remote_address}" />
					<a4j:outputPanel id="newRemoteAddressPanel">
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
							<h:inputText id="newRemoteAddress"
									value="#{MbTcpIpDevices.newDevice.remoteAddress}"
									label="#{lblCmn.remote_address}"
									maxlength="15" validator="bpc.RegExValidator"
									onblur="hideErrorField(this)">
								<f:attribute name="textPattern" value="#{lblCommon.human_pattern_ip_adress}"/>
								<f:attribute name="pattern"
									value="^([1]?\d{1,2}|2[0-4]{1}\d{1}|25[0-5]{1})(\.([1]?\d{1,2}|2[0-4]{1}\d{1}|25[0-5]{1})){3}$" />
								<a4j:support event="onbchange" reRender="newRemoteAddressErr" limitToList="true" ajaxSingle="true"/>
							</h:inputText>
							<rich:message for="newRemoteAddress" id="newRemoteAddressErr" styleClass="errorMarker" />
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newRemoteAddressError" style="display:none;" >
								<f:param name="fieldName" value="#{lblCmn.remote_address}"/>
							</h:outputFormat>
						</h:panelGrid>
					</a4j:outputPanel>
					
					<h:outputLabel for="newInitiator" value="* #{lblCmn.initiator}: " title="#{lblCmn.initiator}" />
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:selectOneMenu id="newInitiator"
								value="#{MbTcpIpDevices.newDevice.initiator}"
								label="#{lblCmn.initiator}"
								onblur="hideErrorField(this)">
							<a4j:support event="onchange" reRender="newLocalPortLabel, newLocalPortPanel, newRemotePortLabel, newRemotePortPanel" limitToList="true" ajaxSingle="true"/>
							<f:selectItems value="#{MbTcpIpDevices.initiators}" />
						</h:selectOneMenu>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newInitiatorError" style="display:none;">
							<f:param name="fieldName" value="#{lblCmn.initiator}"/>
						</h:outputFormat>
					</h:panelGrid>
					
					<h:outputLabel for="newLocalPort" id="newLocalPortLabel" 
							value="#{MbTcpIpDevices.newDevice.initiator == 'TCPIREMT'?'*':''} #{lblCmn.local_port}: " />
					<a4j:outputPanel id="newLocalPortPanel">
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
							<h:inputText id="newLocalPort"
									value="#{MbTcpIpDevices.newDevice.localPort}" 
									label="#{lblCmn.local_port}" maxlength="5"
									onblur="#{MbTcpIpDevices.newDevice.initiator == 'TCPIREMT' ? 'hideErrorField(this)' : ''}">
								<a4j:support event="onchange" reRender="newLocalPortErr" limitToList="true" ajaxSingle="true"/>
								<f:validateLongRange minimum="1" maximum="65535" />
							</h:inputText>
							<rich:message for="newLocalPort" id="newLocalPortErr" styleClass="errorMarker" />
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newLocalPortError" style="display:none;" rendered="#{MbTcpIpDevices.newDevice.initiator == 'TCPIREMT'}">
								<f:param name="fieldName" value="#{lblCmn.local_port}"/>
							</h:outputFormat>
						</h:panelGrid>
					</a4j:outputPanel>
		
					<h:outputLabel for="newRemotePort" id="newRemotePortLabel" 
							value="#{MbTcpIpDevices.newDevice.initiator == 'TCPIHOST'?'*':''} #{lblCmn.remote_port}: " />
					<a4j:outputPanel id="newRemotePortPanel">
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
							<h:inputText id="newRemotePort"
									value="#{MbTcpIpDevices.newDevice.remotePort}" 
									label="#{lblCmn.remote_port}" maxlength="5" 
									onblur="#{MbTcpIpDevices.newDevice.initiator == 'TCPIHOST' ? 'hideErrorField(this)' : ''}">
								<a4j:support event="onchange" reRender="newRemotePortErr" limitToList="true" ajaxSingle="true"/>
								<f:validateLongRange minimum="1" maximum="65535" />
							</h:inputText>
							<rich:message for="newRemotePort" id="newRemotePortErr" styleClass="errorMarker" />
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newRemotePortError" style="display:none;" rendered="#{MbTcpIpDevices.newDevice.initiator == 'TCPIHOST'}">
								<f:param name="fieldName" value="#{lblCmn.remote_port}"/>
							</h:outputFormat>
						</h:panelGrid>
					</a4j:outputPanel>
		
					<h:outputLabel for="newFormat" value="* #{lblCmn.format}: " title="#{lblCmn.format}" />
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:selectOneMenu id="newFormat"
								value="#{MbTcpIpDevices.newDevice.format}"
								label="#{lblCmn.format}"
								onblur="hideErrorField(this)">
							<f:selectItems value="#{MbTcpIpDevices.formats}" />
						</h:selectOneMenu>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newFormatError" style="display:none;">
							<f:param name="fieldName" value="#{lblCmn.format}"/>
						</h:outputFormat>
					</h:panelGrid>
		
					<h:outputLabel for="newKeepAlive" value="#{lblCmn.keep_alive}: " title="#{lblCmn.keep_alive}" />
					<h:selectBooleanCheckbox id="newKeepAlive" value="#{MbTcpIpDevices.newDevice.keepAlive}"/>
		
					<h:outputLabel for="newMonitorConn" value="#{lblCmn.monitor_connection}: " title="#{lblCmn.monitor_connection}" />
					<h:selectBooleanCheckbox id="newMonitorConn" value="#{MbTcpIpDevices.newDevice.monitorConnection}"/>
					
					<h:outputLabel for="newMultipleConn" value="#{lblCmn.multiple_connection}: " title="#{lblCmn.multiple_connection}" />
					<h:selectBooleanCheckbox id="newMultipleConn" value="#{MbTcpIpDevices.newDevice.multipleConnection}"/>
				</h:panelGrid>
			</fieldset>
		</a4j:outputPanel>
	</h:panelGroup>

			<h:panelGroup layout="block" styleClass="bottom_search_result_block_buttons">
				<h:panelGroup layout="block" styleClass="bottom_search_result_left_buttons">
					<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
						<h:outputText />
						<bre:taggedCommandButton id="saveBtn" value="#{lblForm.save}" type="submit"
								action="#{devicesBean['save']}"
								onclick="if (!checkTcpDeviceFields()) return false; disableModalPanelBtns(this)"
								oncomplete="enableModalPanelBtns(this); if (#{usession.noErrorResponse}) #{rich:component('tcpModalPanel')}.hide()"
								reRender="#{rerenderList}"
								/>
						<bre:taggedCommandButton value="#{lblForm.cancel}"
								action="#{devicesBean['cancel']}" immediate="true"
								oncomplete="#{rich:component('tcpModalPanel')}.hide()"
								reRender="tcpEditForm">
							<f:actionListener type="ru.bpc.jsf.A4JFormReset" />
						</bre:taggedCommandButton>	
					</h:panelGrid>
				</h:panelGroup>
			</h:panelGroup>
		</h:form>					
	</rich:modalPanel>
				
    <ui:include src="/pages/utils/langConfirmPanel.jspx">
    	<ui:param name="backingBean" value="#{MbTcpIpDevices}"/>
    	<ui:param name="rerenderList" value="tcpEditForm:newDeviceName, tcpEditForm:newDesc"/>
    	<ui:param name="editElem" value="tcpEditForm:editLang"/>
    	<ui:param name="newValue" value="#{MbTcpIpDevices.newDevice.lang}"/>
    	<ui:param name="subviewId" value="tcpDevice"/>
    	<ui:param name="formName" value="tcpEditForm"/>
    </ui:include>

</ui:composition>
</html>
