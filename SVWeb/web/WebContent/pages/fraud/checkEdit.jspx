<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:a4j="http://richfaces.org/a4j"
      xmlns:rich="http://richfaces.org/rich"
	  xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
<ui:composition>
	<h:panelGroup rendered="#{usession.inRole['ADD_CHECK'] or usession.inRole['MODIFY_CHECK']}">
	
	<script type="text/javascript">
//<!-- 
		function checkFields() {
			var checked = true;
			
			if (document.getElementById("checkModalForm:newAlertType").value == "") {
				document.getElementById("checkModalForm:newAlertTypeError").style.display = "inline";
				checked = false;
			}
			if (document.getElementById("checkModalForm:newCheckType").value == "") {
				document.getElementById("checkModalForm:newCheckTypeError").style.display = "inline";
				checked = false;
			}
			if (document.getElementById("checkModalForm:newRiskScore").value == "" 
					&& !document.getElementById("checkModalForm:newRiskScore").disabled) {
				document.getElementById("checkModalForm:newRiskScoreError").style.display = "inline";
				checked = false;
			}
			if (document.getElementById("checkModalForm:newMatrixId").value == ""
					&& !document.getElementById("checkModalForm:newMatrixId").disabled) {
				document.getElementById("checkModalForm:newMatrixIdError").style.display = "inline";
				checked = false;
			}
			if (document.getElementById("checkModalForm:newLabel").value.length <= 0) {
				document.getElementById("checkModalForm:newLabelError").style.display = "inline";
				checked = false;
			}
			if (document.getElementById("checkModalForm:condition").value.length == 0
					&& !document.getElementById("checkModalForm:condition").disabled) {
				document.getElementById("checkModalForm:conditionError").style.display = "inline";
				checked = false;
			}
			/*
			if (document.getElementById("checkModalForm:editDebit").checked) {

			}

			if (document.getElementById("checkModalForm:editCredit").checked) {

			}*/
			return checked;
		}

		function checkParamFields() {
			var checked = true;
			
			var elem = document.getElementById("checkModalForm:histDepth");
			if (elem != null && (elem.value == null || elem.value == "")) {
				elem.style.backgroundColor = "#FF9999";
				checked = false;
			}
			elem = document.getElementById("checkModalForm:paramLovValue");
			if (elem != null && (elem.value == null || elem.value == "")) {
				elem.style.backgroundColor = "#FF9999";
				checked = false;
			}
			elem = document.getElementById("checkModalForm:paramValue");
			if (elem != null && (elem.value == null || elem.value == "")) {
				elem.style.backgroundColor = "#FF9999";
				checked = false;
			}
			elem = document.getElementById("checkModalForm:matrixValue");
			if (elem != null && (elem.value == null || elem.value == "")) {
				elem.style.backgroundColor = "#FF9999";
				checked = false;
			}

			return checked;
		}
		
		function clearField(field){
			if (document.getElementById(field)!=null){
				document.getElementById(field).value = null;
			}
		}

		function resetField(field) {
			field.style.backgroundColor = "white";
		}
	//-->
	</script>

	<rich:modalPanel id="checkModalPanel" autosized="true" minWidth="350" minHeight="50">
 	    <f:facet name="header">
 	    	<h:panelGroup id="checkModalHeader">
 	    		<h:outputText value="#{lblFrp.edit_check}" rendered="#{MbFrpChecks.editMode}"/>
 	    		<h:outputText value="#{lblFrp.new_check}" rendered="#{MbFrpChecks.newMode}"/>
 	    	</h:panelGroup>
        </f:facet>
  	    <f:facet name="controls">
      	</f:facet>
      	<h:form id="checkModalForm">
      		<script type="text/javascript">
//<!--
				oldValue["checkModalForm"] = "#{MbFrpChecks.newCheck.lang}";
			//-->
			</script>
			<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
				<h:panelGrid columns="2" styleClass="cardholderdata" columnClasses="firstColModal, width250">
			
					<h:outputLabel value="* #{lblFrp.alert_type}: " title="#{lblFrp.alert_type}"/>
					<h:panelGrid cellpadding="0" cellspacing="0">
						<h:selectOneMenu id="newAlertType"
								value="#{MbFrpChecks.newCheck.alertType}"
								label="#{lblFrp.alert_type}"
								style="width:375px"
								onblur="hideErrorField(this)">
							<f:selectItem itemValue=""/>
						    <f:selectItems value="#{MbFrpChecks.alertTypes}"/>
						</h:selectOneMenu>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newAlertTypeError" style="display:none;">
							<f:param name="fieldName" value="#{lblFrp.alert_type}"/>
						</h:outputFormat>
					</h:panelGrid>

					<h:outputLabel value="* #{lblFrp.check_type}: " title="#{lblFrp.check_type}"/>
					<a4j:region>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newCheckType" 
									value="#{MbFrpChecks.newCheck.checkType}"
									label="#{lblFrp.check_type}" 
									style="width:375px"
									onblur="hideErrorField(this)">
								<a4j:support event="onchange" 
										reRender="newMatrixLabel, newMatrixId, newRiskMatrixLabel, paramType, newExressionLabel,
												newMatrixIdError, conditionError, constructorGrid, condition, newRiskScore,
												newRiskScoreLabel"
										onsubmit="hideErrorField(this)"/>
								<f:selectItem itemValue=""/>
							    <f:selectItems value="#{MbFrpChecks.checkTypes}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
									id="newCheckTypeError" style="display:none;">
								<f:param name="fieldName" value="#{lblFrp.check_type}"/>
							</h:outputFormat>
						</h:panelGrid>
					</a4j:region>
					
					<a4j:outputPanel id="newRiskScoreLabel">
						<h:outputLabel value="#{lblFrp.risk_score}: " title="#{lblFrp.risk_score}" rendered="#{MbFrpChecks.matrixNeeded}" />
						<h:outputLabel value="* #{lblFrp.risk_score}: " title="#{lblFrp.risk_score}" rendered="#{!MbFrpChecks.matrixNeeded}"/>
					</a4j:outputPanel>
					<h:panelGrid cellpadding="0" cellspacing="0">
						<h:inputText id="newRiskScore" 
								value="#{MbFrpChecks.newCheck.riskScore}"
								label="#{lblFrp.risk_score}" maxlength="4"
								disabled="#{MbFrpChecks.matrixNeeded}"
								style="width:370px"
								onblur="hideErrorField(this)"/>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newRiskScoreError" style="display:none;">
							<f:param name="fieldName" value="#{lblFrp.risk_score}"/>
						</h:outputFormat>
					</h:panelGrid>
	
					<a4j:outputPanel id="newRiskMatrixLabel">
						<h:outputLabel value="#{lblFrp.risk_matrix}: " title="#{lblFrp.risk_matrix}" rendered="#{!MbFrpChecks.matrixNeeded}"/>
						<h:outputLabel value="* #{lblFrp.risk_matrix}: " title="#{lblFrp.risk_matrix}" rendered="#{MbFrpChecks.matrixNeeded}"/>
					</a4j:outputPanel>
					<h:panelGrid cellpadding="0" cellspacing="0">
						<h:selectOneMenu id="newMatrixId" 
								value="#{MbFrpChecks.newCheck.riskMatrixId}"
								label="#{lblFrp.matrix}"
								disabled="#{!MbFrpChecks.matrixNeeded}"
								style="width:375px"
								onblur="hideErrorField(this)">
							<f:selectItem itemValue=""/>
						    <f:selectItems value="#{MbFrpChecks.riskMatrices}"/>
						</h:selectOneMenu>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newMatrixIdError" style="display:none;">
							<f:param name="fieldName" value="#{lblFrp.risk_matrix}"/>
						</h:outputFormat>
					</h:panelGrid>

					<h:outputLabel value="#{lblCommon.language}: " title="#{lblCommon.language}"/>
					<h:selectOneMenu id="lang" style="width:375px"
							value="#{MbFrpChecks.newCheck.lang}"
							rendered="#{MbFrpChecks.newMode}">
					    <f:selectItems value="#{MbFrpChecks.languages}"/>
					</h:selectOneMenu>
					<h:selectOneMenu id="editLang" value="#{MbFrpChecks.newCheck.lang}"
							rendered="#{MbFrpChecks.editMode}"
							onchange="document.getElementById('check:confirmPanelForm:newValue').value = this.value;
									#{rich:component('check:confirmPanel')}.show()">
						<f:selectItems value="#{MbFrpChecks.languages}"/>
					</h:selectOneMenu>
					
					<h:outputLabel value="* #{lblCommon.name}: " title="#{lblCommon.name}"/>
					<h:panelGrid cellpadding="0" cellspacing="0">
						<h:inputText id="newLabel" 
								value="#{MbFrpChecks.newCheck.label}"
								label="#{lblCommon.name}" maxlength="200"
								onblur="hideErrorField(this)"
								style="width:370px"
								/>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newLabelError" style="display:none;">
							<f:param name="fieldName" value="#{lblCommon.name}"/>
						</h:outputFormat>
					</h:panelGrid>

					<h:outputLabel value="#{lblCommon.description}: " title="#{lblCommon.description}"/>
					<h:inputTextarea id="newDescription" 
							value="#{MbFrpChecks.newCheck.description}" rows="3"
							style="width:370px"
							onkeypress="if (!limitText(event,this,2000)) return false;" 
            					label="#{lblCommon.description}">
			            	<f:validateLength maximum="2000" />
			        </h:inputTextarea>

					<a4j:outputPanel id="newExressionLabel">
						<h:outputLabel value="#{lblFrp.expression}: " title="#{lblFrp.expression}" rendered="#{!MbFrpChecks.expressionNeeded}"/>
						<h:outputLabel value="* #{lblFrp.expression}: " title="#{lblFrp.expression}" rendered="#{MbFrpChecks.expressionNeeded}"/>
					</a4j:outputPanel>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:selectOneMenu id="paramType" style="width:100px" 
								value="#{MbFrpChecks.parameterType}"
								disabled="#{!MbFrpChecks.expressionNeeded}"
								valueChangeListener="#{MbFrpChecks.changeParameterType}">
							<a4j:support event="onchange" reRender="constructorGrid" limitToList="true"/>
							<f:selectItem itemValue="#{MbFrpChecks.parameterTypeParam}" itemLabel="#{lblCommon.parameter}"/>
							<f:selectItem itemValue="#{MbFrpChecks.parameterTypeAlert}" itemLabel="#{lblFrp.alert}"/>
							<f:selectItem itemValue="#{MbFrpChecks.parameterTypeMatrix}" itemLabel="#{lblFrp.matrix}"/>
						</h:selectOneMenu>
						
						<h:panelGrid columns="6" cellspacing="0" cellpadding="0" id="constructorGrid">
							<a4j:region id="paramSelector" rendered="#{MbFrpChecks.paramParameter}">
								<h:selectOneMenu id="cond_param" style="width:100px;" 
										value="#{MbFrpChecks.selectedParamId}"
										valueChangeListener="#{MbFrpChecks.applyParamToFormatter}"
										disabled="#{!MbFrpChecks.expressionNeeded}"
										>
									<a4j:support event="onchange" reRender="btn_add_cond, values"/>
									<f:selectItem itemValue=""/>
									<f:selectItems value="#{MbFrpChecks.paramsMap}"/>
								</h:selectOneMenu>
							</a4j:region>
							
							<a4j:region id="almaSelector" rendered="#{MbFrpChecks.alertParameter or MbFrpChecks.matrixParameter}">						
								<h:selectOneMenu id="alma_param" style="width:100px;" 
										value="#{MbFrpChecks.selectedAlmaId}"
										valueChangeListener="#{MbFrpChecks.applyAlmaToFormatter}"
										disabled="#{!MbFrpChecks.expressionNeeded}"
										>
									<a4j:support event="onchange" reRender="btn_add_cond, values"/>
									<f:selectItem itemValue=""/>
									<f:selectItems value="#{MbFrpChecks.paramsMap}"/>
								</h:selectOneMenu>
							</a4j:region>

							<h:inputText id="histDepth" style="width:30px;" 
									value="#{MbFrpChecks.conditionFormatter.depth}" 
									rendered="#{MbFrpChecks.paramParameter or MbFrpChecks.alertParameter}"
									disabled="#{!MbFrpChecks.expressionNeeded}"
									onkeypress="if (!numbersOnly(this, event)) return false; resetField(this);"
									maxlength="2">
								<f:convertNumber integerOnly="true"/>
								<rich:ajaxValidator event="onblur" />
							</h:inputText>
								
							<h:selectOneMenu id="cond_param_condition" style="width:50px;" 
									value="#{MbFrpChecks.conditionFormatter.condition}"
									rendered="#{MbFrpChecks.paramParameter or MbFrpChecks.matrixParameter}"
									disabled="#{!MbFrpChecks.expressionNeeded}">
								<f:selectItem itemLabel="=" itemValue="="/>
								<f:selectItem itemLabel="!=" itemValue="!="/>
								<f:selectItem itemLabel="&gt;" itemValue="&gt;"/>
								<f:selectItem itemLabel="&gt;=" itemValue="&gt;="/>
								<f:selectItem itemLabel="&lt;" itemValue="&lt;"/>						
								<f:selectItem itemLabel="&lt;=" itemValue="&lt;="/>
								<f:selectItem itemLabel="IN" itemValue="IN"/>							
								<f:selectItem itemLabel="LIKE" itemValue="LIKE"/>							
							</h:selectOneMenu>
							
							<a4j:outputPanel id="values" rendered="#{MbFrpChecks.paramParameter}">
								<h:selectOneMenu id="paramLovValue" style="width:85px;"
										value="#{MbFrpChecks.conditionFormatter.value}"
										rendered="#{MbFrpChecks.selectedParam.lovId != null}"
										disabled="#{!MbFrpChecks.expressionNeeded}"
										onchange="resetField(this)">
									<f:selectItem itemValue=""/>
									<f:selectItems value="#{MbFrpChecks.paramLovValues}"/>
								</h:selectOneMenu>
								<h:inputText id="paramValue" style="width:80px;" 
										value="#{MbFrpChecks.conditionFormatter.value}" 
										validator="#{MbFrpChecks.validateParamValue}"
										rendered="#{MbFrpChecks.selectedParam.lovId == null}"
										disabled="#{!MbFrpChecks.expressionNeeded}"
										onkeypress="resetField(this)">
								</h:inputText>
							</a4j:outputPanel>							
		
							<h:inputText id="matrixValue" style="width:80px;" 
									value="#{MbFrpChecks.conditionFormatter.value}" 
									rendered="#{MbFrpChecks.matrixParameter}"
									disabled="#{!MbFrpChecks.expressionNeeded}"
									onkeypress="if (!numbersOnly(this, event)) return false; resetField(this)"
									maxlength="1">
								<f:convertNumber integerOnly="true"/>
								<rich:ajaxValidator event="onblur"/>
							</h:inputText>

							<h:selectOneMenu id="cond_param_op" style="width:50px;" 
									value="#{MbFrpChecks.conditionFormatter.operation}"
									disabled="#{!MbFrpChecks.expressionNeeded}">
								<f:selectItem itemLabel="AND" itemValue="AND"/>
								<f:selectItem itemLabel="OR" itemValue="OR"/>														
							</h:selectOneMenu>
							
							<bre:taggedCommandButton value="#{lblForm.add}" id="btn_add_cond" 
									disabled="#{(MbFrpChecks.selectedAlmaId == null and MbFrpChecks.selectedParam.id == null) or not MbFrpChecks.expressionNeeded}" 
									reRender="condition, values" 
									action="#{MbFrpChecks.addToCondition}"
									onclick="if (!checkParamFields()) return false;">
								<f:param name="skipValidation" value="true"></f:param>
							</bre:taggedCommandButton>
							
							<h:outputText rendered="#{MbFrpChecks.alertParameter or MbFrpChecks.matrixParameter}"/>
							<h:outputText rendered="#{MbFrpChecks.alertParameter}"/>
						</h:panelGrid>
						
						<h:inputTextarea id="condition" value="#{MbFrpChecks.newCheck.expression}" 
								rows="3" cols="10" style="width:370px;"
								onblur="hideErrorField(this)"
								disabled="#{!MbFrpChecks.expressionNeeded}"/>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="conditionError" style="display:none;">
							<f:param name="fieldName" value="#{lblFrp.expression}"/>
						</h:outputFormat>
						
						<rich:message for="paramValue" styleClass="errorMarker" ajaxRendered="true"/>
					</h:panelGrid>
				</h:panelGrid>
			</h:panelGroup>

      	    <h:panelGroup layout="block" styleClass="bottom_search_result_block_buttons">
				<h:panelGroup layout="block" styleClass="bottom_search_result_left_buttons">
	       	    	<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
	       	    		<h:outputText/>
                       	<bre:taggedCommandButton
                       			value="#{lblForm.save}" type="submit" action="#{MbFrpChecks.save}"
                       			onclick="if (!checkFields()) return false; clearField('checkModalForm:paramValue'); disableModalPanelBtns(this)"
                       			oncomplete="enableModalPanelBtns(this); if (#{usession.noErrorResponse}) #{rich:component('checkModalPanel')}.hide()"
                       			reRender="checksBtmForm"
                        		/>
                       	<bre:taggedCommandButton
                        		value="#{lblForm.cancel}" 
                        		action="#{MbFrpChecks.cancel}" immediate="true" limitToList="true"
                        		oncomplete="#{rich:component('checkModalPanel')}.hide()"
                        		reRender="checkModalForm" >
                        	<f:actionListener type="ru.bpc.jsf.A4JFormReset"/>
                        </bre:taggedCommandButton>
		    		</h:panelGrid>
		    	</h:panelGroup>
		    </h:panelGroup>
		</h:form>
	</rich:modalPanel>
	
	<ui:include src="/pages/utils/langConfirmPanel.jspx">
    	<ui:param name="backingBean" value="#{MbFrpChecks}"/>
    	<ui:param name="rerenderList" value="checkModalForm:newLabel, checkModalForm:newDescription"/>
    	<ui:param name="editElem" value="checkModalForm:editLang"/>
    	<ui:param name="newValue" value="#{MbFrpChecks.newCheck.lang}"/>
    	<ui:param name="subviewId" value="check"/>
    	<ui:param name="formName" value="checkModalForm" />
    </ui:include>
    
    </h:panelGroup>
</ui:composition>
</html>
