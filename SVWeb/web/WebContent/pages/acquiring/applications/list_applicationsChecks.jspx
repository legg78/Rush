<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	>
<ui:composition>
	<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/checks.js" />

	<script type="text/javascript">
    	//<![CDATA[
			//setOrLabel('#{lblMsg.or_label}');
		function checkApplicationFilters(issuing) {
			if (#{usession.inRole['VIEW_ALL_APPLICATIONS']}) return true;
			var form = 'appsSearchForm:';

			var applicationNumber = document.getElementById(form + 'applicationNumber');
			var applicationId = document.getElementById(form + 'applicationId');
			var dateFrom = document.getElementById(form + 'dateFromInputDate');
			var dateTo = document.getElementById(form + 'dateToInputDate');
			var status = document.getElementById(form + 'filter_status');
			var appFlow = document.getElementById(form + 'appFlow');
			var customerNumber = document.getElementById(form + 'customerNumber');
			var cardNumber = document.getElementById(form + 'cardNumber');
			var terminalNumber = document.getElementById(form + 'terminalNumber');
			var merchantNumber = document.getElementById(form + 'merchantNumber');
			var contractNumber = document.getElementById(form + 'contractNumber');
			var accountNumber = document.getElementById(form + 'accountNumber');

			var fields = [ applicationNumber, applicationId, customerNumber, conractNumber, accountNumber ];

			if (!issuing) {
				fields.push(terminalNumber);
				fields.push(merchantNumber);
				fields.push(dateFrom);
				fields.push(dateTo);
				fields.push(status);
				fields.push(appFlow);
			} else {
				fields.push(cardNumber);
			}

			for (i = 0; i < fields.length; i++) {
				if (fields[i] == null) {
					throw "An exception occured: some of the important fields is not found";
				}
			}

			cleanAll(fields);
			var errorMsg = '';

			if (!empty(applicationNumber)) {
				if (!contain(applicationNumber, '*')) {
					cleanAll(fields);
					return true;
				} else {
					paint(applicationNumber);
					errorMsg = appendMsg(errorMsg, "#{lblMsg.application_number_group}");
				}
			}

			if (!empty(applicationId)) {
				cleanAll(fields);
				return true;
			}

			if (!empty(customerNumber)) {
				if (customerNumber.value.length >= 5) {
					cleanAll(fields);
					return true;
				} else {
					paint(customerNumber);
					errorMsg = appendMsg(errorMsg, "#{lblMsg.customer_number_group}");
				}
			}
			
			if (!empty(contractNumber)) {
				if (contractNumber.value.length >= 5) {
					cleanAll(fields);
					return true;
				} else {
					paint(contractNumber);
					errorMsg = appendMsg(errorMsg, "#{lblMsg.contract_number_group}");
				}
			}
			if (!empty(accountNumber)) {
				if (accountNumber.value.length >= 5) {
					cleanAll(fields);
					return true;
				} else {
					paint(accountNumber);
					errorMsg = appendMsg(errorMsg, "#{lblMsg.account_number_group}");
				}
			}			
			
			if (!issuing) {
				var dateFromInvalid = empty(dateFrom);
				var dateToInvalid = empty(dateTo);
				var statusInvalid = empty(status);
				var appFlowInvalid = empty(appFlow);

				if (!dateFromInvalid && !dateToInvalid && !statusInvalid && !appFlowInvalid) {
					cleanAll(fields);
					return true;
				} else if (!dateFromInvalid || !dateToInvalid || !statusInvalid	|| !appFlowInvalid) {
					cleanAll(fields);
					if (dateFromInvalid) paint(dateFrom);
					if (dateToInvalid) paint(dateTo);
					if (statusInvalid) paint(status);
					if (appFlowInvalid) paint(appFlow);
					errorMsg = appendMsg(errorMsg, "#{lblMsg.date_status_flow_group}");
					expansSearchFilter();
				}

				if (!empty(terminalNumber)) {
					if (terminalNumber.value.length >= 5) {
						cleanAll(fields);
						return true;
					} else {
						paint(terminalNumber);
						errorMsg = appendMsg(errorMsg, "#{lblMsg.terminal_number_group}");
					}
				}
				if (!empty(merchantNumber)) {
					if (merchantNumber.value.length >= 5) {
						cleanAll(fields);
						return true;
					} else {
						paint(merchantNumber);
						errorMsg = appendMsg(errorMsg, "#{lblMsg.merchant_number_group}");
					}
				}
			} 			
			else {
				// if (issuing)
				if (!empty(cardNumber)) {
					if (cardNumber.value.length >= 5) {
						cleanAll(fields);
						return true;
					} else {
						paint(cardNumber);
						errorMsg = appendMsg(errorMsg, "#{lblMsg.card_number_group}");
					}
				}
			}			


			if (errorMsg == '') {
				paintAll(fields);
				errorMsg = appendMsg(errorMsg, "#{lblMsg.application_number_group}");
				errorMsg = appendMsg(errorMsg, "#{lblMsg.application_id_group}");
				errorMsg = appendMsg(errorMsg, "#{lblMsg.customer_number_group}");
				errorMsg = appendMsg(errorMsg, "#{lblMsg.contract_number_group}");
				errorMsg = appendMsg(errorMsg, "#{lblMsg.account_number_group}");
				if (!issuing) {
					errorMsg = appendMsg(errorMsg, "#{lblMsg.date_status_flow_group}");
					errorMsg = appendMsg(errorMsg, "#{lblMsg.terminal_number_group}");
					errorMsg = appendMsg(errorMsg, "#{lblMsg.merchant_number_group}");
					expansSearchFilter();
				} else {
					errorMsg = appendMsg(errorMsg, "#{lblMsg.card_number_group}");
				}
			}
			alert(errorMsg);
			return false;
		}

		function expansSearchFilter() {
			if (jQuery(".search_block .show-more-vert.show-more-vert-up").size() == 0)
				jQuery(".search_block .show-more-vert").click();
		}
		//]]>
	</script>
</ui:composition>
</html>