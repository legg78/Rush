<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:a4j="http://richfaces.org/a4j"
      xmlns:rich="http://richfaces.org/rich"
	  xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
<ui:composition>
	<script type="text/javascript">//<![CDATA[			
		function checkSelectionFields() {
			var checked = true;
			
			if (document.getElementById('checkSelectionEditForm:newOperType').value == "") {
				document.getElementById('checkSelectionEditForm:newOperTypeError').style.display = "inline";
				checked = false;
			}
			
			if (document.getElementById('checkSelectionEditForm:newMsgType').value == "") {
				document.getElementById('checkSelectionEditForm:newMsgTypeError').style.display = "inline";
				checked = false;
			}	
			if (document.getElementById('checkSelectionEditForm:newPartyType').value == "") {
				document.getElementById('checkSelectionEditForm:newPartyTypeError').style.display = "inline";
				checked = false;
			}	
			if (document.getElementById('checkSelectionEditForm:newInst').value == "") {
				document.getElementById('checkSelectionEditForm:newInstError').style.display = "inline";
				checked = false;
			}	
			if (document.getElementById('checkSelectionEditForm:newNetwork').value == "") {
				document.getElementById('checkSelectionEditForm:newNetworkError').style.display = "inline";
				checked = false;
			}	
			if (document.getElementById('checkSelectionEditForm:newCheckGroup').value == "") {
				document.getElementById('checkSelectionEditForm:newCheckGroupError').style.display = "inline";
				checked = false;
			}	
			if (document.getElementById('checkSelectionEditForm:newExecOrder').value == "") {
				document.getElementById('checkSelectionEditForm:newExecOrderError').style.display = "inline";
				checked = false;
			}	
			
			return checked;
		}
		//]]>
	</script>
	

	<rich:modalPanel id="chkSelectionModalPanel" autosized="true" minWidth="300" minHeight="100"
			rendered="#{usession.inRole['ADD_OPR_CHECK_SELECT'] or usession.inRole['MODIFY_OPR_CHECK_SELECT']}">
      	<f:facet name="header">
			<h:panelGroup id="chkSelectionModalHeader">
           	    <h:outputText value="#{lblOpr.edit_check_selection}" rendered="#{MbCheckSelections.editMode}"/>
           	    <h:outputText value="#{lblOpr.new_check_selection}" rendered="#{MbCheckSelections.newMode}"/>
			</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
	    </f:facet>
   	    <h:panelGroup id="chkSelectionModalDiv">
			<h:form id="checkSelectionEditForm">
				<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
			        <h:panelGrid columns="2" styleClass="cardholderdata" width="100%" columnClasses="firstColModal, width250">
			
						<h:outputLabel value="* #{lblOpr.oper_type}: " title="#{lblOpr.oper_type}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newOperType" disabled="#{lockOperType}"
									value="#{MbCheckSelections.newCheckSelection.operType}"
									label="#{lblOpr.check_type}"
									onblur="hideErrorField(this)">
								<f:selectItem itemValue=""/>
								<f:selectItem itemValue="%" itemLabel="#{lblCommon.all}"/>
							    <f:selectItems value="#{MbCheckSelections.operTypes}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newOperTypeError" style="display:none;">
								<f:param name="fieldName" value="#{lblOpr.oper_type}"/>
							</h:outputFormat>
						</h:panelGrid>
		
						<h:outputLabel value="* #{lblOpr.msg_type}: " title="#{lblOpr.msg_type}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newMsgType"
									value="#{MbCheckSelections.newCheckSelection.msgType}"
									label="#{lblOpr.msg_type}"
									onblur="hideErrorField(this)">
								<f:selectItem itemValue=""/>
								<f:selectItem itemValue="%" itemLabel="#{lblForm.all_any}"/>
							    <f:selectItems value="#{MbCheckSelections.msgTypes}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newMsgTypeError" style="display:none;">
								<f:param name="fieldName" value="#{lblOpr.msg_type}"/>
							</h:outputFormat>
						</h:panelGrid>
		
						<h:outputLabel value="* #{lblOpr.party_type}: " title="#{lblOpr.party_type}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newPartyType"
									value="#{MbCheckSelections.newCheckSelection.partyType}"
									label="#{lblOpr.party_type}"
									onblur="hideErrorField(this)">
								<f:selectItem itemValue=""/>
								<f:selectItem itemValue="%" itemLabel="#{lblForm.all_any}"/>
							    <f:selectItems value="#{MbCheckSelections.partyTypes}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newPartyTypeError" style="display:none;">
								<f:param name="fieldName" value="#{lblOpr.party_type}"/>
							</h:outputFormat>
						</h:panelGrid>
		
						<h:outputLabel value="* #{lblCommon.institution}: " title="#{lblCommon.institution}"/>
						<a4j:region>
							<h:panelGrid cellpadding="0" cellspacing="0">
								<h:selectOneMenu id="newInst"
										value="#{MbCheckSelections.newCheckSelection.instId}"
										label="#{lblCommon.institution}"
										onblur="hideErrorField(this)">
									<a4j:support event="onchange" reRender="newNetwork"/>
									<f:selectItem itemValue=""/>
									<f:selectItem itemValue="%" itemLabel="#{lblCommon.all}"/>
								    <f:selectItems value="#{MbCheckSelections.institutions}"/>
								</h:selectOneMenu>
								<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
									id="newInstError" style="display:none;">
									<f:param name="fieldName" value="#{lblCommon.institution}"/>
								</h:outputFormat>
							</h:panelGrid>
						</a4j:region>
		
						<h:outputLabel value="* #{lblOpr.network}: " title="#{lblOpr.network}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newNetwork"
									value="#{MbCheckSelections.newCheckSelection.networkId}"
									label="#{lblOpr.network}"
									onblur="hideErrorField(this)">
								<f:selectItem itemValue=""/>
								<f:selectItem itemValue="%" itemLabel="#{lblCommon.all}"/>
							    <f:selectItems value="#{MbCheckSelections.networksForEdit}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newNetworkError" style="display:none;">
								<f:param name="fieldName" value="#{lblOpr.network}"/>
							</h:outputFormat>
						</h:panelGrid>
		
						<h:outputLabel value="* #{lblOpr.check_group}: " title="#{lblOpr.check_group}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="newCheckGroup"
									value="#{MbCheckSelections.newCheckSelection.checkGroupId}"
									label="#{lblOpr.network}"
									onblur="hideErrorField(this)">
								<f:selectItem itemValue=""/>
							    <f:selectItems value="#{MbCheckSelections.checkGroups}"/>
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newCheckGroupError" style="display:none;">
								<f:param name="fieldName" value="#{lblOpr.check_group}"/>
							</h:outputFormat>
						</h:panelGrid>
		
						<h:outputLabel value="* #{lblCommon.exec_order}: " title="#{lblCommon.exec_order}"/>
						<h:panelGrid cellpadding="0" cellspacing="0">
							<h:inputText id="newExecOrder" 
									value="#{MbCheckSelections.newCheckSelection.execOrder}"
									label="#{lblCommon.exec_order}"
									onblur="hideErrorField(this)"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="newExecOrderError" style="display:none;">
								<f:param name="fieldName" value="#{lblCommon.exec_order}"/>
							</h:outputFormat>
						</h:panelGrid>
					</h:panelGrid>
				</h:panelGroup>
	      	    <h:panelGroup layout="block" styleClass="bottom_search_result_block_buttons">
					<h:panelGroup layout="block" styleClass="bottom_search_result_left_buttons">
		       	    	<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
		       	    		<h:outputText/>
                        	<bre:taggedCommandButton
                        			value="#{lblForm.save}" type="submit" action="#{MbCheckSelections.save}"
                        			onclick="if (!checkSelectionFields()) return false; disableModalPanelBtns(this)"
				                   	oncomplete="enableModalPanelBtns(this); if (#{usession.noErrorResponse}) #{rich:component('chkSelectionModalPanel')}.hide()"
                        			reRender="${rerenderList}"
	                        		/>
                        	<bre:taggedCommandButton
	                        		value="#{lblForm.cancel}" 
	                        		action="#{MbCheckSelections.cancel}" 
	                        		immediate="true"
	                        		oncomplete="#{rich:component('chkSelectionModalPanel')}.hide()">
	                        	<f:actionListener type="ru.bpc.jsf.A4JFormReset" />
	                		</bre:taggedCommandButton>
			    		</h:panelGrid>
			    	</h:panelGroup>
			    </h:panelGroup>
			</h:form>
		</h:panelGroup>
	</rich:modalPanel>
</ui:composition>
</html>
