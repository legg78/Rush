<?xml version="1.0" encoding="UTF-8"?>
<html	xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:a4j="http://richfaces.org/a4j"
		xmlns:rich="http://richfaces.org/rich"
		xmlns:bm="http://www.bpc.ru/jsf/misc"
		xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
<ui:composition>
	<script type="text/javascript">//<!--
		var poolLowValue = #{MbNameIndexPools.filter.lowValue};
		var poolHighValue = #{MbNameIndexPools.filter.highValue};

		function checkNameIndexPoolFields() {
			var checked = true;

			var poolValue = document.getElementById('poolEditForm:poolValue');
			var lowValue = document.getElementById('poolEditForm:lowValue');
			var highValue = document.getElementById('poolEditForm:highValue');
			
			if (poolValue != null) {
				if (poolValue.value == "") {
					document.getElementById('poolEditForm:poolValueError').style.display = "inline";
					checked = false;
				} else if (poolValue.value < poolLowValue || poolValue.value > poolHighValue) {
					document.getElementById('poolEditForm:poolValueError2').style.display = "inline";
					checked = false;
				}
			}
			if (lowValue != null) {
				if (lowValue.value == "") {
					document.getElementById('poolEditForm:lowValueError').style.display = "inline";
					checked = false;
				} else if (lowValue.value < poolLowValue || lowValue.value > poolHighValue) {
					document.getElementById('poolEditForm:lowValueError2').style.display = "inline";
					checked = false;
				}
			}
			if (highValue != null) {
				if (highValue.value == "") {
					document.getElementById('poolEditForm:highValueError').style.display = "inline";
					checked = false;
				} else if (highValue.value < poolLowValue || highValue.value > poolHighValue) {
					document.getElementById('poolEditForm:highValueError2').style.display = "inline";
					checked = false;
				} else if (highValue.value < lowValue.value) {
					document.getElementById('poolEditForm:highValueError3').style.display = "inline";
					checked = false;
				}
			}

			return checked;
		}

		function hidePoolErrorFields(elem) {
			document.getElementById(elem.id + "Error").style.display = "none";
			document.getElementById(elem.id + "Error2").style.display = "none";
			if (document.getElementById(elem.id + "Error3") != null) {
				document.getElementById(elem.id + "Error3").style.display = "none";
			}
			return true;
		}
	//-->
	</script>
	
	<rich:modalPanel id="poolModalPanel" autosized="true" minWidth="350" minHeight="50"
			rendered="#{usession.inRole['SYNC_RULE_NAME_POOL'] or usession.inRole['REMOVE_RULE_NAME_POOL']}">
	    <f:facet name="header">
	    	<h:panelGroup id="poolModalHeader">
			    <h:outputText value="#{lblCommon.new_value}" rendered="#{MbNameIndexPools.newMode and not MbNameIndexPools.addPool}"/>
			    <h:outputText value="#{lblCommon.new_values}" rendered="#{MbNameIndexPools.newMode and MbNameIndexPools.addPool}"/>
			    <h:outputText value="#{lblForm.delete_values}" rendered="#{!MbNameIndexPools.newMode and MbNameIndexPools.deletePool}"/>
	    	</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
		</f:facet>
	    <a4j:outputPanel id="poolModalDiv">
	    	<h:form id="poolEditForm">
				<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
					<h:panelGrid columns="2" styleClass="cardholderdata" width="100%" columnClasses="firstColModal, width250">        
						
						<h:outputLabel value="* #{lblCommon.value}: " title="#{lblCommon.value}"
								rendered="#{MbNameIndexPools.newMode and not MbNameIndexPools.addPool}"/>
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0"
								rendered="#{MbNameIndexPools.newMode and not MbNameIndexPools.addPool}">
							<h:inputText id="poolValue" value="#{MbNameIndexPools.newNameIndexPool.value}" 
									title="#{MbNameIndexPools.newNameIndexPool.value}"
									maxlength="16" onkeypress="if (!numbersOnly(this, event)) return false;"
									onblur="hidePoolErrorFields(this)">
							</h:inputText>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
									id="poolValueError" style="display:none;">
								<f:param name="fieldName" value="#{lblCommon.value}"/>
							</h:outputFormat>
							<h:outputFormat value="#{lblMsg.value_mustbe_in_range}" styleClass="errorMarker"
									id="poolValueError2" style="display:none;">
								<f:param name="lowValue" value="#{MbNameIndexPools.filter.lowValue}"/>
								<f:param name="highValue" value="#{MbNameIndexPools.filter.highValue}"/>
							</h:outputFormat>
						</h:panelGrid>
						
						<h:outputLabel value="* #{lblRul.low_value}: " title="#{lblRul.low_value}"
								rendered="#{(MbNameIndexPools.newMode and MbNameIndexPools.addPool) 
										or (not MbNameIndexPools.newMode and MbNameIndexPools.deletePool)}"/>
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0"
								rendered="#{(MbNameIndexPools.newMode and MbNameIndexPools.addPool) 
										or (not MbNameIndexPools.newMode and MbNameIndexPools.deletePool)}">
							<h:inputText id="lowValue" value="#{MbNameIndexPools.newNameIndexPool.lowValue}" 
									title="#{MbNameIndexPools.newNameIndexPool.lowValue}"
									maxlength="16" onkeypress="if (!numbersOnly(this, event)) return false;"
									onblur="hidePoolErrorFields(this)">
							</h:inputText>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
									id="lowValueError" style="display:none;">
								<f:param name="fieldName" value="#{lblRul.low_value}"/>
							</h:outputFormat>
							<h:outputFormat value="#{lblMsg.value_mustbe_in_range}" styleClass="errorMarker"
									id="lowValueError2" style="display:none;">
								<f:param name="lowValue" value="#{MbNameIndexPools.filter.lowValue}"/>
								<f:param name="highValue" value="#{MbNameIndexPools.filter.highValue}"/>
							</h:outputFormat>
						</h:panelGrid>
						
						<h:outputLabel value="* #{lblRul.high_value}: " title="#{lblRul.high_value}"
								rendered="#{(MbNameIndexPools.newMode and MbNameIndexPools.addPool) 
										or (not MbNameIndexPools.newMode and MbNameIndexPools.deletePool)}"/>
						<h:panelGrid columns="1" cellspacing="0" cellpadding="0"
								rendered="#{(MbNameIndexPools.newMode and MbNameIndexPools.addPool) 
										or (not MbNameIndexPools.newMode and MbNameIndexPools.deletePool)}">
							<h:inputText id="highValue" value="#{MbNameIndexPools.newNameIndexPool.highValue}" 
									title="#{MbNameIndexPools.newNameIndexPool.highValue}"
									maxlength="16" onkeypress="if (!numbersOnly(this, event)) return false;"
									onblur="hidePoolErrorFields(this)">
							</h:inputText>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
									id="highValueError" style="display:none;">
								<f:param name="fieldName" value="#{lblRul.high_value}"/>
							</h:outputFormat>
							<h:outputFormat value="#{lblMsg.value_mustbe_in_range}" styleClass="errorMarker"
									id="highValueError2" style="display:none;">
								<f:param name="lowValue" value="#{MbNameIndexPools.filter.lowValue}"/>
								<f:param name="highValue" value="#{MbNameIndexPools.filter.highValue}"/>
							</h:outputFormat>
							<h:outputFormat value="#{lblMsg.one_cant_be_less_than_another}" styleClass="errorMarker"
									id="highValueError3" style="display:none;">
								<f:param name="highValue" value="#{lblRul.high_value}"/>
								<f:param name="lowValue" value="#{lblRul.low_value}"/>
							</h:outputFormat>
							
						</h:panelGrid>
					</h:panelGrid>		
				</h:panelGroup>   
	      	    <h:panelGroup layout="block" styleClass="bottom_search_result_block_buttons">
					<h:panelGroup layout="block" styleClass="bottom_search_result_left_buttons">
		       	    	<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
		       	    		<h:outputText/>
                        	<bre:taggedCommandButton
                        			value="#{lblForm.save}" type="submit" action="#{MbNameIndexPools.save}"
                        			onclick="if (!checkNameIndexPoolFields()) return false;"
                        			oncomplete="if (#{usession.noErrorResponse}) #{rich:component('poolModalPanel')}.hide()"
                        			rendered="#{MbNameIndexPools.newMode and usession.inRole['SYNC_RULE_NAME_POOL']}"
                        			reRender="${rerenderList}"
	                        		/>
                        	<bre:taggedCommandButton
                        			value="#{lblForm.delete}" type="submit" action="#{MbNameIndexPools.deletePoolRange}"
                        			onclick="if (!checkNameIndexPoolFields()) return false;"
                        			oncomplete="if (#{usession.noErrorResponse}) #{rich:component('poolModalPanel')}.hide()"
                        			rendered="#{!MbNameIndexPools.newMode and usession.inRole['REMOVE_RULE_NAME_POOL']}"
                        			reRender="${rerenderList}"
	                        		/>
                        	<bre:taggedCommandButton
	                        		value="#{lblForm.cancel}" action="#{MbNameIndexPools.cancel}" immediate="true"
	                        		oncomplete="#{rich:component('poolModalPanel')}.hide()"
	                        		reRender="poolModalDiv">
                        		<f:actionListener type="ru.bpc.jsf.A4JFormReset" />
	                        </bre:taggedCommandButton>			                        		
			    		</h:panelGrid>
			    	</h:panelGroup>
			    </h:panelGroup>
			</h:form>
		</a4j:outputPanel>
	</rich:modalPanel>
</ui:composition>
</html>