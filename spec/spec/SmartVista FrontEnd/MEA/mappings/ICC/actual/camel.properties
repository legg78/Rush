# Address of the activeMQ queue, for example tcp://localhost:61616
# Should be left blank if camel should work without ActiveMQ
active_mq_url=tcp://10.10.210.201:61616

# Encryption is used
crypto=false

# The path to the file with the routes
routes_file=/home/oracle/camel/routes.xml

# Path to directory with configuration files mapping
config_folder=/home/oracle/camel/config/

# Service address is invalidated
invalidation_service=http://localhost:7001/camel/services/invalidate

# Charset for front-end. Used to convert data sent to and received from front-end.
# Should be java charset name like UTF-8 or ISO-8859-1
svfe_encoding=UTF-8

# (for standalone camel only) The port on which will be run web services.
ws_port=9007

# (for standalone camel only) The port to stop the application
ds_port=5555

# Number of connections to the adapter.
pool_connection=10

# Address of the adapter
http_adapter_url=http://localhost:8000

# The message envelope is used.
useXmlWrapper=true

# configure jdbc connection
host=10.10.210.108
port=1521
sid=sv
user=svbo2_icc
password=svbo2_icc1

#directory for file upload
output_directory=/home/oracle/camel/output/

# Address SVIS service
svis_address=http://localhost:7001/sv/InfoWS

# Address SVIP service
svip_address=http://localhost:9008/camel/services/SVIP

# If true, posting file processor will use characters as offsets. Otherwise (default), byte offsets will be used
posting_char_addressing=false

# List of institution ids that belong to Visa
visa_inst_ids=9002,9008
# List of institution ids that belong to MasterCard
mc_inst_ids=9001,9009

# SVIP Virtual card creation (CardAcctRelAddRq) settings
#   Settings for the case when LimitCount is present in CardAcctRelAddRq message
vc_limit_type=LMTTC03
vc_cycle_type=8
vc_cycle_length=1

#(for standalone camel only) SSL/TLS configuration
identity_keystore_file=
identity_key_alias=
identity_key_password=
identity_keystore_password=
trust_keystore_file=

#(for standalone camel only) Do not change the values below
httpProtocol=#{'${crypto}'=='true' ? 'https' : 'http'}
tlsParams=#{'${crypto}'=='true' ? 'secure' : 'insecure'}