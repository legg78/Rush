<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="nbc">

    <!--
        Common sql configuration not included in SqlMapConfig
     -->
    <sql id="limitationOpen">
        SELECT *
        FROM (
    </sql>

    <sql id="limitationOpenCount">
        SELECT count(*)
        FROM (
    </sql>

    <sql id="limitationClose">
        ) q
        <isNotNull property="limitation" prepend=" WHERE ">$limitation$</isNotNull>
    </sql>

    <sql id="paginatedOpen">
        SELECT *
        FROM(
        SELECT a.*, rownum r
        FROM(
        <include refid="limitationOpen"/>
    </sql>

    <sql id="paginatedClose">
        <include refid="limitationClose"/>
        ) a
        WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
        )
        WHERE r >= (#range.start# + 1)
    </sql>

    <resultMap  id="mapping-nbc-fin-message"
                class="ru.bpc.sv2.ps.nbc.NbcFinMessage"  >

        <result property="id" column="id" />
        <result property="splitHash" column="split_hash" />
        <result property="status" column="status" />
        <result property="statusDesc" column="status_desc" />
        <result property="instId" column="inst_id" />
        <result property="instName" column="inst_name" />
        <result property="networkId" column="network_id" />
        <result property="networkName" column="network_name" />
        <result property="fileId" column="file_id" />
        <result property="incoming" column="is_incoming" />
        <result property="invalid" column="is_invalid" />
        <result property="originalId" column="original_id" />
        <result property="disputeId" column="dispute_id" />
        <result property="cardNumber" column="card_number" />
        <result property="mti" column="mti" />
        <result property="recordNumber" column="record_number" />
        <result property="msgFileType" column="msg_file_type" />
        <result property="participantType" column="participant_type" />
        <result property="recordType" column="record_type" />
        <result property="cardMask" column="card_mask" />
        <result property="cardHash" column="card_hash" />
        <result property="procCode" column="proc_code" />
        <result property="nbcRespCode" column="nbc_resp_code" />
        <result property="acqRespCode" column="acq_resp_code" />
        <result property="issRespCode" column="iss_resp_code" />
        <result property="bnbRespCode" column="bnb_resp_code" />
        <result property="disputeTransResult" column="dispute_trans_result" />
        <result property="transAmount" column="trans_amount" />
        <result property="sttlAmount" column="sttl_amount" />
        <result property="crdhBillAmount" column="crdh_bill_amount" />
        <result property="crdhBillFee" column="crdh_bill_fee" />
        <result property="settlRate" column="settl_rate" />
        <result property="crdhBillRate" column="crdh_bill_rate" />
        <result property="systemTraceNumber" column="system_trace_number" />
        <result property="localTransTime" column="local_trans_time" />
        <result property="localTransDate" column="local_trans_date" />
        <result property="settlementDate" column="settlement_date" />
        <result property="merchantType" column="merchant_type" />
        <result property="transFeeAmount" column="trans_fee_amount" />
        <result property="acqInstCode" column="acq_inst_code" />
        <result property="issInstCode" column="iss_inst_code" />
        <result property="bnbInstCode" column="bnb_inst_code" />
        <result property="rrn" column="rrn" />
        <result property="authNumber" column="auth_number" />
        <result property="respCode" column="resp_code" />
        <result property="terminalId" column="terminal_id" />
        <result property="transCurrency" column="trans_currency" />
        <result property="settlCurrency" column="settl_currency" />
        <result property="crdhBillCurrency" column="crdh_bill_currency" />
        <result property="fromAccountId" column="from_account_id" />
        <result property="toAccountId" column="to_account_id" />
        <result property="nbcFee" column="nbc_fee" />
        <result property="acqFee" column="acq_fee" />
        <result property="issFee" column="iss_fee" />
        <result property="bnbFee" column="bnb_fee" />
        <result property="lang" column="lang" />
        <result property="fileName" column="file_name" />
        <result property="fileDate" column="file_date" />
        <result property="sessionId" column="session_id" />
        <result property="sessionFileId" column="session_file_id" />

    </resultMap>

    <select id="get-nbc-fin-messages"
            parameterClass="qparams" resultMap="mapping-nbc-fin-message">
        <include refid="paginatedOpen" />
        SELECT
        fm.id
        ,fm.split_hash
        ,fm.status
        ,fm.status_desc
        ,fm.inst_id
        ,fm.inst_name
        ,fm.network_id
        ,fm.network_name
        ,fm.file_id
        ,fm.is_incoming
        ,fm.is_invalid
        ,fm.original_id
        ,fm.dispute_id
        ,fm.card_number
        ,fm.mti
        ,fm.record_number
        ,fm.msg_file_type
        ,fm.participant_type
        ,fm.record_type
        ,fm.card_mask
        ,fm.card_hash
        ,fm.proc_code
        ,fm.nbc_resp_code
        ,fm.acq_resp_code
        ,fm.iss_resp_code
        ,fm.bnb_resp_code
        ,fm.dispute_trans_result
        ,fm.trans_amount
        ,fm.sttl_amount
        ,fm.crdh_bill_amount
        ,fm.crdh_bill_fee
        ,fm.settl_rate
        ,fm.crdh_bill_rate
        ,fm.system_trace_number
        ,fm.local_trans_time
        ,fm.local_trans_date
        ,fm.settlement_date
        ,fm.merchant_type
        ,fm.trans_fee_amount
        ,fm.acq_inst_code
        ,fm.iss_inst_code
        ,fm.bnb_inst_code
        ,fm.rrn
        ,fm.auth_number
        ,fm.resp_code
        ,fm.terminal_id
        ,fm.trans_currency
        ,fm.settl_currency
        ,fm.crdh_bill_currency
        ,fm.from_account_id
        ,fm.to_account_id
        ,fm.nbc_fee
        ,fm.acq_fee
        ,fm.iss_fee
        ,fm.bnb_fee
        ,fm.lang
        ,sf.session_id
        ,sf.id session_file_id
        ,sf.file_name
        ,sf.file_date
        FROM
            nbc_ui_fin_vw  fm, prc_session_file sf, nbc_file f
        WHERE
            fm.file_id = f.id(+) and
            f.session_file_id = sf.id(+)
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="id">fm.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">fm.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">sf.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">upper(sf.file_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="fileId">fm.file_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">sf.file_date >= trunc(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">sf.file_date <![CDATA[<=]]> trunc(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="cardMask">reverse(fm.card_number) like reverse(#filters[].value#)</isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="id">fm.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="sessionId">sf.session_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="status">fm.status $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="incoming">fm.is_incoming $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="cardMask">fm.card_number $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="systemTraceNumber">fm.system_trace_number $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="transAmount">fm.trans_amount $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileName">sf.file_name $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileDate">sf.file_date $sorting[].direction$</isEqual>
            </isNotEqual>
        </iterate>
        <include refid="paginatedClose" />
    </select>

    <select id="get-nbc-fin-messages-count"
            parameterClass="qparams"
            resultClass="int">
        SELECT
            count(fm.id)
        FROM
            nbc_ui_fin_vw  fm, prc_session_file sf, nbc_file f
        WHERE
            fm.file_id = f.id(+) and
            f.session_file_id = sf.id(+)
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="id">fm.id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">fm.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">sf.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">upper(sf.file_name) like upper(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="fileId">fm.file_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">sf.file_date >= trunc(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">sf.file_date <![CDATA[<=]]> trunc(#filters[].value#)</isEqual>
            <isEqual property="filters[].element" compareValue="cardMask">reverse(fm.card_number) like reverse(#filters[].value#)</isEqual>
        </iterate>
    </select>

    <procedure id="modify-fin-message" parameterClass="ru.bpc.sv2.ps.nbc.NbcFinMessage">
        {call nbc_api_fin_message_pkg.change_dispute_result(i_id  => #id#
        , i_result => #disputeTransResult#)}
    </procedure>

    <resultMap  id="mapping-nbc-file" class="ru.bpc.sv2.ps.nbc.NbcFile">
        <result property="sessionId"        column="SESSION_ID" />
        <result property="fileName"         column="FILE_NAME" />
        <result property="fileDate"         column="FILE_DATE" />

        <result property="id"               column="ID"/>
        <result property="fileType"         column="FILE_TYPE" />
        <result property="incoming"         column="IS_INCOMING"/>
        <result property="instId"           column="INST_ID"/>
        <result property="networkId"        column="NETWORK_ID" />
        <result property="binNumber"        column="BIN_NUMBER" />
        <result property="sttlDate"         column="STTL_DATE" />
        <result property="procDate"         column="PROC_DATE" />
        <result property="fileNumber"       column="FILE_NUMBER" />
        <result property="participantType"  column="PARTICIPANT_TYPE" />
        <result property="sessionFileId"    column="SESSION_FILE_ID" />
        <result property="recordsTotal"     column="RECORDS_TOTAL" />
        <result property="md5"              column="MD5" />

        <result property="instName"         column="INST_NAME" />
    </resultMap>



    <select id="get-nbc-files"
            parameterClass="qparams"
            resultMap="mapping-nbc-file">
        <include refid="paginatedOpen"/>

        SELECT
        sf.SESSION_ID
        ,sf.FILE_NAME
        ,sf.FILE_DATE

        ,f.ID
        ,f.FILE_TYPE
        ,f.IS_INCOMING
        ,f.INST_ID
        ,f.NETWORK_ID
        ,f.BIN_NUMBER
        ,f.STTL_DATE
        ,f.PROC_DATE
        ,f.FILE_NUMBER
        ,f.PARTICIPANT_TYPE
        ,f.SESSION_FILE_ID
        ,f.RECORDS_TOTAL
        ,f.MD5

        ,i.NAME INST_NAME
        FROM NBC_FILE f, PRC_SESSION_FILE sf , OST_UI_INSTITUTION_SYS_VW i
        WHERE f.SESSION_FILE_ID = sf.ID(+)
        AND f.INST_ID = i.ID(+)
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="lang">
                i.lang(+) = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">sf.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">sf.file_name like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">sf.file_date >= TO_DATE(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">sf.file_date <![CDATA[<=]]> TO_DATE(#filters[].value#, 'DD.MM.YYYY')</isEqual>
        </iterate>
        <iterate prepend="ORDER BY" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="AUTO">
                <isEqual property="sorting[].property" compareValue="sessionId">sf.session_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileName">sf.file_name $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileDate">sf.file_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="id">f.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileType">f.file_type $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="incoming">f.is_incoming $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="instId">f.inst_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="networkId">f.network_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="binNumber">f.bin_number $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="sttlDate">f.sttl_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="procDate">f.proc_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileNumber">f.file_number $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="participantType">f.participant_type $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="sessionFileId">f.session_file_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="md5">f.md5 $sorting[].direction$</isEqual>
            </isNotEqual>
        </iterate>


        <include refid="paginatedClose"/>
    </select>

    <select id="get-nbc-files-count"
            parameterClass="qparams"
            resultClass="int">
        <include refid="limitationOpenCount"/>
        SELECT f.ID
        FROM NBC_FILE f, PRC_SESSION_FILE sf , OST_UI_INSTITUTION_SYS_VW i
        WHERE f.SESSION_FILE_ID = sf.ID(+)
        AND f.INST_ID = i.ID(+)
        <iterate prepend="AND" conjunction="AND" property="filters">
            <isEqual property="filters[].element" compareValue="lang">
                i.lang(+) = #filters[].value#
            </isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">sf.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">sf.file_name like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">sf.file_date >= TO_DATE(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">sf.file_date <![CDATA[<=]]> TO_DATE(#filters[].value#, 'DD.MM.YYYY')</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

</sqlMap>