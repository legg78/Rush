<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
                        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="amex">
    <sql id="limitationOpen">
        SELECT *
        FROM (
    </sql>

    <sql id="limitationOpenCount">
        SELECT count(*)
        FROM (
    </sql>

    <sql id="limitationClose">
        ) q
        <isNotNull property="limitation" prepend=" WHERE ">$limitation$</isNotNull>
    </sql>

    <sql id="paginatedOpen">
        SELECT *
        FROM(
        SELECT a.*, rownum r
        FROM(
        <include refid="limitationOpen"/>
    </sql>

    <sql id="paginatedClose">
        <include refid="limitationClose"/>
        ) a
        WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
        )
        WHERE r >= (#range.start# + 1)
    </sql>

    <select id="get-linked-fin-messages" parameterClass="qparams" resultClass="java.util.LinkedHashMap">
        select *
          from amx_ui_fin_vw
        <iterate prepend="where" conjunction="and" property="filters">
            <isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="lang">lang = #filters[].value#</isEqual>
        </iterate>
    </select>

    <resultMap id="map-get-fin-message" class="ru.bpc.sv2.ps.amex.AmexFinMessage">
        <result column="id"                         property="id"/>
        <result column="split_hash"                 property="splitHash"/>
        <result column="status"                     property="status"/>
        <result column="status_desc"                property="statusDesc"/>
        <result column="inst_id"                    property="instId"/>
        <result column="inst_name"                  property="instName"/>
        <result column="network_id"                 property="networkId"/>
        <result column="network_name"               property="networkName"/>
        <result column="file_id"                    property="fileId"/>
        <result column="is_invalid"                 property="isInvalid"               nullValue="false"/>
        <result column="is_incoming"                property="isIncoming"              nullValue="false"/>
        <result column="is_reversal"                property="isReversal"              nullValue="false"/>
        <result column="is_collection_only"         property="isCollectionOnly"        nullValue="false"/>
        <result column="is_rejected"                property="isRejected"              nullValue="false"/>
        <result column="reject_id"                  property="rejectId"/>
        <result column="dispute_id"                 property="disputeId"/>
        <result column="impact"                     property="impact"/>
        <result column="mtid"                       property="mtid"/>
        <result column="func_code"                  property="funcCode"/>
        <result column="pan_length"                 property="panLength"/>
        <result column="card_hash"                  property="cardHash"/>
        <result column="card_number"                property="cardNumber"/>
        <result column="card_mask"                  property="cardMask"/>
        <result column="proc_code"                  property="procCode"/>
        <result column="trans_amount"               property="transAmount"/>
        <result column="trans_date"                 property="transDate"/>
        <result column="card_expir_date"            property="cardExpirDate"/>
        <result column="capture_date"               property="captureDate"/>
        <result column="mcc"                        property="mcc"/>
        <result column="pdc_1"                      property="pdc1"/>
        <result column="pdc_2"                      property="pdc2"/>
        <result column="pdc_3"                      property="pdc3"/>
        <result column="pdc_4"                      property="pdc4"/>
        <result column="pdc_5"                      property="pdc5"/>
        <result column="pdc_6"                      property="pdc6"/>
        <result column="pdc_7"                      property="pdc7"/>
        <result column="pdc_8"                      property="pdc8"/>
        <result column="pdc_9"                      property="pdc9"/>
        <result column="pdc_10"                     property="pdc10"/>
        <result column="pdc_11"                     property="pdc11"/>
        <result column="pdc_12"                     property="pdc12"/>
        <result column="reason_code"                property="reasonCode"/>
        <result column="approval_code_length"       property="approvalCodeLength"/>
        <result column="iss_sttl_date"              property="issSttlDate"/>
        <result column="eci"                        property="eci"/>
        <result column="fp_trans_amount"            property="fpTransAmount"/>
        <result column="ain"                        property="ain"/>
        <result column="apn"                        property="apn"/>
        <result column="arn"                        property="arn"/>
        <result column="approval_code"              property="approvalCode"/>
        <result column="terminal_number"            property="terminalNumber"/>
        <result column="merchant_number"            property="merchantNumber"/>
        <result column="merchant_name"              property="merchantName"/>
        <result column="merchant_addr1"             property="merchantAddr1"/>
        <result column="merchant_addr2"             property="merchantAddr2"/>
        <result column="merchant_city"              property="merchantCity"/>
        <result column="merchant_postal_code"       property="merchantPostalCode"/>
        <result column="merchant_country"           property="merchantCountry"/>
        <result column="merchant_region"            property="merchantRegion"/>
        <result column="iss_gross_sttl_amount"      property="issGrossSttlAmount"/>
        <result column="iss_rate_amount"            property="issRateAmount"/>
        <result column="matching_key_type"          property="matchingKeyType"/>
        <result column="matching_key"               property="matchingKey"/>
        <result column="iss_net_sttl_amount"        property="issNetSttlAmount"/>
        <result column="iss_sttl_currency"          property="issSttlCurrency"/>
        <result column="iss_sttl_decimalization"    property="issSttlDecimalization"/>
        <result column="fp_trans_currency"          property="fpTransCurrency"/>
        <result column="trans_decimalization"       property="transDecimalization"/>
        <result column="fp_trans_decimalization"    property="fpTransDecimalization"/>
        <result column="fp_pres_amount"             property="fpPresAmount"/>
        <result column="fp_pres_conversion_rate"    property="fpPresConversionRate"/>
        <result column="fp_pres_currency"           property="fpPresCurrency"/>
        <result column="fp_pres_decimalization"     property="fpPresDecimalization"/>
        <result column="merchant_multinational"     property="merchantMultinational"/>
        <result column="trans_currency"             property="transCurrency"/>
        <result column="add_acc_eff_type1"          property="addAccEffType1"/>
        <result column="add_amount1"                property="addAmount1"/>
        <result column="add_amount_type1"           property="addAmountType1"/>
        <result column="add_acc_eff_type2"          property="addAccEffType2"/>
        <result column="add_amount2"                property="addAmount2"/>
        <result column="add_amount_type2"           property="addAmountType2"/>
        <result column="add_acc_eff_type3"          property="addAccEffType3"/>
        <result column="add_amount3"                property="addAmount3"/>
        <result column="add_amount_type3"           property="addAmountType3"/>
        <result column="add_acc_eff_type4"          property="addAccEffType4"/>
        <result column="add_amount4"                property="addAmount4"/>
        <result column="add_amount_type4"           property="addAmountType4"/>
        <result column="add_acc_eff_type5"          property="addAccEffType5"/>
        <result column="add_amount5"                property="addAmount5"/>
        <result column="add_amount_type5"           property="addAmountType5"/>
        <result column="alt_merchant_number_length" property="altMerchantNumberLength"/>
        <result column="alt_merchant_number"        property="altMerchantNumber"/>
        <result column="fp_trans_date"              property="fpTransDate"/>
        <result column="icc_pin_indicator"          property="iccPinIndicator"/>
        <result column="card_capability"            property="cardCapability"/>
        <result column="network_proc_date"          property="networkProcDate"/>
        <result column="program_indicator"          property="programIndicator"/>
        <result column="tax_reason_code"            property="taxReasonCode"/>
        <result column="fp_network_proc_date"       property="fpNetworkProcDate"/>
        <result column="format_code"                property="formatCode"/>
        <result column="iin"                        property="iin"/>
        <result column="media_code"                 property="mediaCode"/>
        <result column="message_seq_number"         property="messageSeqNumber"/>
        <result column="merchant_location_text"     property="merchantLocationText"/>
        <result column="itemized_doc_code"          property="itemizedDocCode"/>
        <result column="itemized_doc_ref_number"    property="itemizedDocRefNumber"/>
        <result column="transaction_id"             property="transactionId"/>
        <result column="ext_payment_data"           property="extPaymentData"/>
        <result column="message_number"             property="messageNumber"/>
        <result column="ipn"                        property="ipn"/>
        <result column="invoice_number"             property="invoiceNumber"/>
        <result column="reject_reason_code"         property="rejectReasonCode"/>
        <result column="chbck_reason_text"          property="chbckReasonText"/>
        <result column="chbck_reason_code"          property="chbckReasonCode"/>
        <result column="valid_bill_unit_code"       property="validBillUnitCode"/>
        <result column="sttl_date"                  property="sttlDate"/>
        <result column="forw_inst_code"             property="forwInstCode"/>
        <result column="fee_reason_text"            property="feeReasonText"/>
        <result column="fee_type_code"              property="feeTypeCode"/>
        <result column="receiving_inst_code"        property="receivingInstCode"/>
        <result column="send_inst_code"             property="sendInstCode"/>
        <result column="send_proc_code"             property="sendProcCode"/>
        <result column="receiving_proc_code"        property="receivingProcCode"/>
        <result column="merchant_discount_rate"     property="merchantDiscountRate"/>
        <result column="lang"                       property="lang"/>
        <result column="session_id"                 property="sessionId"/>
        <result column="file_name"                  property="fileName"/>
        <result column="file_date"                  property="fileDate"/>
    </resultMap>

    <select id="get-fin-messages" parameterClass="qparams" resultMap="map-get-fin-message">
        <include refid="paginatedOpen"/>
            select v.id
                 , v.split_hash
                 , v.status
                 , v.status_desc
                 , v.inst_id
                 , v.inst_name
                 , v.network_id
                 , v.network_name
                 , v.file_id
                 , v.is_invalid
                 , v.is_incoming
                 , v.is_reversal
                 , v.is_collection_only
                 , v.is_rejected
                 , v.reject_id
                 , v.dispute_id
                 , v.impact
                 , v.mtid
                 , v.func_code
                 , v.pan_length
                 , v.card_hash
                 , v.card_number
                 , v.card_mask
                 , v.proc_code
                 , v.trans_amount
                 , v.trans_date
                 , v.card_expir_date
                 , v.capture_date
                 , v.mcc
                 , v.pdc_1
                 , v.pdc_2
                 , v.pdc_3
                 , v.pdc_4
                 , v.pdc_5
                 , v.pdc_6
                 , v.pdc_7
                 , v.pdc_8
                 , v.pdc_9
                 , v.pdc_10
                 , v.pdc_11
                 , v.pdc_12
                 , v.reason_code
                 , v.approval_code_length
                 , v.iss_sttl_date
                 , v.eci
                 , v.fp_trans_amount
                 , v.ain
                 , v.apn
                 , v.arn
                 , v.approval_code
                 , v.terminal_number
                 , v.merchant_number
                 , v.merchant_name
                 , v.merchant_addr1
                 , v.merchant_addr2
                 , v.merchant_city
                 , v.merchant_postal_code
                 , v.merchant_country
                 , v.merchant_region
                 , v.iss_gross_sttl_amount
                 , v.iss_rate_amount
                 , v.matching_key_type
                 , v.matching_key
                 , v.iss_net_sttl_amount
                 , v.iss_sttl_currency
                 , v.iss_sttl_decimalization
                 , v.fp_trans_currency
                 , v.trans_decimalization
                 , v.fp_trans_decimalization
                 , v.fp_pres_amount
                 , v.fp_pres_conversion_rate
                 , v.fp_pres_currency
                 , v.fp_pres_decimalization
                 , v.merchant_multinational
                 , v.trans_currency
                 , v.add_acc_eff_type1
                 , v.add_amount1
                 , v.add_amount_type1
                 , v.add_acc_eff_type2
                 , v.add_amount2
                 , v.add_amount_type2
                 , v.add_acc_eff_type3
                 , v.add_amount3
                 , v.add_amount_type3
                 , v.add_acc_eff_type4
                 , v.add_amount4
                 , v.add_amount_type4
                 , v.add_acc_eff_type5
                 , v.add_amount5
                 , v.add_amount_type5
                 , v.alt_merchant_number_length
                 , v.alt_merchant_number
                 , v.fp_trans_date
                 , v.icc_pin_indicator
                 , v.card_capability
                 , v.network_proc_date
                 , v.program_indicator
                 , v.tax_reason_code
                 , v.fp_network_proc_date
                 , v.format_code
                 , v.iin
                 , v.media_code
                 , v.message_seq_number
                 , v.merchant_location_text
                 , v.itemized_doc_code
                 , v.itemized_doc_ref_number
                 , v.transaction_id
                 , v.ext_payment_data
                 , v.message_number
                 , v.ipn
                 , v.invoice_number
                 , v.reject_reason_code
                 , v.chbck_reason_text
                 , v.chbck_reason_code
                 , v.valid_bill_unit_code
                 , v.sttl_date
                 , v.forw_inst_code
                 , v.fee_reason_text
                 , v.fee_type_code
                 , v.receiving_inst_code
                 , v.send_inst_code
                 , v.send_proc_code
                 , v.receiving_proc_code
                 , v.merchant_discount_rate
                 , v.lang
                 , p.session_id
                 , p.file_name
                 , p.file_date
              from amx_ui_fin_vw v
                 , prc_session_file p
                 , amx_file f
             where v.file_id = f.id(+)
               and f.session_file_id = p.id(+)
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="id">v.id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="lang">v.lang = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="isRejected">v.is_rejected = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileId">v.file_id = #filters[].value#</isEqual>
            </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-fin-messages-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
            select *
              from amx_ui_fin_vw v
                 , prc_session_file p
                 , amx_file f
              where v.file_id = f.id(+)
                and f.session_file_id = p.id(+)
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="id">v.id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="lang">v.lang = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="isRejected">v.is_rejected = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileId">v.file_id = #filters[].value#</isEqual>
            </iterate>
        <include refid="limitationClose"/>
    </select>

    <resultMap id="map-get-fin-messages-addendum" class="ru.bpc.sv2.ps.amex.AmexFinMessageAddendum">
        <result column="id"                 property="id"/>
        <result column="fin_id"             property="finId"/>
        <result column="file_id"            property="fileId"/>
        <result column="is_incoming"        property="isIncoming"/>
        <result column="mtid"               property="mtid"/>
        <result column="addenda_type"       property="addendaType"/>
        <result column="format_code"        property="formatCode"/>
        <result column="message_seq_number" property="messageSeqNumber"/>
        <result column="transaction_id"     property="transactionId"/>
        <result column="message_number"     property="messageNumber"/>
        <result column="reject_reason_code" property="rejectReasonCode"/>
        <result column="icc_data"           property="iccData"/>
        <result column="icc_version_name"   property="iccVersionName"/>
        <result column="icc_version_number" property="iccVersionNumber"/>
        <result column="emv_9f26"           property="emv9f26"/>
        <result column="emv_9f10"           property="emv9f10"/>
        <result column="emv_9f37"           property="emv9f37"/>
        <result column="emv_9f36"           property="emv9f36"/>
        <result column="emv_95"             property="emv95"/>
        <result column="emv_9a"             property="emv9a"/>
        <result column="emv_9c"             property="emv9c"/>
        <result column="emv_9f02"           property="emv9f02"/>
        <result column="emv_5f2a"           property="emv5f2a"/>
        <result column="emv_9f1a"           property="emv9f1a"/>
        <result column="emv_82"             property="emv82"/>
        <result column="emv_9f03"           property="emv9f03"/>
        <result column="emv_5f34"           property="emv5f34"/>
        <result column="emv_9f27"           property="emv9f27"/>
    </resultMap>

    <select id="get-fin-messages-addendum" parameterClass="qparams" resultMap="map-get-fin-messages-addendum">
        <include refid="paginatedOpen"/>
            select a.id
                 , a.fin_id
                 , a.file_id
                 , a.is_incoming
                 , a.mtid
                 , a.addenda_type
                 , a.format_code
                 , a.message_seq_number
                 , a.transaction_id
                 , a.message_number
                 , a.reject_reason_code
                 , c.icc_data
                 , c.icc_version_name
                 , c.icc_version_number
                 , c.emv_9f26
                 , c.emv_9f10
                 , c.emv_9f37
                 , c.emv_9f36
                 , c.emv_95
                 , c.emv_9a
                 , c.emv_9c
                 , c.emv_9f02
                 , c.emv_5f2a
                 , c.emv_9f1a
                 , c.emv_82
                 , c.emv_9f03
                 , c.emv_5f34
                 , c.emv_9f27
              from amx_add a
                 , amx_add_chip c
             where c.id(+) = a.id
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="id">a.id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="finId">a.fin_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileId">a.file_id = #filters[].value#</isEqual>
            </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-fin-messages-addendum-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
            select *
              from amx_add
        <iterate prepend="where" conjunction="and" property="filters">
            <isEqual property="filters[].element" compareValue="finId">fin_id = #filters[].value#</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>

    <resultMap id="map-get-files" class="ru.bpc.sv2.ps.amex.AmexFile">
        <result column="id"                property="id"/>
        <result column="is_incoming"       property="isIncoming"/>
        <result column="is_rejected"       property="isRejected"/>
        <result column="network_id"        property="networkId"/>
        <result column="transmittal_date"  property="transmittalDate"/>
        <result column="inst_id"           property="instId"/>
        <result column="inst_name"         property="instName"/>
        <result column="forw_inst_code"    property="forwInstCode"/>
        <result column="receiv_inst_code"  property="receivInstCode"/>
        <result column="action_code"       property="actionCode"/>
        <result column="file_number"       property="fileNumber"/>
        <result column="reject_code"       property="rejectCode"/>
        <result column="msg_total"         property="msgTotal"/>
        <result column="credit_count"      property="creditCount"/>
        <result column="debit_count"       property="debitCount"/>
        <result column="credit_amount"     property="creditAmount"/>
        <result column="debit_amount"      property="debitAmount"/>
        <result column="total_amount"      property="totalAmount"/>
        <result column="receipt_file_id"   property="receiptFileId"/>
        <result column="reject_message_id" property="rejectMessageId"/>
        <result column="session_file_id"   property="sessionFileId"/>
        <result column="session_id"        property="sessionId"/>
        <result column="file_name"         property="fileName"/>
        <result column="file_date"         property="fileDate"/>
    </resultMap>

    <select id="get-files" parameterClass="qparams" resultMap="map-get-files">
        <include refid="paginatedOpen"/>
            select f.id
                 , f.is_incoming
                 , f.is_rejected
                 , f.network_id
                 , f.transmittal_date
                 , f.inst_id
                 , i.name inst_name
                 , f.forw_inst_code
                 , f.receiv_inst_code
                 , f.action_code
                 , f.file_number
                 , f.reject_code
                 , f.msg_total
                 , f.credit_count
                 , f.debit_count
                 , f.credit_amount
                 , f.debit_amount
                 , f.total_amount
                 , f.receipt_file_id
                 , f.reject_message_id
                 , f.session_file_id
                 , p.session_id
                 , p.file_name
                 , p.file_date
              from amx_file f
                 , prc_session_file p
                 , ost_ui_institution_sys_vw i
             where f.session_file_id = p.id(+)
               and f.inst_id = i.id(+)
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="lang">i.lang(+) = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name like #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            </iterate>
            <iterate prepend="order by" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="auto">
                <isEqual property="sorting[].property" compareValue="sessionId">p.session_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileName">p.file_name $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="fileDate">p.file_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="id">f.id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="instId">f.inst_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="networkId">f.network_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="incoming">f.is_incoming $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="sessionFileId">f.session_file_id $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="rejected">f.is_rejected $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="instName">inst_name $sorting[].direction$</isEqual>
            </isNotEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-files-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
            select f.id
              from amx_file f
                 , prc_session_file p
                 , ost_ui_institution_sys_vw i
             where f.session_file_id = p.id(+)
               and f.inst_id = i.id(+)
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="lang">i.lang(+) = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name like #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            </iterate>
        <include refid="limitationClose"/>
    </select>

    <resultMap id="map-get-rejects" class="ru.bpc.sv2.ps.amex.AmexReject">
        <result column="id"               property="id"/>
        <result column="inst_id"          property="instId"/>
        <result column="name inst_name"   property="nameInstName"/>
        <result column="incoming"         property="incoming"/>
        <result column="msg_number"       property="msgNumber"/>
        <result column="forw_inst_code"   property="forwInstCode"/>
        <result column="receiv_inst_code" property="receivInstCode"/>
        <result column="origin_file_id"   property="originFileId"/>
        <result column="origin_msg_id"    property="originMsgId"/>
        <result column="file_id"          property="fileId"/>
        <result column="file_name"        property="fileName"/>
        <result column="file_date"        property="fileDate"/>
    </resultMap>

    <select id="get-rejects" parameterClass="qparams" resultMap="map-get-rejects">
        <include refid="paginatedOpen" />
            select r.id
                 , r.inst_id
                 , i.name inst_name
                 , r.incoming
                 , r.msg_number
                 , r.forw_inst_code
                 , r.receiv_inst_code
                 , r.origin_file_id
                 , r.origin_msg_id
                 , r.file_id
                 , p.file_name
                 , p.file_date
              from amx_rejected_vw r
                 , net_ui_network_vw n
                 , ost_ui_institution_vw i
                 , prc_session_file p
                 , amx_file f
             where r.file_id         = f.id(+)
               and f.session_file_id = p.id(+)
               and r.network_id      = n.id
               and r.inst_id         = i.id
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="id">r.id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="lang">n.lang = #filters[].value# and i.lang = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="networkId">r.network_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="instId">r.inst_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileId">r.file_id = #filters[].value#</isEqual>
            </iterate>
            <iterate prepend="order by" conjunction=", " property="sorting">
                <isNotEqual property="sorting[].direction" compareValue="auto">
                    <isEqual property="sorting[].property" compareValue="id">r.id $sorting[].direction$</isEqual>
                    <isEqual property="sorting[].property" compareValue="networkId">r.network_id $sorting[].direction$</isEqual>
                    <isEqual property="sorting[].property" compareValue="instId">r.inst_id $sorting[].direction$</isEqual>
                    <isEqual property="sorting[].property" compareValue="fileId">r.file_id $sorting[].direction$</isEqual>
                </isNotEqual>
            </iterate>
        <include refid="paginatedClose" />
    </select>

    <select id="get-rejects-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
            select r.id
              from amx_rejected_vw r
                 , net_ui_network_vw n
                 , ost_ui_institution_vw i
                 , prc_session_file p
                 , amx_file f
             where r.file_id         = f.id(+)
               and f.session_file_id = p.id(+)
               and r.network_id      = n.id
               and r.inst_id         = i.id
            <iterate prepend="and" conjunction="and" property="filters">
                <isEqual property="filters[].element" compareValue="id">r.id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="lang">n.lang = #filters[].value# and i.lang = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileName">p.file_name = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
                <isEqual property="filters[].element" compareValue="networkId">r.network_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="instId">r.inst_id = #filters[].value#</isEqual>
                <isEqual property="filters[].element" compareValue="fileId">r.file_id = #filters[].value#</isEqual>
            </iterate>
        <include refid="limitationClose"/>
    </select>

    <resultMap id="map-get-atm-reconciliation" class="ru.bpc.sv2.ps.amex.AmexAtmReconciliation">
        <result column="id"                        property="id"/>
        <result column="status"                    property="status"/>
        <result column="status_desc"               property="statusDesc"/>
        <result column="is_invalid"                property="isInvalid"/>
        <result column="file_id"                   property="fileId"/>
        <result column="inst_id"                   property="instId"/>
        <result column="inst_name"                 property="instName"/>
        <result column="card_number"               property="cardNumber"/>
        <result column="card_mask"                 property="cardMask"/>
        <result column="record_type"               property="recordType"/>
        <result column="msg_seq_number"            property="msgSeqNumber"/>
        <result column="trans_date"                property="transDate"/>
        <result column="system_date"               property="systemDate"/>
        <result column="sttl_date"                 property="sttlDate"/>
        <result column="terminal_number"           property="terminalNumber"/>
        <result column="system_trace_audit_number" property="systemTraceAuditNumber"/>
        <result column="dispensed_currency"        property="dispensedCurrency"/>
        <result column="amount_requested"          property="amountRequested"/>
        <result column="amount_ind"                property="amountInd"/>
        <result column="sttl_rate"                 property="sttlRate"/>
        <result column="sttl_currency"             property="sttlCurrency"/>
        <result column="sttl_amount_requested"     property="sttlAmountRequested"/>
        <result column="sttl_amount_approved"      property="sttlAmountApproved"/>
        <result column="sttl_amount_dispensed"     property="sttlAmountDispensed"/>
        <result column="sttl_network_fee"          property="sttlNetworkFee"/>
        <result column="sttl_other_fee"            property="sttlOtherFee"/>
        <result column="terminal_country_code"     property="terminalCountryCode"/>
        <result column="merchant_country_code"     property="merchantCountryCode"/>
        <result column="card_billing_country_code" property="cardBillingCountryCode"/>
        <result column="terminal_location"         property="terminalLocation"/>
        <result column="auth_status"               property="authStatus"/>
        <result column="trans_indicator"           property="transIndicator"/>
        <result column="orig_action_code"          property="origActionCode"/>
        <result column="approval_code"             property="approvalCode"/>
        <result column="add_ref_number"            property="addRefNumber"/>
        <result column="trans_id"                  property="transId"/>
        <result column="lang"                      property="lang"/>
        <result column="session_id"                property="sessionId"/>
        <result column="file_name"                 property="fileName"/>
        <result column="file_date"                 property="fileDate"/>
    </resultMap>

    <select id="get-atm-reconciliations" parameterClass="qparams" resultMap="map-get-atm-reconciliation">
        <include refid="paginatedOpen"/>
        select r.id
             , r.status
             , r.status_desc
             , r.is_invalid
             , r.file_id
             , r.inst_id
             , r.inst_name
             , r.card_number
             , r.card_mask
             , r.record_type
             , r.msg_seq_number
             , r.trans_date
             , r.system_date
             , r.sttl_date
             , r.terminal_number
             , r.system_trace_audit_number
             , r.dispensed_currency
             , r.amount_requested
             , r.amount_ind
             , r.sttl_rate
             , r.sttl_currency
             , r.sttl_amount_requested
             , r.sttl_amount_approved
             , r.sttl_amount_dispensed
             , r.sttl_network_fee
             , r.sttl_other_fee
             , r.terminal_country_code
             , r.merchant_country_code
             , r.card_billing_country_code
             , r.terminal_location
             , r.auth_status
             , r.trans_indicator
             , r.orig_action_code
             , r.approval_code
             , r.add_ref_number
             , r.trans_id
             , r.lang
             , p.session_id
             , p.file_name
             , p.file_date
        from amx_ui_atm_rcn_vw r
           , prc_session_file p
           , amx_file f
        where r.file_id = f.id(+)
          and f.session_file_id = p.id(+)
        <iterate prepend="and" conjunction="and" property="filters">
            <isEqual property="filters[].element" compareValue="lang">r.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">p.file_name = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">p.file_date <![CDATA[<=]]> to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
        </iterate>
        <iterate prepend="order by" conjunction=", " property="sorting">
            <isNotEqual property="sorting[].direction" compareValue="auto">
                <isEqual property="sorting[].property" compareValue="cardMask">r.card_mask $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="transDate">r.trans_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="sttlDate">r.sttl_date $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="terminalNumber">r.terminal_number $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="amountRequested">r.amount_requested $sorting[].direction$</isEqual>
                <isEqual property="sorting[].property" compareValue="dispensedCurrency">r.dispensed_currency $sorting[].direction$</isEqual>
            </isNotEqual>
        </iterate>
        <include refid="paginatedClose"/>
    </select>

    <select id="get-atm-reconciliations-count" parameterClass="qparams" resultClass="int">
        <include refid="limitationOpenCount"/>
        select *
        from amx_ui_atm_rcn_vw r
           , prc_session_file p
           , amx_file f
        where r.file_id = f.id(+)
          and f.session_file_id = p.id(+)
        <iterate prepend="and" conjunction="and" property="filters">
            <isEqual property="filters[].element" compareValue="lang">r.lang = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="sessionId">p.session_id = #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="fileName">p.file_name like #filters[].value#</isEqual>
            <isEqual property="filters[].element" compareValue="dateFrom">p.file_date >= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
            <isEqual property="filters[].element" compareValue="dateTo">p.file_date &lt;= to_date(#filters[].value#, 'DD.MM.YYYY')</isEqual>
        </iterate>
        <include refid="limitationClose"/>
    </select>
</sqlMap>