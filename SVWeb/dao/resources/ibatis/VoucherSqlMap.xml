<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="vch">

    <!--
        Common sql configuration not included in SqlMapConfig 
     -->
    <sql id="paginatedOpen">
            SELECT *
            FROM(
                SELECT a.*, rownum r
                FROM(
    </sql>
    
    <sql id="paginatedClose">
                    ) a
                WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
            )
            WHERE r >= (#range.start# + 1)
    </sql>
    
	<resultMap  id="mapping-vouchers-batch"
	            class="ru.bpc.sv2.vch.VouchersBatch"  >
	    <result property="id" column="id" />
	    <result property="seqnum" column="seqnum" />
	    <result property="status" column="status" />
	    <result property="totalAmount" column="total_amount" javaType="java.lang.Double" jdbcType="NUMERIC"/>
	    <result property="currency" column="currency" />
	    <result property="totalCount" column="total_count" />
	    <result property="regDate" column="reg_date" />
	    <result property="procDate" column="proc_date" />
	    <result property="merchantId" column="merchant_id" />
	    <result property="terminalId" column="terminal_id" />
	    <result property="statusReason" column="status_reason" />
	    <result property="userId" column="user_id" />
	    <result property="instId" column="inst_id" />
	    <result property="cardNetworkId" column="card_network_id" />
	    <result property="userName" column="user_name" />
	    <result property="instName" column="inst_name" />
	    <result property="merchantName" column="merchant_name" />
	    <result property="terminalNumber" column="terminal_number" />
	    <result property="networkName" column="network_name" />
	</resultMap>    
    
	<select id="get-vouchers-batches"
			parameterClass="qparams" resultMap="mapping-vouchers-batch">
		<include refid="paginatedOpen" />
		SELECT
			bv.id
			,bv.seqnum
			,bv.status
			,bv.total_amount
			,bv.currency
			,bv.total_count
			,bv.reg_date
			,bv.proc_date
			,bv.merchant_id
			,bv.terminal_id
			,bv.status_reason
			,bv.user_id
			,bv.inst_id
			,bv.card_network_id
			,bv.user_name
			,bv.inst_name
			,bv.merchant_name
			,bv.terminal_number
			,bv.network_name
		FROM
			vch_ui_batch_vw bv
				
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">bv.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">bv.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="status">bv.status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="totalAmount">bv.total_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="currency">bv.currency = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="totalCount">bv.total_count = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="regDate">bv.reg_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="procDate">bv.proc_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="merchantId">bv.merchant_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="terminalId">bv.terminal_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="statusReason">bv.status_reason = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="userId">bv.user_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="instId">bv.inst_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="cardNetworkId">bv.card_network_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="userName">bv.user_name = #filters[].value#</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="id">bv.id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="seqnum">bv.seqnum $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="status">bv.status $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="totalAmount">bv.total_amount $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="currency">bv.currency $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="totalCount">bv.total_count $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="regDate">bv.reg_date $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="procDate">bv.proc_date $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="merchantId">bv.merchant_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="terminalId">bv.terminal_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="statusReason">bv.status_reason $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="userId">bv.user_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="instId">bv.inst_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="cardNetworkId">bv.card_network_id $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="userName">bv.user_name $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="instName">bv.inst_name $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="merchantName">bv.merchant_name $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="terminalNumber">bv.terminal_number $sorting[].direction$</isEqual>
			</isNotEqual>
		</iterate>				
		<include refid="paginatedClose" />
	</select>
	
	<select id="get-vouchers-batches-count"
			parameterClass="qparams"
			resultClass="int">
		SELECT
			count(bv.id)
		FROM
			vch_ui_batch_vw bv
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">bv.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">bv.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="status">bv.status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="totalAmount">bv.total_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="currency">bv.currency = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="totalCount">bv.total_count = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="regDate">bv.reg_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="procDate">bv.proc_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="merchantId">bv.merchant_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="terminalId">bv.terminal_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="statusReason">bv.status_reason = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="userId">bv.user_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="instId">bv.inst_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="cardNetworkId">bv.card_network_id = #filters[].value#</isEqual>
		</iterate>			
	</select>	

	<procedure id="add-batch"
			parameterClass="ru.bpc.sv2.vch.VouchersBatch">
		{call vch_ui_batch_pkg.add_batch(
			  o_id				=> #id,mode=OUT,jdbcType=NUMERIC#
			, o_seqnum			=> #seqnum,mode=OUT,jdbcType=NUMERIC#
			, i_status			=> #status#
			, i_total_amount	=> #totalAmount#
			, i_currency		=> #currency#
			, i_total_count		=> #totalCount#
			, i_merchant_id		=> #merchantId#
			, i_terminal_id		=> #terminalId#
			, i_inst_id			=> #instId#
			, i_card_network_id	=> #cardNetworkId#
		)}
	</procedure>
	
	<procedure id="modify-batch"
			parameterClass="ru.bpc.sv2.vch.VouchersBatch">
		{call vch_ui_batch_pkg.modify_batch(
			  i_id				=> #id#
			, io_seqnum			=> #seqnum,mode=INOUT,jdbcType=NUMERIC#
			, i_status			=> #status#
			, i_status_reason	=> #statusReason#
			, i_user_id			=> #userId#
		)}
	</procedure>
	
	<procedure id="remove-batch"
			parameterClass="ru.bpc.sv2.vch.VouchersBatch">
		{call vch_ui_batch_pkg.remove_batch(
			  i_id		=> #id#
			, i_seqnum	=> #seqnum#
		)}
	</procedure>
	
	<resultMap  id="mapping-voucher"
	            class="ru.bpc.sv2.vch.Voucher"  >
	    <result property="id" column="id" />
	    <result property="seqnum" column="seqnum" />
	    <result property="batchId" column="batch_id" />
	    <result property="cardId" column="card_id" />
	    <result property="expirDate" column="expir_date" />
	    <result property="operAmount" column="oper_amount" />
	    <result property="operId" column="oper_id" />
	    <result property="operType" column="oper_type" />
	    <result property="authCode" column="auth_code" />
	    <result property="operRequestAmount" column="oper_request_amount" />
	    <result property="operDate" column="oper_date" />
	</resultMap>	
	
	<select id="get-vouchers"
			parameterClass="qparams" resultMap="mapping-voucher">
			SELECT
				vv.id
				,vv.seqnum
				,vv.batch_id
				,vv.card_id
				,vv.expir_date
				,vv.oper_amount
				,vv.oper_id
				,vv.oper_type
				,vv.auth_code
				,vv.oper_request_amount
				,vv.oper_date
			FROM
				vch_ui_voucher_vw vv
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">vv.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">vv.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="batchId">vv.batch_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="cardId">vv.card_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="expirDate">vv.expir_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operAmount">vv.oper_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operId">vv.oper_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operType">vv.oper_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="authCode">vv.auth_code = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operRequestAmount">vv.oper_request_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operDate">vv.oper_date = #filters[].value#</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="id">vv.id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="seqnum">vv.seqnum $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="batchId">vv.batch_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="cardId">vv.card_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="expirDate">vv.expir_date $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="operAmount">vv.oper_amount $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="operId">vv.oper_id $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="operType">vv.oper_type $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="authCode">vv.auth_code $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="operRequestAmount">vv.oper_request_amount $sorting[].direction$</isEqual>		
				<isEqual property="sorting[].property" compareValue="operDate">vv.oper_date $sorting[].direction$</isEqual>		
			</isNotEqual>
		</iterate>				
	</select>
	
	<select id="get-vouchers-count"
			parameterClass="qparams"
			resultClass="int">
		SELECT
			count(vv.id)
		FROM
			vch_ui_voucher_vw vv
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="id">vv.id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="seqnum">vv.seqnum = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="batchId">vv.batch_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="cardId">vv.card_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="expirDate">vv.expir_date = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operAmount">vv.oper_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operId">vv.oper_id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operType">vv.oper_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="authCode">vv.auth_code = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operRequestAmount">vv.oper_request_amount = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="operDate">vv.oper_date = #filters[].value#</isEqual>
		</iterate>			
	</select>
	
	<procedure id="add-voucher"
			parameterClass="ru.bpc.sv2.vch.Voucher">
		{call vch_ui_voucher_pkg.add_voucher(
			  o_id				=> #id,mode=OUT,jdbcType=NUMERIC#
			, o_seqnum			=> #seqnum,mode=OUT,jdbcType=NUMERIC#
			, i_batch_id		=> #batchId#
			, i_expir_date		=> #expirDate#
			, i_oper_amount		=> #operAmount#
			, i_oper_type		=> #operType#
			, i_auth_code		=> #authCode#
			, i_oper_request_amount		=> #operRequestAmount#
			, i_oper_date		=> #operDate#
			, i_card_number		=> #cardNumber#
		)}
	</procedure>
	
	<procedure id="modify-voucher"
			parameterClass="ru.bpc.sv2.vch.Voucher">
		{call vch_ui_voucher_pkg.modify_voucher(
			  i_id				=> #id#
			, io_seqnum			=> #seqnum,mode=INOUT,jdbcType=NUMERIC#
			, i_oper_amount		=> #operAmount#
		)}
	</procedure>
	
	<procedure id="remove-voucher"
			parameterClass="ru.bpc.sv2.vch.Voucher">
		{call vch_ui_voucher_pkg.remove_voucher(
			  i_id			=> #id#
			, i_seqnum		=> #seqnum#
		)}
	</procedure>	
</sqlMap>