taskKey="com.javarush.games.racer.part06"\n\nИгра Racer (6/28)

Дорожное полотно, обочина и сплошная разделительная полоса — статические объекты: они не будут двигаться.
Добавим еще две прерывистые полосы, которые будут создавать эффект движения.
Для этого у нас появилось несколько новых классов.
Класс ShapeMatrix содержит матрицу элемента прерывистой полосы, а RoadMarking будет отвечать за ее отрисовку и движение.
Числа в матрице означают порядковый номер цвета в enum Color.

Добавь в RacerGame поле типа RoadMarking, инициализируй его в методе createGame() и отрисуй в методе drawScene().
Отрисовка прерывистой полосы должна происходить после отрисовки (поверх) статических объектов.


Требования:
1.	В классе RacerGame должно существовать приватное поле roadMarking типа RoadMarking.
2.	Поле roadMarking должно быть проинициализировано в методе createGame() новым объектом типа RoadMarking до вызова метода drawScene().
3.	В методе drawScene() у объекта roadMarking должен быть вызван метод draw(Game). В качестве параметра метода используй this.
4.	В методе drawScene() вызов метода roadMarking.draw(Game) должен быть после вызова метода drawField().


Игра Racer (5/28)

Для представления игровых объектов создай класс GameObject. У всех игровых объектов будут общие черты:
- координаты (int x, int y) — координаты верхнего левого угла объекта на игровом поле;
- матрица отображения игрового объекта (int[][] matrix). Значения матрицы — порядковые номера цветов в Color.
Чтобы получить цвет, нужно использовать Color.values()[matrix[i][j]], где:
i — координата y в матрице matrix,
j — координата x в матрице matrix.
- высота и ширина (int height, int width). Высота и ширина соответствуют размерам матрицы.
Также у объекта должен существовать метод, который его рисует.



Игра Racer (4/28)

В процессе игры появятся много объектов, которые будут двигаться по игровому полю и иногда его покидать.
В случае вызова метода setCellColor(int, int, Color) с координатами, лежащими за пределами игрового поля, будет выбрасываться исключение.
Чтобы этого не произошло, переопредели его таким образом, чтобы вызов родительского метода происходил только с координатами, лежащими на игровом поле.
Подсказка: для вызова родительского метода используй ключевое слово super.



Игра Racer (3/28)

Приступим к отрисовке трассы в методе drawField().
Для установки цвета определенной ячейке используется метод setCellColor(int, int, Color). В качестве аргументов передаются координаты x, y и цвет.
Раскраска всего игрового поля делается в цикле.
В результате должна получится примерно такая трасса:

P.S.: Цвета можешь выбрать на свое усмотрение.


Игра Racer (2/28)

Теперь подготовим игровое поле.
В этой части создадим переменные и методы, с помощью которых в будущем отрисуем дорогу и дорожную разметку.
По центру дороги будет расположена разделительная полоса.
Значение ее координаты по оси x равно половине ширины игрового поля и хранится в переменной CENTER_X.
По бокам будет расположена обочина. Ее ширина равна 14 и хранится в переменной ROADSIDE_WIDTH.

Создадим вспомогательные методы:
createGame() - для старта новой игры;
drawScene() - для отрисовки всех игровых объектов;
drawField() - для отрисовки фона игрового поля.

Игра Racer (1/28)

Предлагаем тебе написать увлекательную игру Racer. Начнем с правил.
1. Цель игры — достигнуть финиша, управляя гоночной машиной на оживленной трассе.
2. Количество очков зависит от длительности гонки: чем раньше игрок финиширует, тем больше очков
он получит.
3. Игра окончена, когда игрок сталкивается с другой машиной или препятствием.

Создадим главный класс игры RacerGame. Чтобы использовать функциональность игрового движка, унаследуем его от класса Game, который содержит в себе методы для реализации игры.
Для начала нам нужно игровое поле (64х64), на которое будут добавляться игровые объекты. Так как значения высоты и ширины поля будут часто использоваться при реализации логики игры, есть смысл создать константы  WIDTH и HEIGHT.
Перед запуском игры выполняется метод initialize(), задачей которого является установка начального состояния игры. Его нужно переопределить в классе RacerGame.
В методе initialize() необходимо:
- задать размер игрового поля, вызвав setScreenSize(WIDTH, HEIGHT);
- убрать отображение сетки, вызвав showGrid(false).
Чтобы успешно справиться с задачей Racer, рекомендуем прочесть статью про раздел "Игры". В ней ты найдешь информацию, которая будет полезна при написании игр.


