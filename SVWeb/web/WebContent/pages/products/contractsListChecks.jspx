<script type="text/javascript">
	//<![CDATA[
	var MONTH_NAMES=new Array('January','February','March','April','May','June','July','August','September','October','November','December','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
	var DAY_NAMES=new Array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sun','Mon','Tue','Wed','Thu','Fri','Sat');
	//setOrLabel(#{lblMsg.or_label});
	
	
	function checkFields() {
		var result = false;
		var formPrefix = 'contractsSearchForm:';
		var contractNumber = document.getElementById(formPrefix + 'numberFilter');				
		var customerNumberValue = document.getElementById(formPrefix + 'customerNumberHidden');
		var customerNumber = document.getElementById(formPrefix + 'customerInfo');
		var productId = document.getElementById(formPrefix + 'productId');
		var contractType = document.getElementById(formPrefix + 'contractType');
		var startDate = document.getElementById(formPrefix + 'startDateFromInputDate');
		var endDate = document.getElementById(formPrefix + 'endDateToInputDate');
		
		if (contractNumber == null || customerNumberValue == null ||
		productId == null || contractType == null){
			throw "An exception occured: some of the important fields is not found";
		}
		
		var errorMsg = '';
		clean(contractNumber);
		clean(customerNumber);
		clean(productId);
		clean(contractType);
		clean(startDate);
		clean(endDate);
		
		var validGroupPresented = false;
		if (contractNumber.value != ''){
			if (contractNumber.value.length >= 5){
				validGroupPresented = true;
			} else {
				paint(contractNumber);
				errorMsg = appendMsg(errorMsg, '#{lblMsg.contract_number_group}');
			}
		}
	
		if (customerNumber.value != ''){
			if (customerNumber.value.length >= 5){
				validGroupPresented = true;
			} else {
				paint(customerNumber);
				errorMsg = appendMsg(errorMsg, '#{lblMsg.customer_number_group}');
			}
		}
		
		if (productId.value != ''){
			if (startDate.value != ''){
				validGroupPresented = true;
			} else {
				paint(productId);
				paint(startDate);
				errorMsg = appendMsg(errorMsg, '#{lblMsg.product_group}');
			}
		}
		
		if(document.getElementById(formPrefix + 'startDateFromInputDate').value != '' &&
				document.getElementById(formPrefix + 'endDateToInputDate').value != ''){
			var startDateValue = parseDate(document.getElementById(formPrefix + 'startDateFromInputDate').value);
			var endDateValue = parseDate(document.getElementById(formPrefix + 'endDateToInputDate').value);
			if (!startDateValue || !endDateValue) {
                alert('#{lblMsg.check_date_format}');
            }
	
			if (endDateValue != ''){
				if (startDateValue > endDateValue){
					paint(document.getElementById(formPrefix + 'startDateFromInputDate'));
					paint(document.getElementById(formPrefix + 'endDateToInputDate'));
					errorMsg = appendMsg(errorMsg, '#{lblMsg.start_date_after_end_date}');
				}
			}
		}
		if (contractType.value != ''){
			if (startDate.value != ''){
				validGroupPresented = true;
			} else {
				paint(contractType);
				paint(startDate);
				errorMsg = appendMsg(errorMsg, '#{lblMsg.contract_group}');
			}
		}
		
		
		
		var fieldsEmpty = errorMsg == '' && !validGroupPresented;
		
		if (validGroupPresented){
			clean(contractNumber);
			clean(customerNumber);
			clean(productId);
			clean(contractType);
			clean(startDate);
			result = true;
		} else if (!fieldsEmpty){
			jQuery("#searchError\\:confirmPanelForm\\:warningMsg").text(errorMsg);
			#{rich:component('searchError:confirmPanel')}.show();
		} else {
			paint(contractNumber);
			paint(customerNumber);
			paint(productId);
			paint(contractType);
			errorMsg = '';
			errorMsg = appendMsg(errorMsg, '#{lblMsg.contract_number_group}');
			errorMsg = appendMsg(errorMsg, '#{lblMsg.customer_number_group}');
			errorMsg = appendMsg(errorMsg, '#{lblMsg.product_group}');
			errorMsg = appendMsg(errorMsg, '#{lblMsg.contract_group}');
			jQuery("#searchError\\:confirmPanelForm\\:warningMsg").text(errorMsg);
			#{rich:component('searchError:confirmPanel')}.show();
		}
		
		
		return result;
	}
	
	function paint(element){
		element.style.backgroundColor = '#FF9999';
	}
	function clean(element){
		element.style.backgroundColor = '#FFFFFF';
	}
	function appendMsg(srcMsg, addMsg){
		var result = srcMsg;
		if (result != ''){
			result = result + '\nor\n';
		}
		result = result + addMsg;
		return result;
	}
	function parseDate(val) {
		var preferEuro=!((arguments.length==2)?arguments[1]:false);
		
		generalFormats=new Array('y-M-d','MMM d, y','MMM d,y','y-MMM-d','d-MMM-y','MMM d', 'y.M.d');
		monthFirst=new Array('M/d/y','M-d-y','M.d.y','MMM-d','M/d','M-d');
		dateFirst =new Array('d/M/y','d-M-y','d.M.y','d-MMM','d/M','d-M');
		var checkList=new Array('generalFormats',preferEuro?'dateFirst':'monthFirst',preferEuro?'monthFirst':'dateFirst');
		var d=null;
		for (var i=0; i<checkList.length; i++) {
			var l=window[checkList[i]];
			for (var j=0; j<l.length; j++) {
				d=getDateFromFormat(val,l[j]);
				if (d!=0) { return new Date(d); }
				}
			}
		return null;
		}
	
	function getDateFromFormat(val,format) {
		val=val+"";
		format=format+"";
		var i_val=0;
		var i_format=0;
		var c="";
		var token="";
		var token2="";
		var x,y;
		var now=new Date();
		var year=now.getYear();
		var month=now.getMonth()+1;
		var date=1;
		var hh=now.getHours();
		var mm=now.getMinutes();
		var ss=now.getSeconds();
		var ampm="";
		
		while (i_format < format.length) {
			// Get next token from format string
			c=format.charAt(i_format);
			token="";
			while ((format.charAt(i_format)==c) && (i_format < format.length)) {
				token += format.charAt(i_format++);
				}
			// Extract contents of value based on format token
			if (token=="yyyy" || token=="yy" || token=="y") {
				if (token=="yyyy") { x=4;y=4; }
				if (token=="yy")   { x=2;y=2; }
				if (token=="y")    { x=2;y=4; }
				year=_getInt(val,i_val,x,y);
				if (year==null) { return 0; }
				i_val += year.length;
				if (year.length==2) {
					if (year > 70) { year=1900+(year-0); }
					else { year=2000+(year-0); }
					}
				}
			else if (token=="MMM"||token=="NNN"){
				month=0;
				for (var i=0; i<MONTH_NAMES.length; i++) {
					var month_name=MONTH_NAMES[i];
					if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
						if (token=="MMM"||(token=="NNN"&&i>11)) {
							month=i+1;
							if (month>12) { month -= 12; }
							i_val += month_name.length;
							break;
							}
						}
					}
				if ((month < 1)||(month>12)){return 0;}
				}
			else if (token=="EE"||token=="E"){
				for (var i=0; i<DAY_NAMES.length; i++) {
					var day_name=DAY_NAMES[i];
					if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
						i_val += day_name.length;
						break;
						}
					}
				}
			else if (token=="MM"||token=="M") {
				month=_getInt(val,i_val,token.length,2);
				if(month==null||(month<1)||(month>12)){return 0;}
				i_val+=month.length;}
			else if (token=="dd"||token=="d") {
				date=_getInt(val,i_val,token.length,2);
				if(date==null||(date<1)||(date>31)){return 0;}
				i_val+=date.length;}
			else if (token=="hh"||token=="h") {
				hh=_getInt(val,i_val,token.length,2);
				if(hh==null||(hh<1)||(hh>12)){return 0;}
				i_val+=hh.length;}
			else if (token=="HH"||token=="H") {
				hh=_getInt(val,i_val,token.length,2);
				if(hh==null||(hh<0)||(hh>23)){return 0;}
				i_val+=hh.length;}
			else if (token=="KK"||token=="K") {
				hh=_getInt(val,i_val,token.length,2);
				if(hh==null||(hh<0)||(hh>11)){return 0;}
				i_val+=hh.length;}
			else if (token=="kk"||token=="k") {
				hh=_getInt(val,i_val,token.length,2);
				if(hh==null||(hh<1)||(hh>24)){return 0;}
				i_val+=hh.length;hh--;}
			else if (token=="mm"||token=="m") {
				mm=_getInt(val,i_val,token.length,2);
				if(mm==null||(mm<0)||(mm>59)){return 0;}
				i_val+=mm.length;}
			else if (token=="ss"||token=="s") {
				ss=_getInt(val,i_val,token.length,2);
				if(ss==null||(ss<0)||(ss>59)){return 0;}
				i_val+=ss.length;}
			else if (token=="a") {
				if (val.substring(i_val,i_val+2).toLowerCase()=="am") {ampm="AM";}
				else if (val.substring(i_val,i_val+2).toLowerCase()=="pm") {ampm="PM";}
				else {return 0;}
				i_val+=2;}
			else {
				if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
				else {i_val+=token.length;}
				}
			}
		// If there are any trailing characters left in the value, it doesn't match
		if (i_val != val.length) { return 0; }
		// Is date valid for month?
		if (month==2) {
			// Check for leap year
			if ( ( (year%4==0)&&(year%100 != 0) ) || (year%400==0) ) { // leap year
				if (date > 29){ return 0; }
				}
			else { if (date > 28) { return 0; } }
			}
		if ((month==4)||(month==6)||(month==9)||(month==11)) {
			if (date > 30) { return 0; }
			}
		// Correct hours value
		if (hh<12 && ampm=="PM") { hh=hh-0+12; }
		else if (hh>11 && ampm=="AM") { hh-=12; }
		var newdate=new Date(year,month-1,date,hh,mm,ss);
		return newdate.getTime();
		}
	
	function _isInteger(val) {
		var digits="1234567890";
		for (var i=0; i < val.length; i++) {
			if (digits.indexOf(val.charAt(i))==-1) { return false; }
			}
		return true;
		}
	function _getInt(str,i,minlength,maxlength) {
		for (var x=maxlength; x>=minlength; x--) {
			var token=str.substring(i,i+x);
			if (token.length < minlength) { return null; }
			if (_isInteger(token)) { return token; }
			}
		return null;
		}
	//]]>
</script>