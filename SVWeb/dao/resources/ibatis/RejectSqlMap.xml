<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
		PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
		"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="reject">
	<sql id="limitationOpen">
		SELECT *
		FROM (
	</sql>

	<sql id="limitationOpenCount">
		SELECT count(*)
		FROM (
	</sql>

	<sql id="limitationClose">
		) q
		<isNotNull property="limitation" prepend=" WHERE ">$limitation$</isNotNull>
	</sql>
	<sql id="paginatedOpen">
		SELECT *
		FROM(
		SELECT a.*, rownum r
		FROM(
		<include refid="limitationOpen"/>
	</sql>

	<sql id="paginatedClose">
		<include refid="limitationClose"/>
		) a
		WHERE rownum <![CDATA[<]]>= (#range.end# + 1)
		)
		WHERE r >= (#range.start# + 1)
	</sql>
	<resultMap id="mapping_reject" class="ru.bpc.sv2.ps.RejectOperation">
		<result property="id" column="id"/>
		<result property="origId" column="original_id"/>
		<result property="type" column="reject_type"/>
		<result property="processDate" column="process_date"/>
		<result property="origNetwork" column="originator_network"/>
		<result property="dstNetwork" column="destination_network"/>
		<result property="scheme" column="scheme"/>
		<result property="code" column="reject_code"/>
		<result property="operType" column="operation_type"/>
		<result property="assignedUserId" column="assigned"/>
		<result property="pan" column="card_number"/>
		<result property="arn" column="arn"/>
		<result property="resolution" column="resolution_mode"/>
		<result property="resolutionDate" column="resolution_date"/>
		<result property="status" column="status"/>
	</resultMap>
	<select id="get_rejects" parameterClass="qparams" resultMap="mapping_reject">
		<include refid="paginatedOpen"/>
		SELECT * FROM $module$_reject_data_vw
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="type">reject_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="status">status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="resolution">resolution_mode = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="code">reject_code = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="processDate">trunc(process_date) =
				trunc(#filters[].value#)
			</isEqual>
			<isEqual property="filters[].element" compareValue="resolutionDate">trunc(resolution_date) =
				trunc(#filters[].value#)
			</isEqual>
			<isEqual property="filters[].element" compareValue="origNetwork">originator_network = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="dstNetwork">destination_network = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="operType">operation_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="pan">card_number LIKE #filters[].value#</isEqual>

			<isEqual property="filters[].element" compareValue="id">id = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="arn">arn = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="scheme">scheme = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="assigned">assigned = #filters[].value#</isEqual>
		</iterate>
		<iterate prepend="ORDER BY" conjunction=", " property="sorting">
			<isNotEqual property="sorting[].direction" compareValue="AUTO">
				<isEqual property="sorting[].property" compareValue="id">id $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="type">reject_type $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="processDate">process_date $sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="origNetwork">originator_network
					$sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="dstNetwork">destination_network
					$sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="code">reject_code $sorting[].direction$</isEqual>
				<isEqual property="sorting[].property" compareValue="operType">operation_type $sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="resolution">resolution_mode $sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="resolutionDate">resolution_date
					$sorting[].direction$
				</isEqual>
				<isEqual property="sorting[].property" compareValue="status">status $sorting[].direction$</isEqual>
			</isNotEqual>
		</iterate>
		<include refid="paginatedClose"/>
	</select>

	<select id="get_rejects_count" parameterClass="qparams" resultClass="long">
		SELECT COUNT(1) FROM $module$_reject_data_vw
		<iterate prepend="WHERE" conjunction="AND" property="filters">
			<isEqual property="filters[].element" compareValue="type">reject_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="status">status = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="resolution">resolution_mode = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="code">reject_code = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="processDate">trunc(process_date) =
				trunc(#filters[].value#)
			</isEqual>
			<isEqual property="filters[].element" compareValue="resolutionDate">trunc(resolution_date) =
				trunc(#filters[].value#)
			</isEqual>
			<isEqual property="filters[].element" compareValue="origNetwork">originator_network = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="dstNetwork">destination_network = #filters[].value#
			</isEqual>
			<isEqual property="filters[].element" compareValue="operType">operation_type = #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="pan">card_number LIKE #filters[].value#</isEqual>
			<isEqual property="filters[].element" compareValue="assigned">assigned = #filters[].value#</isEqual>
		</iterate>
	</select>

	<resultMap id="mapping_visa_reject_code" class="ru.bpc.sv2.ps.VisaRejectCode">
		<result property="id" column="id"/>
		<result property="code" column="reject_code"/>
		<result property="description" column="description"/>
		<result property="field" column="field"/>
	</resultMap>

	<resultMap id="mapping_mc_reject_code" class="ru.bpc.sv2.ps.McRejectCode">
		<result property="id" column="id"/>
		<result property="deNumber" column="de_number"/>
		<result property="severityCode" column="severity_code"/>
		<result property="messageCode" column="message_code"/>
		<result property="subfieldId" column="subfield_id"/>
		<result property="fromOrigMsg" column="is_from_orig_msg"/>
	</resultMap>

	<resultMap id="mapping_reject_code" class="ru.bpc.sv2.ps.VisaRejectCode">
		<result property="id" column="id"/>
		<result property="code" column="reject_code"/>
		<result property="description" column="description"/>
		<result property="field" column="field"/>
	</resultMap>

	<select id="get_visa_reject_codes" parameterClass="long" resultMap="mapping_visa_reject_code">
		SELECT id, reject_code, description, field FROM vis_reject_code WHERE reject_data_id=#value#
	</select>

	<select id="get_mc_reject_codes" parameterClass="long" resultMap="mapping_mc_reject_code">
		SELECT id, de_number, severity_code, message_code, subfield_id, is_from_orig_msg FROM mcw_reject_code WHERE reject_data_id=#value#
	</select>

	<resultMap id="mapping_field" class="ru.bpc.sv2.common.TableColumn">
		<result property="id" column="id"/>
		<result property="columnId" column="column_id"/>
		<result property="column" column="column_name"/>
		<result property="dataType" column="data_type"/>
		<result property="value" column="value"/>
	</resultMap>

	<resultMap id="mapping_part_field" class="ru.bpc.sv2.common.ParticipantTableColumn">
		<result property="id" column="id"/>
		<result property="columnId" column="column_id"/>
		<result property="column" column="column_name"/>
		<result property="dataType" column="data_type"/>
		<result property="value" column="value"/>
		<result property="partType" column="participant_type"/>
	</resultMap>

	<select id="get_fields" parameterClass="map" resultMap="mapping_field">
		SELECT id, column_id, column_name, data_type, value FROM $table$ WHERE id=#id#
	</select>

	<update id="update_field" parameterClass="ru.bpc.sv2.common.TableColumn">
		UPDATE $table$ SET value=#value# WHERE id=#id# AND column_id=#columnId#
	</update>

	<select id="get_participant_fields" parameterClass="long" resultMap="mapping_part_field">
		SELECT oper_id as id, column_id, column_name, data_type, value, participant_type FROM opr_participant_unpivot_vw WHERE oper_id=#id# ORDER BY participant_type
	</select>

	<resultMap id="mapping_user" class="ru.bpc.sv2.configuration.KeyValuePair">
		<result property="key" column="key"/>
		<result property="value" column="value"/>
	</resultMap>

	<select id="get_all_users" parameterClass="string" resultMap="mapping_user">
		SELECT DISTINCT u.user_id as key, u.user_name as value FROM acm_ui_user_vw u, acm_user_role ur WHERE lang = #value# AND ur.user_id = u.user_id
	</select>

	<update id="update_participant_field" parameterClass="ru.bpc.sv2.common.ParticipantTableColumn">
		UPDATE opr_participant_unpivot_vw SET value=#value# WHERE participant_type=#partType# AND oper_id=#id# AND column_id=#columnId#
	</update>

	<update id="update_gen_field" parameterClass="ru.bpc.sv2.common.TableColumn">
		UPDATE $table$ SET $column$=#value# WHERE id=#id#
	</update>

	<procedure id="exec_action" parameterClass="map">
		{call com_ui_reject_pkg.change_oper_status(i_action=>#action#, i_oper_id=>#oper_id#)}
	</procedure>
</sqlMap>