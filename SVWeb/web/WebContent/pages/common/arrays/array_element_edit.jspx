<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext"
	xmlns:bm="http://www.bpc.ru/jsf/misc"
	>
<ui:composition>
	<a4j:loadScript src="/js/calendarUtils.js"></a4j:loadScript>
	
	<rich:calendar buttonIcon="/images/calendar.gif" id="calendar" datePattern="#{usession.datePattern}"  timeZone="#{CommonUtils.timeZone}"
	onchanged="#{rich:component('calendar')}.customInput.value=event.rich.component.getSelectedDateString();" zindex="1000"
	inputClass="hidden" buttonClass="hidden"/>
	
	<script>
		#{rich:component('calendar')}.customExpand=customExpand;
	</script>
	 
	<script type="text/javascript">
	//<![CDATA[
	function checkFields() {
		var checked = true;
		
		var valueV = document.getElementById('element_modal_div:paramValueV');
		var valueN = document.getElementById('element_modal_div:paramValueN');
		var valueVLov = document.getElementById('element_modal_div:paramLovValueV');
		var valueNLov = document.getElementById('element_modal_div:paramLovValueN');
		var valueD = document.getElementById('element_modal_div:paramValueD');
		if (valueV != null && (valueV.value == null || valueV.value == "")) {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
			checked = false;
		}
		if (valueN != null && (valueN.value == null || valueN.value == "")) {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
			checked = false;
		}
		if (valueVLov != null && (valueVLov.value == null || valueVLov.value == "")) {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
			checked = false;
		}
		if (valueNLov != null && (valueNLov.value == null || valueNLov.value == "")) {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
			checked = false;
		}
		if (valueD != null && (valueD.value == null || valueD.value == "")) {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
			checked = false;
		}

		
		return checked;
	}

	function hideValueErrorField(elem) {
		if (elem.value == "") {
			document.getElementById('element_modal_div:elementValueError').style.display = "inline";
		}
		document.getElementById('element_modal_div:elementValueError').style.display = "none";
		return true;
	}
	
	var prevLovValue;
	function changeArrayElementName(elem) {
		var nameElement = document.getElementById("element_modal_div:newName");
		if (elem.options[elem.selectedIndex].text != "" 
				&& (nameElement.value == "" || nameElement.value == prevLovValue)) {
			parts = elem.options[elem.selectedIndex].text.split('-');
			if(parts.size()>0){
				prevLovValue = parts[1].trim();
			}else{
				prevLovValue = parts[0].trim();
			}
			nameElement.value = prevLovValue;
		}
	}
	//]]>
	</script>

	<rich:modalPanel id="element_modal_panel" autosized="true" minWidth="300" minHeight="50">
		<f:facet name="header">
			<h:panelGroup id="element_modal_header">
				<h:outputText value="#{lblCommon.new_array_element}"
					rendered="#{MbDefaultArrayElements.newMode}" />
				<h:outputText value="#{lblCommon.edit_array_element}"
					rendered="#{MbDefaultArrayElements.editMode}" />
			</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
		</f:facet>
		<h:form id="element_modal_div">
			<script type="text/javascript">//<!--
				oldValue["element_modal_div"] = "#{MbDefaultArrayElements.newElement.lang}";
			//-->
			</script>
			<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
				<h:panelGrid columns="2" styleClass="cardholderdata" width="100%"
					columnClasses="firstColModal,width250">
					<h:outputLabel value="#{lblCommon.array_id}: " title="#{lblCommon.array_id}" />
					<h:inputText value="#{MbDefaultArrayElements.newElement.arrayId}"
						readonly="true" styleClass="grayInput" />

					<h:outputLabel value="* #{lblCommon.element_value}: " />
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:panelGroup rendered="#{MbDefaultArrayElements.newElement.lovId == null}">
							<h:inputText  
									id="paramValueV"  maxlength="200"
									value="#{MbDefaultArrayElements.newElement.valueV}"
									label="#{lblCommon.element_value}"
									onblur="hideValueErrorField(this)"
									rendered="#{MbDefaultArrayElements.newElement.char}">
							</h:inputText>
							<h:inputText  
									id="paramValueN" 
									value="#{MbDefaultArrayElements.newElement.valueN}"
									label="#{lblCommon.element_value}"
									rendered="#{MbDefaultArrayElements.newElement.number}"
									maxlength="200" onkeypress="if (!numbersOnly(this, event)) return false;"
									onblur="hideValueErrorField(this)"
									converterMessage="#{lblCommon.element_value} #{lblMsg.must_be_number}">
								<bm:convertNumberNew minFractionDigits="0"/>								
							</h:inputText>
               				<h:panelGroup rendered="#{MbDefaultArrayElements.newElement.date}">
	                				<h:inputText id="paramValueD" style="max-width:175px"
	                						value="#{MbDefaultArrayElements.newElement.valueD}"
	                						label="#{lblCommon.element_value}"
											onclick="#{rich:component('calendar')}.customExpand(event, #{rich:element('paramValueD')}, #{rich:element('paramValueDBtn')});">
										<f:convertDateTime pattern="#{usession.datePattern}" timeZone="#{CommonUtils.timeZone}"/>
									</h:inputText>
									<h:graphicImage
											value="/images/calendar.gif"
											onclick="#{rich:component('calendar')}.customExpand(event, #{rich:element('paramValueD')}, #{rich:element('paramValueDBtn')});"
											id="paramValueDBtn" />	
	                		</h:panelGroup>
							<rich:message for="paramValueV" 
									styleClass="errorMarker"
									id="paramValueVError"
									rendered="#{MbDefaultArrayElements.newElement.char}"
							/>
							<rich:message for="paramValueN" 
									styleClass="errorMarker"
									id="paramValueNError"
									rendered="#{MbDefaultArrayElements.newElement.number}"
							/>
							<rich:message for="paramValueD" 
									styleClass="errorMarker"
									id="paramValueDError"
									rendered="#{MbDefaultArrayElements.newElement.date}"
							/>							
						</h:panelGroup>
						<h:panelGroup rendered="#{MbDefaultArrayElements.newElement.lovId != null}">
							<h:selectOneMenu label="#{lblCommon.element_value}" 
									id="paramLovValueN" 
									value="#{MbDefaultArrayElements.newElement.valueN}"
									rendered="#{MbDefaultArrayElements.newElement.number}"
									onchange="changeArrayElementName(this)"
									onblur="hideValueErrorField(this)">
								<f:selectItem itemValue=""/>
						    	<f:selectItems value="#{MbDefaultArrayElements.valuesFromLov}"/>
							</h:selectOneMenu>
							
							<h:selectOneMenu label="#{lblCommon.element_value}" 
									id="paramLovValueV"
									value="#{MbDefaultArrayElements.newElement.valueV}"
									rendered="#{MbDefaultArrayElements.newElement.char}"
									onchange="changeArrayElementName(this)"
									onblur="hideValueErrorField(this)">
								<f:selectItem itemValue=""/>
						    	<f:selectItems value="#{MbDefaultArrayElements.valuesFromLov}"/>
							</h:selectOneMenu>
							<rich:message for="paramLovValueV" 
									styleClass="errorMarker"												
							/>
							<rich:message for="paramLovValueN" 
									styleClass="errorMarker"
							/>
						</h:panelGroup>
						<h:outputFormat value="#{lblMsg.value_request}"
								styleClass="errorMarker" id="elementValueError"
								style="display:none;">
							<f:param name="fieldName" value="#{lblCommon.element_value}" />
						</h:outputFormat>
					</h:panelGrid>

					<h:outputLabel for="elementNumber" value="#{lblCommon.element_number}: " />
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:inputText id="elementNumber"
							value="#{MbDefaultArrayElements.newElement.elementNumber}"
							label="#{lblCommon.element_number}"
							maxlength="4" onblur="hideErrorField(this)"
							onkeypress="if (!numbersOnly(this, event)) return false;">								
						</h:inputText>
					</h:panelGrid>

					<h:outputLabel value="#{lblCommon.language}: " title="#{lblCommon.language}"/>
					<h:selectOneMenu id="editLang"
						value="#{MbDefaultArrayElements.newElement.lang}"
						
						onchange="if (#{MbDefaultArrayElements.newMode}) {return false;} document.getElementById('arrayElementEditView:confirmPanelForm:newValue').value = this.value;
								#{rich:component('arrayElementEditView:confirmPanel')}.show()">
						<f:selectItems value="#{MbDefaultArrayElements.languages}" />
					</h:selectOneMenu>

					<h:outputLabel for="newName" value="#{lblCommon.name}: " title="#{lblCommon.name}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
						<h:inputText id="newName"
							value="#{MbDefaultArrayElements.newElement.name}"
							label="#{lblCommon.name}" maxlength="200"
							onblur="hideErrorField(this)">
							<f:validateLength minimum="3" />
						</h:inputText>
					</h:panelGrid>

					<h:outputLabel for="newDesc" value="#{lblCommon.description}: " title="#{lblCommon.description}"
								   rendered="#{MbDefaultArrayElements.newElement.lovId == null}"/>
					<h:inputTextarea id="newDesc" rendered="#{MbDefaultArrayElements.newElement.lovId == null}"
						value="#{MbDefaultArrayElements.newElement.description}" rows="5"
						cols="150" 
						onkeypress="if (!limitText(event,this,2000)) return false;" 
            			label="#{lblCommon.description}">
			            	<f:validateLength maximum="2000" />
			        </h:inputTextarea>
				</h:panelGrid>
			</h:panelGroup>

			<h:panelGroup layout="block"
				styleClass="bottom_search_result_block_buttons">
				<h:panelGroup layout="block"
					styleClass="bottom_search_result_left_buttons">
					<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
						<h:outputText />
						<bre:taggedCommandButton value="#{lblForm.save}" type="submit"
							action="#{MbDefaultArrayElements.save}"
							onclick="if (!checkFields()) {return false;}"
							oncomplete="if (#{usession.noErrorResponse}) #{rich:component('element_modal_panel')}.hide()"
							reRender="${rerenderList}" />
						<bre:taggedCommandButton value="#{lblForm.cancel}"
							action="#{MbDefaultArrayElements.close}" immediate="true"
							oncomplete="#{rich:component('element_modal_panel')}.hide()" />
					</h:panelGrid>
				</h:panelGroup>
			</h:panelGroup>
		</h:form>
	</rich:modalPanel>

	<ui:include src="/pages/utils/langConfirmPanel.jspx">
		<ui:param name="backingBean" value="#{MbDefaultArrayElements}" />
		<ui:param name="rerenderList"
			value="element_modal_div:newName, element_modal_div:newDesc" />
		<ui:param name="editElem" value="element_modal_div:editLang" />
		<ui:param name="newValue" value="#{MbDefaultArrayElements.newElement.lang}" />
		<ui:param name="subviewId" value="arrayElementEditView" />
		<ui:param name="formName" value="element_modal_div" />
	</ui:include>

</ui:composition>
</html>