<?xml version="1.0" encoding="UTF-8"?>
<html	xmlns="http://www.w3.org/1999/xhtml"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:a4j="http://richfaces.org/a4j"
		xmlns:rich="http://richfaces.org/rich"
		xmlns:bm="http://www.bpc.ru/jsf/misc"
		xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext"
		xmlns:bpct="http://www.bpc.ru/jsf/tiles">
<ui:composition>
	<f:loadBundle var="lblPrc" basename="ru.bpc.sv2.ui.bundles.Process"/>
	
	<script type="text/javascript">
		//<!-- 
			function checkTemplateFields() {
				var checked = true;
				if (document.getElementById('templateEditForm:newLabel').value == "") {
					document.getElementById('templateEditForm:newLabelError').style.display = "inline";
					checked = false;
				}
				if (document.getElementById('templateEditForm:newPurpose') != null
						&& document.getElementById('templateEditForm:newPurpose').value == "") {
					document.getElementById('templateEditForm:newPurposeError').style.display = "inline";
					checked = false;
				}
				if (document.getElementById('templateEditForm:newStatus').value == "") {
					document.getElementById('templateEditForm:newStatusError').style.display = "inline";
					checked = false;
				}
				var entityType = document.getElementById('templateEditForm:newEntityType');
                if (entityType != null && entityType.value == null) {
                    document.getElementById('templateEditForm:newEntityTypeError').style.display = "inline";
                    checked = false;
                }
                var objectId = document.getElementById('templateEditForm:newObjectId');
                if (objectId != null && objectId.value == "") {
                    document.getElementById('templateEditForm:newObjectIdError').style.display = "inline";
                    checked = false;
                }
				var scheduleCheck = document.getElementById("templateEditForm:addSchedule");
				if (scheduleCheck != null && scheduleCheck.checked) {
					if (document.getElementById('templateEditForm:newEventType').value == "") {
						document.getElementById('templateEditForm:newEventTypeError').style.display = "inline";
						checked = false;
					}
					if (document.getElementById('templateEditForm:newAttemptLimit').value == "") {
						document.getElementById('templateEditForm:newAttemptLimitError').style.display = "inline";
						checked = false;
					}
					if (document.getElementById('templateEditForm:newAmountAlgo').value == "") {
						document.getElementById('templateEditForm:newAmountAlgoError').style.display = "inline";
						checked = false;
					}
				}
				return checked;
			}

			function resetScheduleErrors() {
				if (!document.getElementById("templateEditForm:addSchedule").checked) {
					document.getElementById('templateEditForm:newEventTypeError').style.display = "none";
					document.getElementById('templateEditForm:newAttemptLimitError').style.display = "none";
					document.getElementById('templateEditForm:newAmountAlgoError').style.display = "none";
				}
			}
			
			function checkEntity(){
				check = true;
                var entityType = document.getElementById('templateEditForm:newEntityType');
				if (entityType != null && entityType.value == "") {
					document.getElementById('templateEditForm:newEntityTypeError').style.display = "inline";
					check = false;
				}
				return check;
			}
		//-->
	</script>

	<a4j:queue name="queue" ignoreDupResponses="true" size="1" sizeExceededBehavior="dropNext" requestDelay="500" />
	<rich:modalPanel id="templateModalPanel" autosized="true" minWidth="300" minHeight="100">
      	<f:facet name="header">
      		<h:panelGroup>
           	    <h:outputText value="#{lblPmo.edit_template}" rendered="#{MbPmoTemplates.editMode}"/>
           	    <h:outputText value="#{lblPmo.new_template}" rendered="#{MbPmoTemplates.newMode}"/>
			</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
	    </f:facet>
		<h:form id="templateEditForm">
  	    	<script type="text/javascript">//<!--
				oldValue["templateEditForm"] = "#{MbPmoTemplates.newTemplate.lang}";
			//-->
			</script>
			<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
				<h:panelGrid columns="2" styleClass="cardholderdata" columnClasses="firstColModal, width250">
					<h:outputLabel for="newLang" value="#{lblCommon.language}: " title="#{lblCommon.language}"/>
					<h:selectOneMenu id="newLang" value="#{MbPmoTemplates.newTemplate.lang}" rendered="#{MbPmoTemplates.newMode}" label="#{lblCommon.language}">
						<f:selectItems value="#{MbPmoTemplates.languages}"/>
					</h:selectOneMenu>
					<h:selectOneMenu id="editLang" value="#{MbPmoTemplates.newTemplate.lang}"
							rendered="#{MbPmoTemplates.editMode}"
							onchange="document.getElementById('template:confirmPanelForm:newValue').value = this.value;
									#{rich:component('template:confirmPanel')}.show()" label="#{lblCommon.language}">
						<f:selectItems value="#{MbPmoTemplates.languages}"/>
					</h:selectOneMenu>
					
					<h:outputLabel for="newLabel" value="* #{lblCommon.name}: " title="#{lblCommon.name}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
            			<h:inputText id="newLabel" 
            					value="#{MbPmoTemplates.newTemplate.label}" 
            					maxlength="2000"
            					label="#{lblCommon.name}"
            					onblur="hideErrorField(this)">
            			</h:inputText>
            			<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newLabelError" style="display:none;">
							<f:param name="fieldName" value="#{lblCommon.name}"/>
						</h:outputFormat>
           			</h:panelGrid>	
					
           			<h:outputLabel for="newPurpose" value="* #{lblPmo.purpose}: " title="#{lblPmo.purpose}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0" rendered="#{MbPmoTemplates.newMode}">
            			<h:selectOneMenu id="newPurpose" value="#{MbPmoTemplates.newTemplate.purposeId}" 
            				label="#{lblPmo.purpose}"
            				onblur="hideErrorField(this)">
	           				<f:selectItem itemValue=""/>
	           				<f:selectItems value="#{MbPmoTemplates.purposesForCombo}"/>
	           			</h:selectOneMenu>
	           			<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newPurposeError" style="display:none;">
							<f:param name="fieldName" value="#{lblPmo.purpose}"/>
						</h:outputFormat>
           			</h:panelGrid>
           			<h:panelGrid columns="1" cellspacing="0" cellpadding="0" rendered="#{MbPmoTemplates.editMode}">
            			<h:inputText id="newPurposeTitle"
            					value="#{MbPmoTemplates.newTemplate.providerName} - #{MbPmoTemplates.newTemplate.serviceName}" 
            					disabled="true" label="#{lblPmo.purpose}" rendered="#{MbPmoTemplates.newTemplate.providerName != null}">
            			</h:inputText>
            			<h:inputText rendered="#{MbPmoTemplates.newTemplate.providerName == null}"
            					value="#{MbPmoTemplates.newTemplate.serviceName}" 
            					disabled="true" label="#{lblPmo.purpose}">
            			</h:inputText>
           			</h:panelGrid>
           			
           			<h:outputLabel for="newStatus" value="* #{lblPmo.status}: " title="#{lblPmo.status}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
            			<h:selectOneMenu id="newStatus" value="#{MbPmoTemplates.newTemplate.status}" 
            				label="#{lblPmo.status}"
            				onblur="hideErrorField(this)">
	           				<f:selectItem itemValue=""/>
	           				<f:selectItems value="#{MbPmoTemplates.paymentStatuses}"/>
	           			</h:selectOneMenu>
	           			<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
							id="newStatusError" style="display:none;">
							<f:param name="fieldName" value="#{lblPmo.status}"/>
						</h:outputFormat>
           			</h:panelGrid>

					<h:outputLabel for="newEntityType" value="* #{lblCommon.entity_type}: " title="#{lblCommon.entity_type}" rendered="#{!MbPmoTemplates.isInstitutionTemplate()}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0" rendered="#{!MbPmoTemplates.isInstitutionTemplate()}">
						<h:selectOneMenu id="newEntityType"
										 value="#{MbPmoTemplates.newTemplate.entityType}"
										 label="#{lblCommon.entity_type}"
										 onblur="hideErrorField(this)">
							<f:selectItem itemValue=""/>
							<f:selectItems value="#{MbPmoTemplates.entityTypes}"/>
							<a4j:support event="onchange" reRender="selectObject, newObjectId"
										 action="#{MbPmoTemplates.prepareObject }"/>
						</h:selectOneMenu>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
										id="newEntityTypeError" style="display:none;">
							<f:param name="fieldName" value="#{lblCommon.entity_type}"/>
						</h:outputFormat>
					</h:panelGrid>

					<h:outputLabel for="newObjectId" value="* #{lblCommon.object_number}: " title="#{lblCommon.object_number}" rendered="#{!MbPmoTemplates.isInstitutionTemplate()}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0" rendered="#{!MbPmoTemplates.isInstitutionTemplate()}">
						<h:panelGrid columns="2" cellpadding="0" cellspacing="0">
							<h:inputText value="#{MbPmoTemplates.newTemplate.objectNumber}"
										 id="newObjectId" readonly="true"/>
							<h:panelGroup>
								<h:graphicImage url="/_img/icon_search.png" styleClass="searchComponent-icon" id="selectObject">
									<a4j:support immediate="true" event="onclick"
												 action="#{MbPmoTemplates.prepareObjectId}"
												 rendered="#{MbPmoTemplates.newTemplate.entityType != 'ENTTCUST'}"
												 oncomplete="if (!checkEntity()){return;}Richfaces.showModalPanel('objectModalPanel');"
												 reRender="objectModalPanel" limitToList="true" ajaxSingle="true">
									</a4j:support>
								</h:graphicImage>

							</h:panelGroup>
						</h:panelGrid>
						<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
										id="newObjectIdError" style="display:none;">
							<f:param name="fieldName" value="#{lblCommon.object_id}"/>
						</h:outputFormat>
					</h:panelGrid>
           			
           			<h:outputLabel for="newInst" value="#{lblCommon.institution}: " title="#{lblCommon.institution}"/>
					<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
		      			<h:inputText id="newInst"
            					value="#{MbPmoTemplates.newTemplate.instId} - #{MbPmoTemplates.newTemplate.instName}" 
            					disabled="true" label="#{lblCommon.institution}"
            					rendered="#{MbPmoTemplates.newTemplate.instId != null}" />
            			<h:inputText id="newInstNull"
            					value="" rendered="#{MbPmoTemplates.newTemplate.instId == null}" 
            					disabled="true" label="#{lblCommon.institution}"/>
           			</h:panelGrid>
           					
           			<h:outputLabel value="#{lblPmo.is_prepared_order}: " title="#{lblPmo.is_prepared_order}"/>
	      			<h:selectBooleanCheckbox id="newPrepOrder"
           					value="#{MbPmoTemplates.newTemplate.isPreparedOrder}"/>

					<h:outputLabel for="newDescription" value="#{lblCommon.description}: " title="#{lblCommon.description}"/>
           			<h:inputTextarea id="newDescription" 
           					value="#{MbPmoTemplates.newTemplate.description}" 
           					rows="3"
           					onkeypress="if (!limitText(event,this,2000)) return false;" 
							label="#{lblCommon.description}">
						<f:validateLength maximum="2000" />
					</h:inputTextarea>
				</h:panelGrid>
				<h:panelGroup id="scheduleFields" rendered="#{!MbPmoTemplates.isInstitutionTemplate()}">
					<a4j:region>
						<h:selectBooleanCheckbox id="addSchedule" value="#{MbPmoTemplates.addSchedule}"
								valueChangeListener="#{MbPmoTemplates.changeSheduleState}">
							<a4j:support event="onchange" reRender="schedule"
									ajaxSingle="true" limitToList="true"
									oncomplete="resetScheduleErrors()"/>
						</h:selectBooleanCheckbox>
					</a4j:region>
					<h:outputText value=" #{lblPmo.add_schedule}" styleClass="bold"/>

					<fieldset>
						<legend>#{lblPrc.schedule}</legend>
						<h:panelGrid id="schedule" columns="2" styleClass="cardholderdata"
								columnClasses="firstColModal, width250">
							<h:outputLabel for="newEventType" value="* #{lblCommon.event_type}: " title="#{lblCommon.event_type}"/>
							<a4j:region>
								<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
									<h:selectOneMenu id="newEventType"
											value="#{MbPmoTemplates.newTemplate.schedule.eventType}"
											label="#{lblCommon.event_type}"
											disabled="#{!MbPmoTemplates.addSchedule}"
											onblur="hideErrorField(this)">
										<a4j:support event="onchange" reRender="templateEditForm:newEntityType,newCycleId"
												ajaxSingle="true" limitToList="true"/>
										<f:selectItem itemValue=""/>
										<f:selectItems value="#{MbPmoTemplates.eventTypes}"/>
									</h:selectOneMenu>
									<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
											id="newEventTypeError" style="display:none;">
										<f:param name="fieldName" value="#{lblCommon.event_type}"/>
									</h:outputFormat>
								</h:panelGrid>
							</a4j:region>

							<h:outputLabel for="newAttemptLimit" value="* #{lblPmo.attempt_limit}: " title="#{lblPmo.attempt_limit}"/>
							<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
								<h:inputText id="newAttemptLimit"
										value="#{MbPmoTemplates.newTemplate.schedule.attemptLimit}"
										maxlength="4"
										onkeypress="if (!numbersOnly(this, event)) return false;"
										label="#{lblPmo.attempt_limit}"
										disabled="#{!MbPmoTemplates.addSchedule}"
										onblur="hideErrorField(this)">
								</h:inputText>
								<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
										id="newAttemptLimitError" style="display:none;">
									<f:param name="fieldName" value="#{lblPmo.attempt_limit}"/>
								</h:outputFormat>
							</h:panelGrid>

							<h:outputLabel for="newAmountAlgo" value="* #{lblPmo.amount_algorithm}: " title="#{lblPmo.amount_algorithm}"/>
							<h:panelGrid columns="1" cellspacing="0" cellpadding="0">
								<h:selectOneMenu id="newAmountAlgo"
										value="#{MbPmoTemplates.newTemplate.schedule.amountAlgorithm}"
										label="#{lblPmo.amount_algorithm}"
										disabled="#{!MbPmoTemplates.addSchedule}"
										onblur="hideErrorField(this)">
										<a4j:support event="onchange" ajaxSingle="true" limitToList="true" reRender="schedule"/>
									<f:selectItem itemValue=""/>
									<f:selectItems value="#{MbPmoTemplates.amountAlgorithms}"/>
								</h:selectOneMenu>
								<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
										id="newAmountAlgoError" style="display:none;">
									<f:param name="fieldName" value="#{lblPmo.amount_algorithm}"/>
								</h:outputFormat>
							</h:panelGrid>

							<h:panelGroup id="currencyLable" rendered="#{MbPmoTemplates.newTemplate.schedule.amountAlgorithm == 'POAA0003'}">
								<h:outputLabel for="currency" value="#{lblCommon.currency}: " title="#{lblCommon.currency}"/>
							</h:panelGroup>
							<h:panelGroup id="currencyEdit" rendered="#{MbPmoTemplates.newTemplate.schedule.amountAlgorithm == 'POAA0003'}">
								<h:selectOneMenu id="currency" value="#{MbPmoTemplates.newTemplate.currency}">
									<f:selectItem itemValue=""/>
									<f:selectItems value="#{CurrencyUtils.allCurrencies}"/>
								</h:selectOneMenu>
							</h:panelGroup>

							<h:panelGroup id="amountLabel" rendered="#{MbPmoTemplates.newTemplate.schedule.amountAlgorithm == 'POAA0003'}">
								<h:outputLabel for="amount" value="#{lblPmo.amount}: " title="#{lblPmo.amount}"/>
							</h:panelGroup>
							<h:panelGroup id="amountEdit" rendered="#{MbPmoTemplates.newTemplate.schedule.amountAlgorithm == 'POAA0003'}">
								<h:inputText id="amount" value="#{MbPmoTemplates.newTemplate.amount}"
											 onkeypress="if (!numbersOnly(this, event)) return false;" label="#{lblCommon.amount}" />
							</h:panelGroup>

							<h:outputLabel for="newCycleId" value="#{lblFcl.cycle}: " title="#{lblFcl.cycle}"/>
							<h:selectOneMenu id="newCycleId"
									value="#{MbPmoTemplates.newTemplate.schedule.cycleId}"
									disabled="#{!MbPmoTemplates.addSchedule}">
								<f:selectItem itemValue=""/>
								<f:selectItems value="#{MbPmoTemplates.cycles}"/>
							</h:selectOneMenu>
						</h:panelGrid>
					</fieldset>
				</h:panelGroup>
			</h:panelGroup>

      	    <h:panelGroup layout="block" styleClass="bottom_search_result_block_buttons">
				<h:panelGroup layout="block" styleClass="bottom_search_result_left_buttons">
	       	    	<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
	       	    		<h:outputText/>
                       	<bre:taggedCommandButton
                       			value="#{lblForm.save}" type="submit" action="#{MbPmoTemplates.save}"
                       			onclick="if (!checkTemplateFields()) return false; disableModalPanelBtns(this)"
			                   	oncomplete="enableModalPanelBtns(this); if (#{usession.noErrorResponse}) #{rich:component('templateModalPanel')}.hide()"
                       			reRender="#{rerenderList}"
                        		eventsQueue="queue"/>
                       	<bre:taggedCommandButton
                        		value="#{lblForm.cancel}" 
                        		action="#{MbPmoTemplates.cancel}" 
                        		immediate="true" limitToList="true"
                        		oncomplete="#{rich:component('templateModalPanel')}.hide()"
                        		reRender="templateModalPanel">
                        	<f:actionListener type="ru.bpc.jsf.A4JFormReset" />
                        </bre:taggedCommandButton>	
		    		</h:panelGrid>
		    	</h:panelGroup>
		    </h:panelGroup>
		</h:form>			
	</rich:modalPanel>

	<ui:include src="/pages/utils/langConfirmPanel.jspx">
    	<ui:param name="backingBean" value="#{MbPmoTemplates}"/>
    	<ui:param name="rerenderList" value="templateEditForm:newLabel, templateEditForm:newPurposeTitle, templateEditForm:newInst, templateEditForm:newDescription"/>
    	<ui:param name="editElem" value="templateEditForm:editLang"/>
    	<ui:param name="newValue" value="#{MbPmoTemplates.newTemplate.lang}"/>
    	<ui:param name="subviewId" value="template"/>
    	<ui:param name="formName" value="templateEditForm" />
    </ui:include>
    
    <ui:include src="/pages/pmo/pmoSelectObjectModalPanel.jspx">
    	<ui:param name="reRenderList" value="newObjectId"/>
		<ui:param name="bean" value="#{MbPmoTemplates}"/>
		<ui:param name="selectMethod" value="selectObject"/>
    </ui:include>	
    
</ui:composition>
</html>
