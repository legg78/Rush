<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:bm="http://www.bpc.ru/jsf/misc"
	xmlns:bre="http://www.bpc.ru/jsf/richfaces-ext">
	
<ui:composition>
	<rich:modalPanel id="typeEditModalPanel" autosized="true"
		minWidth="300" minHeight="100">
		<f:facet name="header">
			<h:panelGroup id="typeEditModalPanelHeader">
				<h:outputText value="#{lblEmv.edit_script_type}"
					rendered="#{MbEmvScriptType.editMode}" />
				<h:outputText value="#{lblEmv.new_script_type}"
					rendered="#{MbEmvScriptType.newMode}" />
			</h:panelGroup>
		</f:facet>
		<f:facet name="controls">
		</f:facet>
		
		<h:form id="typeEditModalPanelForm">
		<script type="text/javascript">
		//<!--
				function checkFields() {
					var checked = true;
					
					if (document.getElementById('typeEditModalPanelForm:type').value == "") {
						document.getElementById('typeEditModalPanelForm:typeError').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:priority').value == "") {
						document.getElementById('typeEditModalPanelForm:priorityError').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:repeatCount').value == "") {
						document.getElementById('typeEditModalPanelForm:repeatCountError').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:classByte').value == "") {
						document.getElementById('typeEditModalPanelForm:classByteError').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:instructionByte').value == "") {
						document.getElementById('typeEditModalPanelForm:instructionByteError').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:parameter1').value == "") {
						document.getElementById('typeEditModalPanelForm:parameter1Error').style.display = "inline";
						checked = false;
					}
					
					if (document.getElementById('typeEditModalPanelForm:parameter2').value == "") {
						document.getElementById('typeEditModalPanelForm:parameter2Error').style.display = "inline";
						checked = false;
					}
					
					return checked;
				}
				//-->
			</script>
			<h:panelGroup layout="block" styleClass="cardholderdata-wrapper">
				<h:panelGrid columns="2" styleClass="cardholderdata"
					columnClasses="firstColModal, width250">
					
						<h:outputLabel for="type" title="#{lblCommon.type}" 
										 	value="* #{lblCommon.type}:" />
																		
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">
							<h:selectOneMenu id="type"
								label="#{lblCommon.type}"
								value="#{MbEmvScriptType.editingItem.type}"
								onblur="hideErrorField(this)">
								<f:selectItem itemValue="" />
								<f:selectItems value="#{MbEmvScriptType.scriptType}" />
							</h:selectOneMenu>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="typeError" style="display:none;">
								<f:param name="fieldName" value="#{lblCommon.type}"/>
							</h:outputFormat>
						</h:panelGrid>
						
						<h:outputLabel for="priority" value="* #{lblCommon.priority}:" title="#{lblCommon.priority}" />
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">
							<h:inputText id="priority" 
								onkeypress="if (!numbersOnly(this, event)) return false;"
								onblur="hideErrorField(this)"
								maxlength="4" value="#{MbEmvScriptType.editingItem.priority}"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="priorityError" style="display:none;">
								<f:param name="fieldName" value="#{lblCommon.priority}"/>
							</h:outputFormat>																																			
						</h:panelGrid>
						
						<h:outputLabel for="Mac" value="#{lblEmv.mac}:" title="#{lblEmv.mac}"/>
						<h:selectBooleanCheckbox id="Mac" 
									value="#{MbEmvScriptType.editingItem.mac}"/>						
						
						<h:outputLabel for="tag71" value="#{lblEmv.tag71}:" title="#{lblEmv.tag71}"/>
						<h:selectBooleanCheckbox id="tag71"
								value="#{MbEmvScriptType.editingItem.tag71 }"/>
						
						<h:outputLabel for="tag72" value="#{lblEmv.tag72}:" title="#{lblEmv.tag72}"/>
						<h:selectBooleanCheckbox id="tag72"
								value="#{MbEmvScriptType.editingItem.tag72 }"/>
						
						<h:outputLabel for="condition" value="#{lblCommon.condition}:" title="#{lblCommon.condition}"/>
						<h:selectOneMenu id="condition"
							label="#{lblCommon.condition}"
							value="#{MbEmvScriptType.editingItem.condition}">
							<f:selectItem itemValue="" />
							<f:selectItems value="#{MbEmvScriptType.condition}" />
						</h:selectOneMenu>
						
						<h:outputLabel for="Retransmission" value="#{lblEmv.retransmission}:" 
								title="#{lblEmv.retransmission}"/>
						<h:selectBooleanCheckbox id="Retransmission"
								value="#{MbEmvScriptType.editingItem.retransmission}"/>
								
						<h:outputLabel for="repeatCount" value="* #{lblEmv.repeat_count}:" title="#{lblEmv.repeat_count}"/>
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">
							<h:inputText id="repeatCount" maxlength="4" onkeypress="if (!numbersOnly(this, event)) return false;"
								onblur="hideErrorField(this)"
								value="#{MbEmvScriptType.editingItem.repeatCount }"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="repeatCountError" style="display:none;">
								<f:param name="fieldName" value="#{lblEmv.repeat_count}"/>
							</h:outputFormat>	
						</h:panelGrid>		
						
						<h:outputLabel for="classByte" value="* #{lblEmv.class_byte}:" title="#{lblEmv.class_byte}"/>
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">
							<h:inputText id="classByte" maxlength="2"
								onblur="hideErrorField(this)"  
								value="#{MbEmvScriptType.editingItem.classByte}"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="classByteError" style="display:none;">
								<f:param name="fieldName" value="#{lblEmv.class_byte}"/>
							</h:outputFormat>		
						</h:panelGrid>			
								
						<h:outputLabel for="instructionByte" value="* #{lblEmv.instruction_byte}:"
								title="#{lblEmv.instruction_byte}"/>
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">
							<h:inputText id="instructionByte" maxlength="2"
								onblur="hideErrorField(this)"  
								value="#{MbEmvScriptType.editingItem.instructionByte }"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="instructionByteError" style="display:none;">
								<f:param name="fieldName" value="#{lblEmv.instruction_byte}"/>
							</h:outputFormat>	
						</h:panelGrid>	
							
						<h:outputLabel for="parameter1" value="* #{lblEmv.parameter1}:"
								title="#{lblEmv.parameter1}"/>
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">		
							<h:inputText id="parameter1" maxlength="2"
								onblur="hideErrorField(this)"  
								value="#{MbEmvScriptType.editingItem.parameter1 }"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="parameter1Error" style="display:none;">
								<f:param name="fieldName" value="#{lblEmv.parameter1}"/>
							</h:outputFormat>	
						</h:panelGrid>
								
						<h:outputLabel for="parameter2" value="* #{lblEmv.parameter2}:"
								title="#{lblEmv.parameter2}"/>
						<h:panelGrid columns="1" cellpadding="0" cellspacing="0">		
							<h:inputText id="parameter2" maxlength="2"
								onblur="hideErrorField(this)"  
								value="#{MbEmvScriptType.editingItem.parameter2 }"/>
							<h:outputFormat value="#{lblMsg.value_request}" styleClass="errorMarker"
								id="parameter2Error" style="display:none;">
								<f:param name="fieldName" value="#{lblEmv.parameter2}"/>
							</h:outputFormat>	
						</h:panelGrid>
														
						<h:outputLabel for="req_length_data" value="#{lblEmv.req_length_data}:" 
								title="#{lblEmv.req_length_data}"/>
						<h:selectBooleanCheckbox id="req_length_data" disabled="#{MbEmvScriptType.editMode}"
								value="#{MbEmvScriptType.editingItem.reqLengthData}"/>
								
						<h:outputLabel for="is_used_by_user" value="#{lblEmv.is_used_by_user}:" 
								title="#{lblEmv.is_used_by_user}"/>
						<h:selectBooleanCheckbox id="is_used_by_user"
								value="#{MbEmvScriptType.editingItem.isUsedByUser}"/>
								
						<h:outputLabel for="form_url" value="#{lblEmv.form_url}:" 
								title="#{lblEmv.form_url}"/>
						<h:inputText id="form_url" maxlength="200"  
								value="#{MbEmvScriptType.editingItem.formUrl}"/>																																			
						</h:panelGrid>														
			</h:panelGroup>
			
			<h:panelGroup layout="block"
				styleClass="bottom_search_result_block_buttons">
				<h:panelGroup layout="block"
					styleClass="bottom_search_result_left_buttons">
					<h:panelGrid columns="3" columnClasses="width99P,,paddingR12">
						<h:outputText />
						<bre:taggedCommandButton value="#{lblForm.save}" type="submit"
							action="#{MbEmvScriptType.save}"							
							onclick=" if (!checkFields()) return false;"
							oncomplete="if (#{usession.noErrorResponse})
								{#{rich:component('typeEditModalPanel')}.hide();
			                   			updateHeight();}"
							reRender="typeEditModalPanelForm,scriptTypeTable, EmvScriptTypeScroller, pagesNum, btnPanel, detailsTab" />
							
						<bre:taggedCommandButton value="#{lblForm.cancel}"
							action="#{MbEmvScriptType.cancel}" immediate="true"
							limitToList="true"
							oncomplete="#{rich:component('typeEditModalPanel')}.hide();
										updateHeight();"
							reRender="typeEditModalPanelForm">
							<f:actionListener type="ru.bpc.jsf.A4JFormReset" />						
						</bre:taggedCommandButton>
					</h:panelGrid>
				</h:panelGroup>
			</h:panelGroup>
		</h:form>
	</rich:modalPanel>	
</ui:composition>
</html>